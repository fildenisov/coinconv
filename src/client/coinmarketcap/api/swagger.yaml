---
swagger: "2.0"
info:
  description: "# Introduction\nThe CoinMarketCap API is a suite of high-performance\
    \ RESTful JSON endpoints that are specifically designed to meet the mission-critical\
    \ demands of application developers, data scientists, and enterprise business\
    \ platforms.\n\nThis API reference includes all technical documentation developers\
    \ need to integrate third-party applications and platforms. Additional answers\
    \ to common questions can be found in the [CoinMarketCap API FAQ](https://coinmarketcap.com/api/faq).\n\
    \n# Quick Start Guide\n\nFor developers eager to hit the ground running with the\
    \ CoinMarketCap API here are a few quick steps to make your first call with the\
    \ API.\n\n1. **Sign up for a free Developer Portal account.** You can sign up\
    \ at [pro.coinmarketcap.com](https://pro.coinmarketcap.com) - This is our live\
    \ production environment with the latest market data. Select the free `Basic`\
    \ plan if it meets your needs or upgrade to a paid tier.\n2. **Copy your API Key.**\
    \ Once you sign up you'll land on your Developer Portal account dashboard. Copy\
    \ your API from the `API Key` box in the top left panel.\n3. **Make a test call\
    \ using your key.** You may use the code examples provided below to make a test\
    \ call with your programming language of choice. This example [fetches all active\
    \ cryptocurrencies by market cap and return market values in USD](https://pro-api.coinmarketcap.com/v1/cryptocurrency/listings/latest?start=1&limit=5000&convert=USD).\
    \  \n  *Be sure to replace the API Key in sample code with your own and use API\
    \ domain `pro-api.coinmarketcap.com` or use the test API Key `b54bcf4d-1bca-4e8e-9a24-22ff2c3d462c`\
    \ for `sandbox-api.coinmarketcap.com` testing with our sandbox environment. Please\
    \ note that our sandbox api has mock data and should not be used in your application.*\n\
    4. **Postman Collection** To help with development, we provide a fully featured\
    \ postman collection that you can import and use immediately! [Read more here](https://coinmarketcap.com/alexandria/article/register-for-coinmarketcap-api).\n\
    5. **Implement your application.** Now that you've confirmed your API Key is working,\
    \ get familiar with the API by reading the rest of this API Reference and commence\
    \ building your application!\n\n***Note:** Making HTTP requests on the client\
    \ side with Javascript is currently prohibited through CORS configuration. This\
    \ is to protect your API Key which should not be visible to users of your application\
    \ so your API Key is not stolen. Secure your API Key by routing calls through\
    \ your own backend service.*\n\n<details open=\"open\">\n<summary>**View Quick\
    \ Start Code Examples**</summary>\n<details open=\"open\">\n<summary>cURL command\
    \ line</summary>\n```bash\n\ncurl -H \"X-CMC_PRO_API_KEY: b54bcf4d-1bca-4e8e-9a24-22ff2c3d462c\"\
    \ -H \"Accept: application/json\" -d \"start=1&limit=5000&convert=USD\" -G https://sandbox-api.coinmarketcap.com/v1/cryptocurrency/listings/latest\n\
    \n```    \n</details><details>\n<summary>Node.js</summary>\n```javascript \n\n\
    /* Example in Node.js */\nconst axios = require('axios');\n\nlet response = null;\n\
    new Promise(async (resolve, reject) => {\n  try {\n    response = await axios.get('https://sandbox-api.coinmarketcap.com/v1/cryptocurrency/listings/latest',\
    \ {\n      headers: {\n        'X-CMC_PRO_API_KEY': 'b54bcf4d-1bca-4e8e-9a24-22ff2c3d462c',\n\
    \      },\n    });\n  } catch(ex) {\n    response = null;\n    // error\n    console.log(ex);\n\
    \    reject(ex);\n  }\n  if (response) {\n    // success\n    const json = response.data;\n\
    \    console.log(json);\n    resolve(json);\n  }\n});\n\n```  \n</details><details>\n\
    <summary>Python</summary>\n```python\n  \n #This example uses Python 2.7 and the\
    \ python-request library.\n\nfrom requests import Request, Session\nfrom requests.exceptions\
    \ import ConnectionError, Timeout, TooManyRedirects\nimport json\n\nurl = 'https://sandbox-api.coinmarketcap.com/v1/cryptocurrency/listings/latest'\n\
    parameters = {\n  'start':'1',\n  'limit':'5000',\n  'convert':'USD'\n}\nheaders\
    \ = {\n  'Accepts': 'application/json',\n  'X-CMC_PRO_API_KEY': 'b54bcf4d-1bca-4e8e-9a24-22ff2c3d462c',\n\
    }\n\nsession = Session()\nsession.headers.update(headers)\n\ntry:\n  response\
    \ = session.get(url, params=parameters)\n  data = json.loads(response.text)\n\
    \  print(data)\nexcept (ConnectionError, Timeout, TooManyRedirects) as e:\n  print(e)\n\
    \  \n```\n</details><details>\n<summary>PHP</summary>\n```php\n\n/**\n * Requires\
    \ curl enabled in php.ini\n **/\n\n<?php\n$url = 'https://sandbox-api.coinmarketcap.com/v1/cryptocurrency/listings/latest';\n\
    $parameters = [\n  'start' => '1',\n  'limit' => '5000',\n  'convert' => 'USD'\n\
    ];\n\n$headers = [\n  'Accepts: application/json',\n  'X-CMC_PRO_API_KEY: b54bcf4d-1bca-4e8e-9a24-22ff2c3d462c'\n\
    ];\n$qs = http_build_query($parameters); // query string encode the parameters\n\
    $request = \"{$url}?{$qs}\"; // create the request URL\n\n\n$curl = curl_init();\
    \ // Get cURL resource\n// Set cURL options\ncurl_setopt_array($curl, array(\n\
    \  CURLOPT_URL => $request,            // set the request URL\n  CURLOPT_HTTPHEADER\
    \ => $headers,     // set the headers \n  CURLOPT_RETURNTRANSFER => 1        \
    \ // ask for raw response instead of bool\n));\n\n$response = curl_exec($curl);\
    \ // Send the request, save the response\nprint_r(json_decode($response)); //\
    \ print json decoded response\ncurl_close($curl); // Close request\n?>\n\n```\n\
    </details><details>\n<summary>Java</summary>\n```java\n\n/** \n * This example\
    \ uses the Apache HTTPComponents library. \n */\n\nimport org.apache.http.HttpEntity;\n\
    import org.apache.http.HttpHeaders;\nimport org.apache.http.NameValuePair;\nimport\
    \ org.apache.http.client.methods.CloseableHttpResponse;\nimport org.apache.http.client.methods.HttpGet;\n\
    import org.apache.http.client.utils.URIBuilder;\nimport org.apache.http.impl.client.CloseableHttpClient;\n\
    import org.apache.http.impl.client.HttpClients;\nimport org.apache.http.message.BasicNameValuePair;\n\
    import org.apache.http.util.EntityUtils;\n\nimport java.io.IOException;\nimport\
    \ java.net.URISyntaxException;\nimport java.util.ArrayList;\nimport java.util.List;\n\
    \npublic class JavaExample {\n\n  private static String apiKey = \"b54bcf4d-1bca-4e8e-9a24-22ff2c3d462c\"\
    ;\n\n  public static void main(String[] args) {\n    String uri = \"https://sandbox-api.coinmarketcap.com/v1/cryptocurrency/listings/latest\"\
    ;\n    List<NameValuePair> paratmers = new ArrayList<NameValuePair>();\n    paratmers.add(new\
    \ BasicNameValuePair(\"start\",\"1\"));\n    paratmers.add(new BasicNameValuePair(\"\
    limit\",\"5000\"));\n    paratmers.add(new BasicNameValuePair(\"convert\",\"USD\"\
    ));\n\n    try {\n      String result = makeAPICall(uri, paratmers);\n      System.out.println(result);\n\
    \    } catch (IOException e) {\n      System.out.println(\"Error: cannont access\
    \ content - \" + e.toString());\n    } catch (URISyntaxException e) {\n      System.out.println(\"\
    Error: Invalid URL \" + e.toString());\n    }\n  }\n\n  public static String makeAPICall(String\
    \ uri, List<NameValuePair> parameters)\n      throws URISyntaxException, IOException\
    \ {\n    String response_content = \"\";\n\n    URIBuilder query = new URIBuilder(uri);\n\
    \    query.addParameters(parameters);\n\n    CloseableHttpClient client = HttpClients.createDefault();\n\
    \    HttpGet request = new HttpGet(query.build());\n\n    request.setHeader(HttpHeaders.ACCEPT,\
    \ \"application/json\");\n    request.addHeader(\"X-CMC_PRO_API_KEY\", apiKey);\n\
    \n    CloseableHttpResponse response = client.execute(request);\n\n    try {\n\
    \      System.out.println(response.getStatusLine());\n      HttpEntity entity\
    \ = response.getEntity();\n      response_content = EntityUtils.toString(entity);\n\
    \      EntityUtils.consume(entity);\n    } finally {\n      response.close();\n\
    \    }\n\n    return response_content;\n  }\n\n}\n\n```\n</details><details>\n\
    <summary>C#</summary>\n```csharp\n\nusing System;\nusing System.Net;\nusing System.Web;\n\
    \nclass CSharpExample\n{\n  private static string API_KEY = \"b54bcf4d-1bca-4e8e-9a24-22ff2c3d462c\"\
    ;\n\n  public static void Main(string[] args)\n  {\n    try\n    {\n    Console.WriteLine(makeAPICall());\n\
    \    }\n    catch (WebException e)\n    {\n    Console.WriteLine(e.Message);\n\
    \    }\n  }\n\n  static string makeAPICall()\n  {\n    var URL = new UriBuilder(\"\
    https://sandbox-api.coinmarketcap.com/v1/cryptocurrency/listings/latest\");\n\n\
    \    var queryString = HttpUtility.ParseQueryString(string.Empty);\n    queryString[\"\
    start\"] = \"1\";\n    queryString[\"limit\"] = \"5000\";\n    queryString[\"\
    convert\"] = \"USD\";\n\n    URL.Query = queryString.ToString();\n\n    var client\
    \ = new WebClient();\n    client.Headers.Add(\"X-CMC_PRO_API_KEY\", API_KEY);\n\
    \    client.Headers.Add(\"Accepts\", \"application/json\");\n    return client.DownloadString(URL.ToString());\n\
    \n  }\n\n}\n    \n```\n</details><details>\n<summary>Go</summary>\n```go\n\npackage\
    \ main\n\nimport (\n  \"fmt\"\n  \"io/ioutil\"\n  \"log\"\n  \"net/http\"\n  \"\
    net/url\"\n  \"os\"\n)\n\nfunc main() {\n  client := &http.Client{}\n  req, err\
    \ := http.NewRequest(\"GET\",\"https://sandbox-api.coinmarketcap.com/v1/cryptocurrency/listings/latest\"\
    , nil)\n  if err != nil {\n    log.Print(err)\n    os.Exit(1)\n  }\n\n  q := url.Values{}\n\
    \  q.Add(\"start\", \"1\")\n  q.Add(\"limit\", \"5000\")\n  q.Add(\"convert\"\
    , \"USD\")\n\n  req.Header.Set(\"Accepts\", \"application/json\")\n  req.Header.Add(\"\
    X-CMC_PRO_API_KEY\", \"b54bcf4d-1bca-4e8e-9a24-22ff2c3d462c\")\n  req.URL.RawQuery\
    \ = q.Encode()\n\n\n  resp, err := client.Do(req);\n  if err != nil {\n    fmt.Println(\"\
    Error sending request to server\")\n    os.Exit(1)\n  }\n  fmt.Println(resp.Status);\n\
    \  respBody, _ := ioutil.ReadAll(resp.Body)\n  fmt.Println(string(respBody));\n\
    \n}\n\n```\n</details></details>\n\n# Authentication\n\n### Acquiring an API Key\n\
    All HTTP requests made against the CoinMarketCap API must be validated with an\
    \ API Key. If you don't have an API Key yet visit the [API Developer Portal](https://coinmarketcap.com/api/)\
    \ to register for one.\n\n### Using Your API Key\nYou may use any *server side*\
    \ programming language that can make HTTP requests to target the CoinMarketCap\
    \ API. All requests should target domain `https://pro-api.coinmarketcap.com`.\n\
    \nYou can supply your API Key in REST API calls in one of two ways:\n\n1. Preferred\
    \ method: Via a custom header named `X-CMC_PRO_API_KEY`\n2. Convenience method:\
    \ Via a query string parameter named `CMC_PRO_API_KEY`\n\n***Security Warning:**\
    \ It's important to secure your API Key against public access. The custom header\
    \ option is strongly recommended over the querystring option for passing your\
    \ API Key in a production environment.*\n\n### API Key Usage Credits\n\nMost API\
    \ plans include a daily and monthly limit or \"hard cap\" to the number of data\
    \ calls that can be made. This usage is tracked as API \"call credits\" which\
    \ are incremented 1:1 against successful (HTTP Status 200) data calls made with\
    \ your key with these exceptions:\n- Account management endpoints, usage stats\
    \ endpoints, and error responses are not included in this limit.  \n- **Paginated\
    \ endpoints:** List-based endpoints track an additional call credit for every\
    \ 100 data points returned (rounded up) beyond our 100 data point defaults. Our\
    \ lightweight `/map` endpoints are not included in this limit and always count\
    \ as 1 credit. See individual endpoint documentation for more details.   \n- **Bundled\
    \ API calls:** Many endpoints support [resource and currency conversion bundling](#section/Standards-and-Conventions).\
    \ Bundled resources are also tracked as 1 call credit for every 100 resources\
    \ returned (rounded up). Optional currency conversion bundling using the `convert`\
    \ parameter also increment an additional API call credit for every conversion\
    \ requested beyond the first.\n\nYou can log in to the [Developer Portal](https://coinmarketcap.com/api/)\
    \ to view live stats on your API Key usage and limits including the number of\
    \ credits used for each call. You can also find call credit usage in the JSON\
    \ response for each API call. See the [`status` object](#section/Standards-and-Conventions)\
    \ for details. You may also use the [/key/info](#operation/getV1KeyInfo) endpoint\
    \ to quickly review your usage and when daily/monthly credits reset directly from\
    \ the API.  \n\n***Note:** \"day\" and \"month\" credit usage periods are defined\
    \ relative to your API subscription. For example, if your monthly subscription\
    \ started on the 5th at 5:30am, this billing anchor is also when your monthly\
    \ credits refresh each month. The free Basic tier resets each day at UTC midnight\
    \ and each calendar month at UTC midnight.*   \n\n# Endpoint Overview\n\n### The\
    \ CoinMarketCap API is divided into 8 top-level categories\nEndpoint Category\
    \  | Description\n-------------------|---------------\n[/cryptocurrency/*](#tag/cryptocurrency)\
    \ | Endpoints that return data around cryptocurrencies such as ordered cryptocurrency\
    \ lists or price and volume data.\n[/exchange/*](#tag/exchange) | Endpoints that\
    \ return data around cryptocurrency exchanges such as ordered exchange lists and\
    \ market pair data.\n[/global-metrics/*](#tag/global-metrics) | Endpoints that\
    \ return aggregate market data such as global market cap and BTC dominance.\n\
    [/tools/*](#tag/tools)  | Useful utilities such as cryptocurrency and fiat price\
    \ conversions.\n[/blockchain/*](#tag/blockchain)  | Endpoints that return block\
    \ explorer related data for blockchains.\n[/fiat/*](#tag/fiat) | Endpoints that\
    \ return data around fiats currencies including mapping to CMC IDs.\n[/partners/*](#tag/partners)\
    \  | Endpoints for convenient access to 3rd party crypto data.\n[/key/*](#tag/key)\
    \  | API key administration endpoints to review and manage your usage.\n[/content/*](#tag/content)\
    \  | Endpoints that return cryptocurrency-related news, headlines, articles, posts,\
    \ and comments.\n\n### Endpoint paths follow a pattern matching the type of data\
    \ provided\n\nEndpoint Path  | Endpoint Type | Description\n----------------------|-------------|---------\n\
    */latest | Latest Market Data | Latest market ticker quotes and averages for cryptocurrencies\
    \ and exchanges.\n*/historical | Historical Market Data | Intervals of historic\
    \ market data like OHLCV data or data for use in charting libraries.\n*/info |\
    \ Metadata | Cryptocurrency and exchange metadata like block explorer URLs and\
    \ logos.\n*/map | ID Maps | Utility endpoints to get a map of resources to CoinMarketCap\
    \ IDs.\n\n###  Cryptocurrency and exchange endpoints provide 2 different ways\
    \ of accessing data depending on purpose\n\n- **Listing endpoints:** Flexible\
    \ paginated `*/listings/*` endpoints allow you to sort and filter lists of data\
    \ like cryptocurrencies by market cap or exchanges by volume.\n- **Item endpoints:**\
    \ Convenient ID-based resource endpoints like `*/quotes/*` and `*/market-pairs/*`\
    \ allow you to bundle several IDs; for example, this allows you to get latest\
    \ market quotes for a specific set of cryptocurrencies in one call.\n\n# Standards\
    \ and Conventions\n\nEach HTTP request must contain the header `Accept: application/json`.\
    \ You should also send an `Accept-Encoding: deflate, gzip` header to receive data\
    \ fast and efficiently.\n\n### Endpoint Response Payload Format\nAll endpoints\
    \ return data in JSON format with the results of your query under `data` if the\
    \ call is successful.\n\nA `Status` object is always included for both successful\
    \ calls and failures when possible. The `Status` object always includes the current\
    \ time on the server when the call was executed as `timestamp`, the number of\
    \ API call credits this call utilized as `credit_count`, and the number of milliseconds\
    \ it took to process the request as `elapsed`. Any details about errors encountered\
    \ can be found under the `error_code` and `error_message`. See [Errors and Rate\
    \ Limits](#section/Errors-and-Rate-Limits) for details on errors.\n\n```\n{\n\
    \  \"data\" : {\n    ...\n  },\n  \"status\": {\n    \"timestamp\": \"2018-06-06T07:52:27.273Z\"\
    ,\n    \"error_code\": 400,\n    \"error_message\": \"Invalid value for \\\"id\\\
    \"\",\n    \"elapsed\": 0,\n    \"credit_count\": 0\n  }\n}\n```\n\n### Cryptocurrency,\
    \ Exchange, and Fiat currency identifiers\n- Cryptocurrencies may be identified\
    \ in endpoints using either the cryptocurrency's unique CoinMarketCap ID as `id`\
    \ (eg. `id=1` for Bitcoin) or the cryptocurrency's symbol (eg. `symbol=BTC` for\
    \ Bitcoin). For a current list of supported cryptocurrencies use our [`/cryptocurrency/map`\
    \ call](#operation/getV1CryptocurrencyMap).\n- Exchanges may be identified in\
    \ endpoints using either the exchange's unique CoinMarketCap ID as `id` (eg. `id=270`\
    \ for Binance) or the exchange's web slug (eg. `slug=binance` for Binance). For\
    \ a current list of supported exchanges use our [`/exchange/map` call](#operation/getV1ExchangeMap).\n\
    - All fiat currency options use the standard [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html)\
    \ currency code (eg. `USD` for the US Dollar). For a current list of supported\
    \ fiat currencies use our [`/fiat/map`](#operation/getV1FiatMap) endpoint. Unless\
    \ otherwise stated, endpoints with fiat currency options like our `convert` parameter\
    \ support these 93 major currency codes:\n\nCurrency | Currency Code | CoinMarketCap\
    \ ID\n---------|---------------|-------------\nUnited States Dollar ($) | USD\
    \ | 2781\nAlbanian Lek (L) | ALL | 3526\nAlgerian Dinar (د.ج) | DZD | 3537\nArgentine\
    \ Peso ($) | ARS | 2821\nArmenian Dram (֏) | AMD | 3527\nAustralian Dollar ($)\
    \ | AUD | 2782\nAzerbaijani Manat (₼) | AZN | 3528\nBahraini Dinar (.د.ب) | BHD\
    \ | 3531\nBangladeshi Taka (৳) | BDT | 3530\nBelarusian Ruble (Br) | BYN | 3533\n\
    Bermudan Dollar ($) | BMD | 3532\nBolivian Boliviano (Bs.) | BOB | 2832\nBosnia-Herzegovina\
    \ Convertible Mark (KM) | BAM | 3529\nBrazilian Real (R$) | BRL | 2783\nBulgarian\
    \ Lev (лв) | BGN | 2814\nCambodian Riel (៛) | KHR | 3549\nCanadian Dollar ($)\
    \ | CAD | 2784\nChilean Peso ($) | CLP | 2786\nChinese Yuan (¥) | CNY | 2787\n\
    Colombian Peso ($) | COP | 2820\nCosta Rican Colón (₡) | CRC | 3534\nCroatian\
    \ Kuna (kn) | HRK | 2815\nCuban Peso ($) | CUP | 3535\nCzech Koruna (Kč) | CZK\
    \ | 2788\nDanish Krone (kr) | DKK | 2789\nDominican Peso ($) | DOP | 3536\nEgyptian\
    \ Pound (£) | EGP | 3538\nEuro (€) | EUR | 2790\nGeorgian Lari (₾) | GEL | 3539\n\
    Ghanaian Cedi (₵) | GHS | 3540\nGuatemalan Quetzal (Q) | GTQ | 3541\nHonduran\
    \ Lempira (L) | HNL | 3542\nHong Kong Dollar ($) | HKD | 2792\nHungarian Forint\
    \ (Ft) | HUF | 2793\nIcelandic Króna (kr) | ISK | 2818\nIndian Rupee (₹) | INR\
    \ | 2796\nIndonesian Rupiah (Rp) | IDR | 2794\nIranian Rial (﷼) | IRR | 3544\n\
    Iraqi Dinar (ع.د) | IQD | 3543\nIsraeli New Shekel (₪) | ILS | 2795\nJamaican\
    \ Dollar ($) | JMD | 3545\nJapanese Yen (¥) | JPY | 2797\nJordanian Dinar (د.ا\
    ) | JOD | 3546\nKazakhstani Tenge (₸) | KZT | 3551\nKenyan Shilling (Sh) | KES\
    \ | 3547\nKuwaiti Dinar (د.ك) | KWD | 3550\nKyrgystani Som (с) | KGS | 3548\n\
    Lebanese Pound (ل.ل) | LBP | 3552\nMacedonian Denar (ден) | MKD | 3556\nMalaysian\
    \ Ringgit (RM) | MYR | 2800\nMauritian Rupee (₨) | MUR | 2816\nMexican Peso ($)\
    \ | MXN | 2799\nMoldovan Leu (L) | MDL | 3555\nMongolian Tugrik (₮) | MNT | 3558\n\
    Moroccan Dirham (د.م.) | MAD | 3554\nMyanma Kyat (Ks) | MMK | 3557\nNamibian Dollar\
    \ ($) | NAD | 3559\nNepalese Rupee (₨) | NPR | 3561\nNew Taiwan Dollar (NT$) |\
    \ TWD | 2811\nNew Zealand Dollar ($) | NZD | 2802\nNicaraguan Córdoba (C$) | NIO\
    \ | 3560\nNigerian Naira (₦) | NGN | 2819\nNorwegian Krone (kr) | NOK | 2801\n\
    Omani Rial (ر.ع.) | OMR | 3562\nPakistani Rupee (₨) | PKR | 2804\nPanamanian Balboa\
    \ (B/.) | PAB | 3563\nPeruvian Sol (S/.) | PEN | 2822\nPhilippine Peso (₱) | PHP\
    \ | 2803\nPolish Złoty (zł) | PLN | 2805\nPound Sterling (£) | GBP | 2791\nQatari\
    \ Rial (ر.ق) | QAR | 3564\nRomanian Leu (lei) | RON | 2817\nRussian Ruble (₽)\
    \ | RUB | 2806\nSaudi Riyal (ر.س) | SAR | 3566\nSerbian Dinar (дин.) | RSD | 3565\n\
    Singapore Dollar (S$) | SGD | 2808\nSouth African Rand (R) | ZAR | 2812\nSouth\
    \ Korean Won (₩) | KRW | 2798\nSouth Sudanese Pound (£) | SSP | 3567\nSovereign\
    \ Bolivar (Bs.) | VES | 3573\nSri Lankan Rupee (Rs) | LKR | 3553\nSwedish Krona\
    \ (  kr) | SEK | 2807\nSwiss Franc (Fr) | CHF | 2785\nThai Baht (฿) | THB | 2809\n\
    Trinidad and Tobago Dollar ($) | TTD | 3569\nTunisian Dinar (د.ت) | TND | 3568\n\
    Turkish Lira (₺) | TRY | 2810\nUgandan Shilling (Sh) | UGX | 3570\nUkrainian Hryvnia\
    \ (₴) | UAH | 2824\nUnited Arab Emirates Dirham (د.إ) | AED | 2813\nUruguayan\
    \ Peso ($) | UYU | 3571\nUzbekistan Som (so'm) | UZS | 3572\nVietnamese Dong (₫\
    ) | VND | 2823\n  \nAlong with these four precious metals:\n  \nPrecious Metal\
    \ | Currency Code | CoinMarketCap ID\n---------|---------------|-------------\n\
    Gold Troy Ounce | XAU | 3575\nSilver Troy Ounce | XAG | 3574\nPlatinum Ounce |\
    \ XPT | 3577\nPalladium Ounce | XPD | 3576\n \n***Warning:** **Using CoinMarketCap\
    \ IDs is always recommended as not all cryptocurrency symbols are unique. They\
    \ can also change with a cryptocurrency rebrand.** If a symbol is used the API\
    \ will always default to the cryptocurrency with the highest market cap if there\
    \ are multiple matches. Our `convert` parameter also defaults to fiat if a cryptocurrency\
    \ symbol also matches a supported fiat currency. You may use the convenient `/map`\
    \ endpoints to quickly find the corresponding CoinMarketCap ID for a cryptocurrency\
    \ or exchange.*\n\n### Bundling API Calls\n- Many endpoints support ID and crypto/fiat\
    \ currency conversion bundling. This means you can pass multiple comma-separated\
    \ values to an endpoint to query or convert several items at once. Check the `id`,\
    \ `symbol`, `slug`, and `convert` query parameter descriptions in the endpoint\
    \ documentation to see if this is supported for an endpoint.\n- Endpoints that\
    \ support bundling return data as an object map instead of an array. Each key-value\
    \ pair will use the identifier you passed in as the key.\n\nFor example, if you\
    \ passed `symbol=BTC,ETH` to `/v1/cryptocurrency/quotes/latest` you would receive:\n\
    \n```\n\"data\" : {\n    \"BTC\" : {\n      ...\n    },\n    \"ETH\" : {\n   \
    \   ...\n    }\n}\n```\n\nOr if you passed `id=1,1027` you would receive:\n\n\
    ```\n\"data\" : {\n    \"1\" : {\n      ...\n    },\n    \"1027\" : {\n      ...\n\
    \    }\n}\n```\n\nPrice conversions that are returned inside endpoint responses\
    \ behave in the same fashion. These are enclosed in a `quote` object.\n\n### Date\
    \ and Time Formats\n- All endpoints that require date/time parameters allow timestamps\
    \ to be passed in either [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html)\
    \ format (eg. `2018-06-06T01:46:40Z`) or in Unix time (eg. `1528249600`). Timestamps\
    \ that are passed in ISO 8601 format support basic and extended notations; if\
    \ a timezone is not included, UTC will be the default.\n- All timestamps returned\
    \ in JSON payloads are returned in UTC time using human-readable ISO 8601 format\
    \ which follows this pattern: `yyyy-mm-ddThh:mm:ss.mmmZ`. The final `.mmm` designates\
    \ milliseconds. Per the ISO 8601 spec the final `Z` is a constant that represents\
    \ UTC time.\n- Data is collected, recorded, and reported in UTC time unless otherwise\
    \ specified.\n\n### Versioning\nThe CoinMarketCap API is versioned to guarantee\
    \ new features and updates are non-breaking. The latest version of this API is\
    \ `/v1/`.\n\n# Errors and Rate Limits\n\n### API Request Throttling\nUse of the\
    \ CoinMarketCap API is subject to API call rate limiting or \"request throttling\"\
    . This is the number of HTTP calls that can be made simultaneously or within the\
    \ same minute with your API Key before receiving an HTTP 429 \"Too Many Requests\"\
    \ throttling error. This limit scales with the <a rel=\"noopener noreferrer\"\
    \ href=\"https://pro.coinmarketcap.com/features\" target=\"_blank\">usage tier</a>\
    \ and resets every 60 seconds. Please review our <a rel=\"noopener noreferrer\"\
    \ href=\"#section/Best-Practices\" target=\"_blank\">Best Practices</a> for implementation\
    \ strategies that work well with rate limiting.\n\n### HTTP Status Codes\nThe\
    \ API uses standard HTTP status codes to indicate the success or failure of an\
    \ API call.\n\n- `400 (Bad Request)` The server could not process the request,\
    \ likely due to an invalid argument.\n- `401 (Unauthorized)` Your request lacks\
    \ valid authentication credentials, likely an issue with your API Key.\n- `402\
    \ (Payment Required)` Your API request was rejected due to it being a paid subscription\
    \ plan with an overdue balance. Pay the balance in the [Developer Portal billing\
    \ tab](https://pro.coinmarketcap.com/account/plan) and it will be enabled.\n-\
    \ `403 (Forbidden)` Your request was rejected due to a permission issue, likely\
    \ a restriction on the API Key's associated service plan. Here is a [convenient\
    \ map](https://coinmarketcap.com/api/features) of service plans to endpoints.\n\
    - `429 (Too Many Requests)` The API Key's rate limit was exceeded; consider slowing\
    \ down your API Request frequency if this is an HTTP request throttling error.\
    \ Consider upgrading your service plan if you have reached your monthly API call\
    \ credit limit for the day/month.\n- `500 (Internal Server Error)` An unexpected\
    \ server issue was encountered.\n\n### Error Response Codes\nA `Status` object\
    \ is always included in the JSON response payload for both successful calls and\
    \ failures when possible. During error scenarios you may reference the `error_code`\
    \ and `error_message` properties of the Status object. One of the API error codes\
    \ below will be returned if applicable otherwise the HTTP status code for the\
    \ general error type is returned.\n   \nHTTP Status | Error Code | Error Message\n\
    ------------|----------------|-------------\n401 | 1001 [API_KEY_INVALID] | This\
    \ API Key is invalid.\n401 | 1002 [API_KEY_MISSING] | API key missing.\n402 |\
    \ 1003 [API_KEY_PLAN_REQUIRES_PAYEMENT] | Your API Key must be activated. Please\
    \ go to pro.coinmarketcap.com/account/plan.\n402 | 1004 [API_KEY_PLAN_PAYMENT_EXPIRED]\
    \ | Your API Key's subscription plan has expired.\n403 | 1005 [API_KEY_REQUIRED]\
    \ | An API Key is required for this call.\n403 | 1006 [API_KEY_PLAN_NOT_AUTHORIZED]\
    \ | Your API Key subscription plan doesn't support this endpoint.\n403 | 1007\
    \ [API_KEY_DISABLED] | This API Key has been disabled. Please contact support.\n\
    429 | 1008 [API_KEY_PLAN_MINUTE_RATE_LIMIT_REACHED] | You've exceeded your API\
    \ Key's HTTP request rate limit. Rate limits reset every minute.\n429 | 1009 [API_KEY_PLAN_DAILY_RATE_LIMIT_REACHED]\
    \ | You've exceeded your API Key's daily rate limit.\n429 | 1010 [API_KEY_PLAN_MONTHLY_RATE_LIMIT_REACHED]\
    \ | You've exceeded your API Key's monthly rate limit.\n429 | 1011 [IP_RATE_LIMIT_REACHED]\
    \ | You've hit an IP rate limit.\n  \n# Best Practices\n\nThis section contains\
    \ a few recommendations on how to efficiently utilize the CoinMarketCap API for\
    \ your enterprise application, particularly if you already have a large base of\
    \ users for your application.\n\n### Use CoinMarketCap ID Instead of Cryptocurrency\
    \ Symbol\n\nUtilizing common cryptocurrency symbols to reference cryptocurrencies\
    \ on the API is easy and convenient but brittle. You should know that many cryptocurrencies\
    \ have the same symbol, for example, there are currently three cryptocurrencies\
    \ that commonly refer to themselves by the symbol HOT. Cryptocurrency symbols\
    \ also often change with cryptocurrency rebrands. When fetching cryptocurrency\
    \ by a symbol that matches several active cryptocurrencies we return the one with\
    \ the highest market cap at the time of the query. To ensure you always target\
    \ the cryptocurrency you expect, use our permanent CoinMarketCap IDs. These IDs\
    \ are used reliably by numerous mission critical platforms and *never change*.\
    \  \n  \nWe make fetching a map of all active cryptocurrencies' CoinMarketCap\
    \ IDs very easy. Just call our [`/cryptocurrency/map`](#operation/getV1CryptocurrencyMap)\
    \ endpoint to receive a list of all active currencies mapped to the unique `id`\
    \ property. This map also includes other typical identifiying properties like\
    \ `name`, `symbol` and platform `token_address` that can be cross referenced.\
    \ In cryptocurrency calls you would then send, for example `id=1027`, instead\
    \ of `symbol=ETH`. **It's strongly recommended that any production code utilize\
    \ these IDs for cryptocurrencies, exchanges, and markets to future-proof your\
    \ code.** \n\n### Use the Right Endpoints for the Job\n\nYou may have noticed\
    \ that `/cryptocurrency/listings/latest` and `/cryptocurrency/quotes/latest` return\
    \ the same crypto data but in different formats. This is because the former is\
    \ for requesting paginated and ordered lists of *all* cryptocurrencies while the\
    \ latter is for selectively requesting only the specific cryptocurrencies you\
    \ require. Many endpoints follow this pattern, allow the design of these endpoints\
    \ to work for you!\n\n### Implement a Caching Strategy If Needed\n\nThere are\
    \ standard legal data safeguards built into the <a rel=\"noopener noreferrer\"\
    \ href=\"https://pro.coinmarketcap.com/user-agreement-commercial\" target=\"_blank\"\
    >Commercial User Terms</a> that application developers should keep in mind. These\
    \ Terms help prevent unauthorized scraping and redistributing of CMC data but\
    \ are intentionally worded to allow legitimate local caching of market data to\
    \ support the operation of your application. If your application has a significant\
    \ user base and you are concerned with staying within the call credit and API\
    \ throttling limits of your subscription plan consider implementing a data caching\
    \ strategy.\n\nFor example instead of making a `/cryptocurrency/quotes/latest`\
    \ call every time one of your application's users needs to fetch market rates\
    \ for specific cryptocurrencies, you could pre-fetch and cache the latest market\
    \ data for every cryptocurrency in your application's local database every 60\
    \ seconds. This would only require 1 API call, `/cryptocurrency/listings/latest?limit=5000`,\
    \ every 60 seconds. Then, anytime one of your application's users need to load\
    \ a custom list of cryptocurrencies you could simply pull this latest market data\
    \ from your local cache without the overhead of additional calls. This kind of\
    \ optimization is practical for customers with large, demanding user bases.\n\n\
    ###  Code Defensively to Ensure a Robust REST API Integration\n\nWhenever implementing\
    \ any high availability REST API service for mission critical operations it's\
    \ recommended to <a rel=\"noopener noreferrer\" href=\"https://en.wikipedia.org/wiki/Defensive_programming\"\
    \ target=\"_blank\">code defensively</a>. Since the API is versioned, any breaking\
    \ request or response format change would only be introduced through new versions\
    \ of each endpoint, *however existing endpoints may still introduce new convenience\
    \ properties over time*. \n\nWe suggest these best practices:\n\n- You should\
    \ parse the API response JSON as JSON and not through a regular expression or\
    \ other means to avoid brittle parsing logic.\n- Your parsing code should explicitly\
    \ parse only the response properties you require to guarantee new fields that\
    \ may be returned in the future are ignored. \n- You should add robust field validation\
    \ to your response parsing logic. You can wrap complex field parsing, like dates,\
    \ in try/catch statements to minimize the impact of unexpected parsing issues\
    \ (like the unlikely return of a null value). \n- Implement a \"Retry with exponential\
    \ backoff\" coding pattern for your REST API call logic. This means if your HTTP\
    \ request happens to get rate limited (HTTP 429) or encounters an unexpected server-side\
    \ condition (HTTP 5xx) your code would automatically recover and try again using\
    \ an intelligent recovery scheme. You may use one of the many libraries available;\
    \ for example, <a rel=\"noopener noreferrer\" target=\"_blank\" href=\"https://github.com/tim-kos/node-retry\"\
    >this one</a> for Node or <a rel=\"noopener noreferrer\" target=\"_blank\" href=\"\
    https://github.com/litl/backoff\">this one</a> for Python.\n\n### Reach Out and\
    \ Upgrade Your Plan\n\nIf you're uncertain how to best implement the CoinMarketCap\
    \ API in your application or your needs outgrow our current self-serve subscription\
    \ tiers you can reach out to api@coinmarketcap.com. We'll review your needs and\
    \ budget and may be able to tailor a custom enterprise plan that is right for\
    \ you.  \n\n# Version History\n    \nThe CoinMarketCap API utilizes <a rel=\"\
    noopener noreferrer\" href=\"https://semver.org/\" target=\"_blank\">Semantic\
    \ Versioning</a> in the format `major.minor.patch`. The current `major` version\
    \ is incorporated into the API request path as `/v1/`. Non-breaking `minor` and\
    \ `patch` updates to the API are released regularly. These may include new endpoints,\
    \ data points, and API plan features which are always introduced in a non-breaking\
    \ manner. *This means you can expect new properties to become available in our\
    \ existing /v1/ endpoints however any breaking change will be introduced under\
    \ a new major version of the API with legacy versions supported indefinitely unless\
    \ otherwise stated*.  \n  \nYou can [subscribe to our API Newsletter](/#newsletter-signup)\
    \ to get monthly email updates on CoinMarketCap API enhancements.\n\n### v1.0.0\
    \ on September 19, 2022\n\n- [/v1/content/posts/top](#operation/getV1ContentPostsTop)\
    \ now available to get cryptocurrency-related top posts.\n- [/v1/content/posts/latest](#operation/getV1ContentPostsLatest)\
    \ now available to get cryptocurrency-related latest posts.\n- [/v1/content/posts/comments](#operation/getV1ContentPostsComments)\
    \ now available to get comments of the post.\n\n### v1.0.0 on Augest 18, 2022\n\
    \n- [/v1/content/latest](#operation/getV1ContentLatest) now available to get news/headlines\
    \ and Alexandria articles.\n\n### v1.0.0 on Augest 4, 2022\n\n- [/v1/tools/postman](#operation/getV1ToolsPostman)\
    \ now API postman collection is available.\n\n### v2.0.4 on October 11, 2021\n\
    \n- [/v1/cryptocurrency/listings/latest](#operation/getV1CryptocurrencyListingsLatest)\
    \ now includes `volume_change_24h`.\n- [/v2/cryptocurrency/quotes/latest](#operation/getV2CryptocurrencyQuotesLatest)\
    \ now includes `volume_change_24h`.\n\n### v2.0.3 on October 6, 2021\n\n- [/v1/cryptocurrency/trending/latest](#operation/getV1CryptocurrencyTrendingLatest)\
    \ now supports `time_period` as an optional parameter.\n\n### v2.0.2 on September\
    \ 13, 2021\n\n- [/exchange/map](#operation/getV1ExchangeMap) now available to\
    \ Free tier users.\n- [/exchange/info](#operation/getV1ExchangeInfo) now available\
    \ to Free tier users.\n\n### v2.0.1 on September 8, 2021\n\n- [/exchange/market-pairs/latest](#operation/getV1ExchangeMarketpairsLatest)\
    \ now includes `volume_24h`, `depth_negative_two`, `depth_positive_two` and `volume_percentage`.\n\
    - [/exchange/listings/latest](#operation/getV1ExchangeListingsLatest) now includes\
    \ `open_interest`.\n### v2.0.0 on August 17, 2021\n\n- By popular request we have\
    \ added a number of new useful endpoints !\n- [/v1/cryptocurrency/categories](#operation/getV1CryptocurrencyCategories)\
    \ can be used to access a list of categories and their associated coins. You can\
    \ also filter the list of categories by one or more cryptocurrencies.\n- [/v1/cryptocurrency/category](#operation/getV1CryptocurrencyCategory)\
    \ can be used to load only a single category of coins, listing the coins within\
    \ that category.\n- [/v1/cryptocurrency/airdrops](#operation/getV1CryptocurrencyAirdrops)\
    \ can be used to access a list of CoinMarketCap’s free airdrops. This defaults\
    \ to a status of `ONGOING` but can be filtered to `UPCOMING` or `ENDED`. You can\
    \ also query for a list of airdrops by cryptocurrency.\n- [/v1/cryptocurrency/airdrop](#operation/getV1CryptocurrencyAirdrop)\
    \ can be used to load a single airdrop and its associated cryptocurrency.\n- [/v1/cryptocurrency/trending/latest](#operation/getV1CryptocurrencyTrendingLatest)\
    \ can be used to load the most searched for cryptocurrencies within a period of\
    \ time. This defaults to a `time_period` of the previous `24h`, but can be changed\
    \ to `30d`, or `7d` for a larger window of time.\n- [/v1/cryptocurrency/trending/most-visited](#operation/getV1CryptocurrencyTrendingMostvisited)\
    \ can be used to load the most visited cryptocurrencies within a period of time.\
    \ This defaults to a `time_period` of the previous `24h`, but can be changed to\
    \ `30d`, or `7d` for a larger window of time.\n- [/v1/cryptocurrency/trending/gainers-losers](#operation/getV1CryptocurrencyTrendingGainerslosers)\
    \ can be used to load the biggest gainers & losers within a period of time. This\
    \ defaults to a `time_period` of the previous `24h`, but can be changed to `30d`,\
    \ or `7d` for a larger window of time.\n\n### v1.28.0 on August 9, 2021\n  \n\
    - [/v1/cryptocurrency/listings/latest](#operation/getV1CryptocurrencyListingsLatest)\
    \ now includes `market_cap_dominance` and `fully_diluted_market_cap`.\n- [/v1/cryptocurrency/quotes/latest](#operation/getV2CryptocurrencyQuotesLatest)\
    \ now includes `market_cap_dominance` and `fully_diluted_market_cap`.\n\n### v1.27.0\
    \ on January 27, 2021\n  \n- [/v2/cryptocurrency/info](#operation/getV2CryptocurrencyInfo)\
    \ response format changed to allow for multiple coins per symbol.\n- [/v2/cryptocurrency/market-pairs/latest](#operation/getV2CryptocurrencyMarketpairsLatest)\
    \ response format changed to allow for multiple coins per symbol.\n- [/v2/cryptocurrency/quotes/historical](#operation/getV2CryptocurrencyQuotesHistorical)\
    \ response format changed to allow for multiple coins per symbol.\n- [/v2/cryptocurrency/ohlcv/historical](#operation/getV2CryptocurrencyOhlcvHistorical)\
    \ response format changed to allow for multiple coins per symbol.\n- [/v2/tools/price-conversion](#operation/getV2ToolsPriceconversion)\
    \ response format changed to allow for multiple coins per symbol.\n- [/v2/cryptocurrency/ohlcv/latest](#operation/getV2CryptocurrencyOhlcvLatest)\
    \ response format changed to allow for multiple coins per symbol.\n- [/v2/cryptocurrency/price-performance-stats/latest](#operation/getV2CryptocurrencyPriceperformancestatsLatest)\
    \ response format changed to allow for multiple coins per symbol.\n\n### v1.26.0\
    \ on January 21, 2021\n  \n- [/v2/cryptocurrency/quotes/latest](#operation/getV2CryptocurrencyQuotesLatest)\
    \ response format changed to allow for multiple coins per symbol.\n\n### v1.25.0\
    \ on April 17, 2020\n  \n- [/v1.1/cryptocurrency/listings/latest](#operation/getV1CryptocurrencyListingsLatest)\
    \ now includes a more robust `tags` response with slug, name, and category.\n\
    - [/cryptocurrency/quotes/historical](#operation/getV1CryptocurrencyQuotesHistorical)\
    \ and [/cryptocurrency/quotes/latest](#operation/getV1CryptocurrencyQuotesLatest)\
    \ now include `is_active` and `is_fiat` in the response.\n\n### v1.24.0 on Feb\
    \ 24, 2020\n  \n- [/cryptocurrency/ohlcv/historical](#operation/getV1CryptocurrencyOhlcvHistorical)\
    \ has been modified to include the high and low timestamps.\n- [/exchange/market-pairs/latest](#operation/getV1ExchangeMarketpairsLatest)\
    \ now includes `category` and `fee_type` market pair filtering options.\n- [/cryptocurrency/listings/latest](#operation/getV1CryptocurrencyListingsLatest)\
    \ now includes `category` and `fee_type` market pair filtering options.\n\n###\
    \ v1.23.0 on Feb 3, 2020\n  \n- [/fiat/map](#operation/getV1FiatMap) is now available\
    \ to fetch the latest mapping of supported fiat currencies to CMC IDs.\n- [/exchange/market-pairs/latest](#operation/getV1ExchangeMarketpairsLatest)\
    \ now includes `matched_id` and `matched_symbol` market pair filtering options.\n\
    - [/cryptocurrency/listings/latest](#operation/getV1CryptocurrencyListingsLatest)\
    \ now provides filter parameters `price_min`, `price_max`, `market_cap_min`, `market_cap_max`,\
    \ `percent_change_24h_min`, `percent_change_24h_max`, `volume_24h_max`, `circulating_supply_min`\
    \ and `circulating_supply_max` in addition to the existing `volume_24h_min` filter.\n\
    \  \n### v1.22.0 on Oct 16, 2019\n  \n- [/global-metrics/quotes/latest](#operation/getV1GlobalmetricsQuotesLatest)\
    \ now additionally returns `total_cryptocurrencies` and `total_exchanges` counts\
    \ which include inactive projects who's data is still available via API.  \n \
    \ \n### v1.21.0 on Oct 1, 2019\n  \n- [/exchange/map](#operation/getV1ExchangeMap)\
    \ now includes `sort` options including `volume_24h`.\n- [/cryptocurrency/map](#operation/getV1CryptocurrencyMap)\
    \ fix for a scenario where `first_historical_data` and `last_historical_data`\
    \ may not be populated.\n- Additional improvements to alphanumeric sorts.\n  \n\
    ### v1.20.0 on Sep 25, 2019\n \n- By popular request you may now configure API\
    \ plan usage notifications and email alerts in the [Developer Portal](https://pro.coinmarketcap.com/account/notifications).\n\
    - [/cryptocurrency/map](#operation/getV1CryptocurrencyMap) now includes `sort`\
    \ options including `cmc_rank`.  \n  \n### v1.19.0 on Sep 19, 2019\n  \n- A new\
    \ `/blockchain/` category of endpoints is now available with the introduction\
    \ of our new [/v1/blockchain/statistics/latest](#operation/getV1BlockchainStatisticsLatest)\
    \ endpoint. This endpoint can be used to poll blockchain statistics data as seen\
    \ in our <a target=\"_blank\" href=\"https://blockchain.coinmarketcap.com/chain/bitcoin\"\
    >Blockchain Explorer</a>.\n- Additional platform error codes are now surfaced\
    \ during HTTP Status Code 401, 402, 403, and 429 scenarios as documented in [Errors\
    \ and Rate Limits](#section/Errors-and-Rate-Limits).\n- OHLCV endpoints using\
    \ the `convert` option now match historical UTC open period exchange rates with\
    \ greater accuracy.\n- [/cryptocurrency/info](#operation/getV1CryptocurrencyInfo)\
    \ and [/exchange/info](#operation/getV1ExchangeInfo) now include the optional\
    \ `aux` parameter where listing `status` can be requested in the list of supplemental\
    \ properties.\n- [/cryptocurrency/listings/latest](#operation/getV1CryptocurrencyListingsLatest)\
    \ and [/cryptocurrency/quotes/latest](#operation/getV1CryptocurrencyQuotesLatest):\
    \ The accuracy of `percent_change_` conversions was improved when passing non-USD\
    \ fiat `convert` options.\n- [/cryptocurrency/ohlcv/historical](#operation/getV1CryptocurrencyOhlcvHistorical)\
    \ and [/cryptocurrency/quotes/latest](#operation/getV1CryptocurrencyQuotesLatest)\
    \ now support relaxed request validation rules via the `skip_invalid` request\
    \ parameter.\n- We also now return a helpful `notice` warning when API key usage\
    \ is above 95% of daily and monthly API credit usage limits.\n  \n### v1.18.0\
    \ on Aug 28, 2019\n  \n- [/key/info](#operation/getV1KeyInfo) has been added as\
    \ a new endpoint. It may be used programmatically monitor your key usage compared\
    \ to the rate limit and daily/monthly credit limits available to your API plan\
    \ as an alternative to using the [Developer Portal Dashboard](https://pro.coinmarketcap.com/account).\
    \  \n- [/cryptocurrency/quotes/historical](#operation/getV1CryptocurrencyQuotesHistorical)\
    \ and [/v1/global-metrics/quotes/historical](#operation/getV1GlobalmetricsQuotesHistorical)\
    \ have new options to make charting tasks easier and more efficient. Use the new\
    \ `aux` parameter to cut out response properties you don't need and include the\
    \ new `search_interval` timestamp to normalize disparate historical records against\
    \ the same `interval` time periods.\n- A 4 hour interval option `4h` was added\
    \ to all historical time series data endpoints.\n    \n### v1.17.0 on Aug 22,\
    \ 2019\n  \n- [/cryptocurrency/price-performance-stats/latest](#operation/getV1CryptocurrencyPriceperformancestatsLatest)\
    \ has been added as our 21st endpoint! It returns launch price ROI, all-time high\
    \ / all-time low, and other price stats over several supported time periods.\n\
    - [/cryptocurrency/market-pairs/latest](#operation/getV1CryptocurrencyMarketpairsLatest)\
    \ now has the ability to filter all active markets for a cryptocurrency to specific\
    \ base/quote pairs. Want to return only `BTC/USD` and `BTC/USDT` markets? Just\
    \ pass `?symbol=BTC&matched_symbol=USD,USDT` or `?id=1&matched_id=2781,825`. \
    \ \n- [/cryptocurrency/market-pairs/latest](#operation/getV1CryptocurrencyMarketpairsLatest)\
    \ now features `sort` options including `cmc_rank` to reproduce the <a target=\"\
    _blank\" href=\"https://coinmarketcap.com/methodology/\">methodology</a> based\
    \ sort on pages like <a rel=\"noopener noreferrer\" href=\"https://coinmarketcap.com/currencies/bitcoin/#markets\"\
    \ target=\"_blank\">Bitcoin Markets</a>. \n- [/cryptocurrency/market-pairs/latest](#operation/getV1CryptocurrencyMarketpairsLatest)\
    \ can now return any exchange level CMC notices affecting a market via the new\
    \ `notice` `aux` parameter.  \n- [/cryptocurrency/quotes/latest](#operation/getV1CryptocurrencyQuotesLatest)\
    \ will now continue to return the last updated price data for cryptocurrency that\
    \ have transitioned to an `inactive` state instead of returning an HTTP 400 error.\
    \ These active coins that have gone inactive can easily be identified as having\
    \ a `num_market_pairs` of `0` and a stale `last_updated` date.\n- [/exchange/info](#operation/getV1ExchangeInfo)\
    \ now includes a brief text summary for most exchanges as `description`.  \n\n\
    ### v1.16.0 on Aug 9, 2019\n\n- We've introduced a new [partners](#tag/partners)\
    \ category of endpoints for convenient access to 3rd party crypto data. <a rel=\"\
    noopener noreferrer\" href=\"https://www.flipsidecrypto.com/\" target=\"_blank\"\
    >FlipSide Crypto</a>'s <a rel=\"noopener noreferrer\" href=\"https://www.flipsidecrypto.com/fcas-explained\"\
    \ target=\"_blank\">Fundamental Crypto Asset Score</a> (FCAS) is now available\
    \ as the first partner integration.  \n- [/cryptocurrency/listings/latest](#operation/getV1CryptocurrencyListingsLatest)\
    \ now provides a `volume_24h_min` filter parameter. It can be used when a threshold\
    \ of volume is required like in our <a target=\"_blank\" href=\"https://coinmarketcap.com/gainers-losers/\"\
    >Biggest Gainers and Losers</a> lists.\n- [/cryptocurrency/listings/latest](#operation/getV1CryptocurrencyListingsLatest)\
    \ and [/cryptocurrency/quotes/latest](#operation/getV1CryptocurrencyQuotesLatest)\
    \ can now return rolling `volume_7d` and `volume_30d` via the supplemental `aux`\
    \ parameter and sort options by these fields. \n- `volume_24h_reported`, `volume_7d_reported`,\
    \ `volume_30d_reported`, and `market_cap_by_total_supply` are also now available\
    \ through the `aux` parameter with an additional sort option for the latter.\n\
    - [/cryptocurrency/market-pairs/latest](#operation/getV1CryptocurrencyMarketpairsLatest)\
    \ can now provide market price relative to the quote currency. Just pass `price_quote`\
    \ to the supplemental `aux` parameter. This can be used to display consistent\
    \ price data for a cryptocurrency across several markets no matter if it is the\
    \ base or quote in each pair as seen in our <a target=\"_blank\" href=\"https://coinmarketcap.com/currencies/bitcoin/#markets\"\
    >Bitcoin markets</a> price column.\n- When requesting a custom `sort` on our list\
    \ based endpoints, numeric fields like `percent_change_7d` now conveniently return\
    \ non-applicable `null` values last regardless of sort order. \n\n### v1.15.0\
    \ on Jul 10, 2019\n\n- [/cryptocurrency/map](#operation/getV1CryptocurrencyMap)\
    \ and [/v1/exchange/map](#operation/getV1ExchangeMap) now expose a 3rd listing\
    \ state of `untracked` between `active` and `inactive` as outlined in our <a target=\"\
    _blank\" href=\"https://coinmarketcap.com/methodology/\">methodology</a>. See\
    \ endpoint documentation for additional details.    \n- [/cryptocurrency/quotes/historical](#operation/getV1CryptocurrencyQuotesHistorical),\
    \ [/cryptocurrency/ohlcv/historical](#operation/getV1CryptocurrencyOhlcvHistorical),\
    \ and [/exchange/quotes/latest](#operation/getV1ExchangeQuotesLatest) now support\
    \ fetching multiple cryptocurrencies and exchanges in the same call.\n- [/global-metrics/quotes/latest](#operation/getV1GlobalmetricsQuotesLatest)\
    \ now updates more frequently, every minute. It aslo now includes `total_volume_24h_reported`,\
    \ `altcoin_volume_24h`, `altcoin_volume_24h_reported`, and `altcoin_market_cap`.\
    \ \n- [/global-metrics/quotes/historical](#operation/getV1GlobalmetricsQuotesHistorical)\
    \ also includes these new dimensions along with historical `active_cryptocurrencies`,\
    \ `active_exchanges`, and `active_market_pairs` counts. \n- We've also added a\
    \ new `aux` auxiliary parameter to many endpoints which can be used to customize\
    \ your request. You may request new supplemental data properties that are not\
    \ returned by default or slim down your response payload by excluding default\
    \ `aux` fields you don't need in endpoints like [/cryptocurrency/listings/latest](#operation/getV1CryptocurrencyListingsLatest).\
    \ [/cryptocurrency/market-pairs/latest](#operation/getV1CryptocurrencyMarketpairsLatest)\
    \ and [/exchange/market-pairs/latest](#operation/getV1ExchangeMarketpairsLatest)\
    \ can now supply `market_url`, `currency_name`, and `currency_slug` for each market\
    \ using this new parameter. [/exchange/listings/latest](#operation/getV1ExchangeListingsLatest)\
    \ can now include the exchange `date_launched`.    \n    \n### v1.14.1 on Jun\
    \ 14, 2019 - DATA: Phase 1 methodology updates\n  \nPer our <a target=\"_blank\"\
    \ href=\"https://blog.coinmarketcap.com/2019/05/01/happy-6th-birthday-data-alliance-block-explorers-and-more/\"\
    >May 1 announcement</a> of the Data Accountability & Transparency Alliance (<a\
    \ target=\"_blank\" href=\"https://coinmarketcap.com/data-transparency-alliance/\"\
    >DATA</a>), a platform <a target=\"_blank\" href=\"https://coinmarketcap.com/methodology/\"\
    >methodology</a> update was published. No API changes are required but users should\
    \ take note:\n\n- Exchanges that are not compliant with mandatory transparency\
    \ requirements (Ability to surface live trade and order book data) will be excluded\
    \ from VWAP price and volume calculations returned from our `/cryptocurrency/`\
    \ and `/global-metrics/` endpoints going forward.\n- These exchanges will also\
    \ return a `volume_24h_adjusted` value of 0 from our `/exchange/` endpoints like\
    \ the exclusions based on market category and fee type. Stale markets (24h or\
    \ older) will also be excluded. All exchanges will continue to return `exchange_reported`\
    \ values as reported.  \n- We welcome you to <a target=\"_blank\" href=\"https://coinmarketcap.com/data-transparency-alliance/\"\
    >learn more about the DATA alliance and become a partner</a>. \n  \n### v1.14.0\
    \ on Jun 3, 2019\n\n- [/cryptocurrency/info](#operation/getV1CryptocurrencyInfo)\
    \ now include up to 5 block explorer URLs for each cryptocurrency including our\
    \ brand new <a target=\"_blank\" href=\"https://blockchain.coinmarketcap.com\"\
    >Bitcoin and Ethereum Explorers</a>.\n- [/cryptocurrency/info](#operation/getV1CryptocurrencyInfo)\
    \ now provides links to most cryptocurrency white papers and technical documentation!\
    \ Just reference the `technical_doc` array.\n- [/cryptocurrency/info](#operation/getV1CryptocurrencyInfo)\
    \ now returns a `notice` property that may highlight a significant event or condition\
    \ that is impacting the cryptocurrency or how it is displayed. See the endpoint\
    \ property description for more details. \n- [/exchange/info](#operation/getV1ExchangeInfo)\
    \ also includes a `notice` property. This one may highlight a condition that is\
    \ impacting the availability of an exchange's market data or the use of the exchange.\
    \ See the endpoint property description for more details. \n- [/exchange/info](#operation/getV1ExchangeInfo)\
    \ now includes the official launch date for each exchange as `date_launched`.\n\
    - [/cryptocurrency/market-pairs/latest](#operation/getV1CryptocurrencyMarketpairsLatest)\
    \ and [/exchange/market-pairs/latest](#operation/getV1ExchangeMarketpairsLatest)\
    \ now include market `category` (Spot, Derivatives, or OTC) and `fee_type` (Percentage,\
    \ No Fees, Transactional Mining, or Unknown) for every market returned.\n- [/cryptocurrency/market-pairs/latest](#operation/getV1CryptocurrencyMarketpairsLatest)\
    \ now supports querying by cryptocurrency `slug`.\n- [/cryptocurrency/listings/latest](#operation/getV1CryptocurrencyListingsLatest)\
    \ now includes a `market_cap_strict` sort option to apply a strict numeric sort\
    \ on this field.  \n\n### v1.13.0 on May 17, 2019\n\n- You may now leverage CoinMarketCap\
    \ IDs for currency `quote` conversions across all endpoints! Just utilize the\
    \ new `convert_id` parameter instead of the `convert` parameter. Learn more about\
    \ creating robust integrations with CMC IDs in our [Best Practices](#section/Best-Practices).\n\
    - We've updated requesting cryptocurrencies by `slug` to support legacy names\
    \ from past cryptocurrency rebrands. For example, a request to `/cryptocurrency/quotes/latest?slug=antshares`\
    \ successfully returns the cryptocurrency by current slug `neo`.\n- We've extended\
    \ the brief text summary included as `description` in [/cryptocurrency/info](#operation/getV1CryptocurrencyInfo)\
    \ to now cover all cryptocurrencies!\n- We've added the fetch-by-slug option to\
    \ [/cryptocurrency/ohlcv/historical](#operation/getV1CryptocurrencyOhlcvHistorical).\n\
    - Premium subscription users: On your next billing period we'll conveniently switch\
    \ to displaying monthly/daily credit usage relative to your monthly billing period\
    \ instead of calendar month and UTC midnight. Click the `?` on our updated <a\
    \ rel=\"noopener noreferrer\" target=\"_blank\" href=\"https://pro.coinmarketcap.com/account\"\
    >API Key Usage</a> panel for more details.\n  \n### v1.12.1 on May 1, 2019\n \
    \ \n- To celebrate CoinMarketCap's 6th anniversary we've upgraded the crypto API\
    \ to make more of our data available at each tier! \n- Our free Basic tier may\
    \ now access live price conversions via [/tools/price-conversion](#operation/getV1ToolsPriceconversion).\n\
    - Our Hobbyist tier now supports a month of historical price conversions with\
    \ [/tools/price-conversion](#operation/getV1ToolsPriceconversion) using the `time`\
    \ parameter. We've also made this plan 12% cheaper at $29/mo with a yearly subscription\
    \ or $35/mo month-to-month.\n- Our Startup tier can now access a month of cryptocurrency\
    \ OHLCV data via [/cryptocurrency/ohlcv/historical](#operation/getV1CryptocurrencyOhlcvHistorical)\
    \ along with [/tools/price-conversion](#operation/getV1ToolsPriceconversion).\n\
    - Our Standard tier has been upgraded from 1 month to now 3 months of historical\
    \ market data access across all historical endpoints. \n- Our Enterprise, Professional,\
    \ and Standard tiers now get access to a new #18th endpoint [/cryptocurrency/listings/historical](#operation/getV1CryptocurrencyListingsHistorical)!\
    \ Utilize this endpoint to fetch daily historical crypto rankings from the past.\
    \ We've made historical ranking snapshots available all the way back to 2013!\
    \  \n- All existing accounts and subscribers may take advantage of these updates.\
    \ If you haven't signed up yet you can check out our updated plans on our <a rel=\"\
    noopener noreferrer\" href=\"https://coinmarketcap.com/api/features/\" target=\"\
    _blank\">feature comparison page</a>.\n  \n### v1.12.0 on Apr 28, 2019\n  \n-\
    \ Our API docs now supply API request examples in 7 languages for every endpoint:\
    \ cURL, Node.js, Python, PHP, Java, C#, and Go.\n- Many customer sites format\
    \ cryptocurrency data page URLs by SEO friendly names like we do here: <a rel=\"\
    noopener noreferrer\" href=\"https://coinmarketcap.com/currencies/binance-coin/\"\
    \ target=\"_blank\">coinmarketcap.com/currencies/binance-coin</a>. We've made\
    \ it much easier for these kinds of pages to dynamically reference data from our\
    \ API. You may now request cryptocurrencies from our [/cryptocurrency/info](#operation/getV1CryptocurrencyInfo)\
    \ and [/cryptocurrency/quotes/latest](#operation/getV1CryptocurrencyQuotesLatest)\
    \ endpoints by `slug` as an alternative to `symbol` or `id`. As always, you can\
    \ retrieve a quick list of every cryptocurrency we support and it's `id`, `symbol`,\
    \ and `slug` via our [/cryptocurrency/map](#operation/getV1CryptocurrencyMap)\
    \ endpoint.  \n- We've increased `convert` limits on historical endpoints once\
    \ more. You can now request historical market data in up to 3 conversion options\
    \ at a time like we do internally to display line charts <a rel=\"noopener noreferrer\"\
    \ href=\"https://coinmarketcap.com/currencies/0x/#charts\" target=\"_blank\">like\
    \ this</a>. You can now fetch market data converted into your primary cryptocurrency,\
    \ fiat currency, and a parent platform cryptocurrency (Ethereum in this case)\
    \ all in one call! \n  \n### v1.11.0 on Mar 25, 2019\n\n- We now supply a brief\
    \ text summary for each cryptocurrency in the `description` field of [/cryptocurrency/info](#operation/getV1CryptocurrencyInfo).\
    \ The majority of top cryptocurrencies include this field with more coming in\
    \ the future.  \n- We've made `convert` limits on some endpoints and plans more\
    \ flexible. Historical endpoints are now allowed 2 price conversion options instead\
    \ of 1. Professional plan convert limit has doubled from 40 to 80. Enterprise\
    \ has tripled from 40 to 120.  \n- CoinMarketCap Market ID: We now return `market_id`\
    \ in /market-pairs/latest endpoints. Like our cryptocurrency and exchange IDs,\
    \ this ID can reliably be used to uniquely identify each market *permanently*\
    \ as this ID never changes.  \n- Market symbol overrides: We now supply an `exchange_symbol`\
    \ in addition to `currency_symbol` for each market pair returned in our /market-pairs/latest\
    \ endpoints. This allows you to reference the currency symbol provided by the\
    \ exchange in case it differs from the CoinMarketCap identified symbol that the\
    \ majority of markets use.  \n  \n### v1.10.1 on Jan 30, 2019\n\n- Our API health\
    \ status dashboard is now public at http://status.coinmarketcap.com.  \n- We now\
    \ conveniently return `market_cap` in our [/cryptocurrency/ohlcv/historical](#operation/getV1CryptocurrencyOhlcvHistorical)\
    \ endpoint so you don't have to make a separately query when fetching historic\
    \ OHLCV data. \n- We've improved the accuracy of percent_change_1h / 24h / 7d\
    \ calculations when using the `convert` option with our latest cryptocurrency\
    \ endpoints. \n- [/cryptocurrency/market-pairs/latest](#operation/getV1CryptocurrencyMarketpairsLatest)\
    \ now updates more frequently, every 1 minute.  \n- Contract Address and parent\
    \ platform metadata changes are reflected on the API much more quickly.  \n  \n\
    ### v1.9.0 on Jan 8, 2019\n  \n- Did you know there are currently 684 active USD\
    \ market pairs tracked by CoinMarketCap? You can now pass any [fiat CoinMarketCap\
    \ ID](#section/Standards-and-Conventions) to the [/cryptocurrency/market-pairs/latest](#operation/getV1CryptocurrencyMarketpairsLatest)\
    \ `id` parameter to list all active markets across all exchanges for a given fiat\
    \ currency.   \n- We've added a new dedicated migration FAQ page for users migrating\
    \ from our old Public API to the new API [here](https://pro.coinmarketcap.com/migrate).\
    \ It includes a helpful tutorial link for Excel and Google Sheets users who need\
    \ help migrating.\n- Cryptocurrency and exchange symbol and name rebrands are\
    \ now reflected in the API much more quickly.\n  \n### v1.8.0 on Dec 27, 2018\n\
    \ \n- We now supply the contract address for all cryptocurrencies on token platforms\
    \ like Ethereum! Look for  `token_address` in the `platform` property of our cryptocurrency\
    \ endpoints like [/cryptocurrency/map](#operation/getV1CryptocurrencyMap) and\
    \ [/cryptocurrency/listings/latest](#operation/getV1CryptocurrencyListingsLatest).\n\
    - All 96 non-USD fiat conversion rates now update every 1 minute like our USD\
    \ rates! This includes using the `convert` option for all /latest market data\
    \ endpoints as well as our [/tools/price-conversion](#operation/getV1ToolsPriceconversion)\
    \ endpoint.   \n  \n### v1.7.0 on Dec 18, 2018\n\n- We've upgraded our fiat (government)\
    \ currency conversion support from our original 32 to now cover 93 fiat currencies!\
    \  \n- We've also introduced currency conversions for four precious metals: Gold,\
    \ Silver, Platinum, and Palladium! \n- You may pass all 97 fiat currency options\
    \ to our [/tools/price-conversion](#operation/getV1ToolsPriceconversion) endpoint\
    \ using either the `symbol` or `id` parameter. Using CMC `id` is always the most\
    \ robust option. CMC IDs are now included in the full list of fiat options located\
    \ [here](#section/Standards-and-Conventions). \n- All historical endpoints including\
    \ our price conversion endpoint with \"time\" parameter now support historical\
    \ fiat conversions back to 2013!   \n\n### v1.6.0 on Dec 4, 2018\n\n- We've rolled\
    \ out another top requested feature, giving you access to platform metadata for\
    \ cryptocurrencies that are tokens built on other cryptocurrencies like Ethereum.\
    \ Look for the new `platform` property on our cryptocurrency endpoints like [/cryptocurrency/listings/latest](#operation/getV1CryptocurrencyListingsLatest)\
    \ and [/cryptocurrency/map](#operation/getV1CryptocurrencyMap). \n- We've also\
    \ added a **CMC equivalent pages** section to our endpoint docs so you can easily\
    \ determine which endpoints to use to reproduce functionality on the main coinmarketcap.com\
    \ website.  \n- Welcome Public API users! With the migration of our legacy Public\
    \ API into the Professional API we now have 1 unified API at CMC. This API is\
    \ now known as the CoinMarketCap API and can always be accessed at [coinmarketcap.com/api](https://coinmarketcap.com/api).\
    \  \n   \n### v1.5.0 on Nov 28, 2018\n\n- [/cryptocurrency/ohlcv/historical](#operation/getV1CryptocurrencyOhlcvHistorical)\
    \ now supports hourly OHLCV! Use time_period=\"hourly\" and don't forget to set\
    \ the \"interval\" parameter to \"hourly\" or one of the new hourly interval options.\n\
    - [/tools/price-conversion](#operation/getV1ToolsPriceconversion) now supports\
    \ historical USD conversions.  \n- We've increased the minute based rate limits\
    \ for several plans. Standard plan has been upgraded from 30 to 60 calls per minute.\
    \ Professional from 60 to 90. Enterprise from 90 to 120.  \n- We now include some\
    \ customer and data partner logos and testimonials on the CoinMarketCap API site.\
    \ Visit pro.coinmarketcap.com to check out what our enterprise customers are saying\
    \ and contact us at api@coinmarketcap.com if you'd like to get added to the list!\n\
    \     \n### v1.4.0 on Nov 20, 2018\n\n- [/tools/price-conversion](#operation/getV1ToolsPriceconversion)\
    \ can now provide the latest crypto-to-crypto conversions at 1 minute accuracy\
    \ with extended decimal precision upwards of 8 decimal places.\n- [/tools/price-conversion](#operation/getV1ToolsPriceconversion)\
    \ now supports historical crypto-to-crypto conversions leveraging our closest\
    \ averages to the specified \"time\" parameter. \n- All of our historical data\
    \ endpoints now support historical cryptocurrency conversions using the \"convert\"\
    \ parameter. The closest reference price for each \"convert\" option against each\
    \ historical datapoint is used for each conversion.\n- [/global-metrics/quotes/historical](#operation/getV1GlobalmetricsQuotesHistorical)\
    \ now supports the \"convert\" parameter.  \n   \n### v1.3.0 on Nov 9, 2018\n\n\
    - The latest UTC day's OHLCV record is now available sooner. 5-10 minutes after\
    \ each UTC midnight.\n- We're now returning a new `vol_24h_adjusted` property\
    \ on  [/exchange/quotes/latest](#operation/getV1ExchangeQuotesLatest) and [/exchange/listings/latest](#operation/getV1ExchangeListingsLatest)\
    \ and a sort option for the latter so you may now list exchange rankings by CMC\
    \ adjusted volume as well as exchange reported. \n- We are now returning a `tags`\
    \ property with [/cryptocurrency/listings/latest](#operation/getV1CryptocurrencyListingsLatest)\
    \ with our first tag `mineable` so you know which currencies are mineable. Additional\
    \ tags will be introduced in the future.\n- We've increased the \"convert\" parameter\
    \ limit from 32 to 40 for plans that support max conversion limits. \n  \n###\
    \ v1.2.0 on Oct 30, 2018\n\n- Our exchange [listing](#operation/getV1ExchangeListingsLatest)\
    \ and [quotes](#operation/getV1ExchangeQuotesLatest) endpoints now update much\
    \ more frequently! Every 1 minute instead of every 5 minutes.\n- These latest\
    \ exchange data endpoints also now return `volume_7d / 30d` and `percent_change_volume_24h\
    \ / 7d / 30d` along with existing data.\n- We've updated our documentation for\
    \ [/exchange/market-pairs/latest](#operation/getV1ExchangeMarketpairsLatest) to\
    \ reflect that it receives updates every 1 minute, not 5, since June.\n  \n###\
    \ v1.1.4 on Oct 19, 2018\n\n- We've improved our tiered support inboxes by plan\
    \ type to answer support requests even faster.\n- You may now opt-in to our API\
    \ mailing list on signup. If you haven't signed up you can [here](/#newsletter-signup).\n\
    \  \n### v1.1.3 on Oct 12, 2018\n\n- We've increased the rate limit of our free\
    \ Basic plan from 10 calls a minute to 30.\n- We've increased the rate limit of\
    \ our Hobbyist plan from 15 to 30.\n\n### v1.1.2 on Oct 5, 2018\n  \n- We've updated\
    \ our most popular /cryptocurrency/listings/latest endpoint to cost 1 credit per\
    \ 200 data points instead of 100 to give customers more flexibility. \n- By popular\
    \ request we've introduced a new $33 personal use Hobbyist tier with access to\
    \ our currency conversion calculator endpoint. \n- Our existing commercial use\
    \ Hobbyist tier has been renamed to Startup. Our free Starter tier has been renamed\
    \ to Basic.\n  \n### v1.1.1 on Sept 28, 2018\n  \n- We've increased our monthly\
    \ credit limits for our smaller plans! Existing customers plans have also been\
    \ updated. \n- Our free Starter plan has been upgraded from 6 to 10k monthly credits\
    \ (66% increase).\n- Our Hobbyist plan has been upgraded from 60k to 120k monthly\
    \ credits (100% increase). \n- Our Standard plan has been upgraded from 300 to\
    \ 500k monthly credits (66% increase). \n\n### v1.1.0 on Sept 14, 2018\n  \n-\
    \ We've introduced our first new endpoint since rollout, active day OHLCV for\
    \ Standard plan and above with [/v1/cryptocurrency/ohlcv/latest](#operation/getV1CryptocurrencyOhlcvLatest)\n\
    \  \n### v1.0.4 on Sept 7, 2018\n\n- Subscription customers with billing renewal\
    \ issues now receive an alert from our API during usage and an unpublished grace\
    \ period before access is restricted.\n- API Documentation has been improved including\
    \ an outline of credit usage cost outlined on each endpoint documentation page.\n\
    \  \n### v1.0.3 on Aug 24, 2018\n- /v1/tools/price-conversion floating point conversion\
    \ accuracy was improved.\n- Added ability to query for non-alphanumeric crypto\
    \ symbols like $PAC\n- Customers may now update their billing card on file with\
    \ an active Stripe subscription at pro.coinmarketcap.com/account/plan\n"
  version: "2.0.4"
  title: "CoinMarketCap Cryptocurrency API Documentation"
  termsOfService: "https://coinmarketcap.com/terms/"
  contact:
    email: "api@coinmarketcap.com"
host: "pro-api.coinmarketcap.com"
basePath: "/"
tags:
- name: "cryptocurrency"
  description: "##### API endpoints for cryptocurrencies. This category currently\
    \ includes 17 endpoints:\n- [/v1/cryptocurrency/map](#operation/getV1CryptocurrencyMap)\
    \ - CoinMarketCap ID map\n- [/v2/cryptocurrency/info](#operation/getV2CryptocurrencyInfo)\
    \ - Metadata\n- [/v1/cryptocurrency/listings/latest](#operation/getV1CryptocurrencyListingsLatest)\
    \ - Latest listings\n- [/v1/cryptocurrency/listings/historical](#operation/getV1CryptocurrencyListingsHistorical)\
    \ - Historical listings\n- [/v2/cryptocurrency/quotes/latest](#operation/getV2CryptocurrencyQuotesLatest)\
    \ - Latest quotes\n- [/v2/cryptocurrency/quotes/historical](#operation/getV2CryptocurrencyQuotesHistorical)\
    \ - Historical quotes\n- [/v2/cryptocurrency/market-pairs/latest](#operation/getV2CryptocurrencyMarketpairsLatest)\
    \ - Latest market pairs\n- [/v2/cryptocurrency/ohlcv/latest](#operation/getV2CryptocurrencyOhlcvLatest)\
    \ - Latest OHLCV\n- [/v2/cryptocurrency/ohlcv/historical](#operation/getV2CryptocurrencyOhlcvHistorical)\
    \ - Historical OHLCV\n- [/v2/cryptocurrency/price-performance-stats/latest](#operation/getV2CryptocurrencyPriceperformancestatsLatest)\
    \ - Price performance Stats\n- [/v1/cryptocurrency/categories](#operation/getV1CryptocurrencyCategories)\
    \ - Categories\n- [/v1/cryptocurrency/category](#operation/getV1CryptocurrencyCategory)\
    \ - Category\n- [/v1/cryptocurrency/airdrops](#operation/getV1CryptocurrencyAirdrops)\
    \ - Airdrops\n- [/v1/cryptocurrency/airdrop](#operation/getV1CryptocurrencyAirdrop)\
    \ - Airdrop\n- [/v1/cryptocurrency/trending/latest](#operation/getV1CryptocurrencyTrendingLatest)\
    \ - Trending Latest\n- [/v1/cryptocurrency/trending/most-visited](#operation/getV1CryptocurrencyTrendingMostvisited)\
    \ - Trending Most Visited\n- [/v1/cryptocurrency/trending/gainers-losers](#operation/getV1CryptocurrencyTrendingGainerslosers)\
    \ - Trending Gainers & Losers"
- name: "fiat"
  description: "##### API endpoints for fiat currencies. This category currently includes\
    \ 1 endpoint:\n- [/v1/fiat/map](#operation/getV1FiatMap) - CoinMarketCap ID map"
- name: "exchange"
  description: "##### API endpoints for cryptocurrency exchanges. This category currently\
    \ includes 7 endpoints:\n- [/v1/exchange/map](#operation/getV1ExchangeMap) - CoinMarketCap\
    \ ID map\n- [/v1/exchange/info](#operation/getV1ExchangeInfo) - Metadata\n- [/v1/exchange/listings/latest](#operation/getV1ExchangeListingsLatest)\
    \ - Latest listings\n- [/v1/exchange/quotes/latest](#operation/getV1ExchangeQuotesLatest)\
    \ - Latest quotes\n- [/v1/exchange/quotes/historical](#operation/getV1ExchangeQuotesHistorical)\
    \ - Historical quotes\n- [/v1/exchange/market-pairs/latest](#operation/getV1ExchangeMarketpairsLatest)\
    \ - Latest market pairs"
- name: "global-metrics"
  description: "##### API endpoints for global aggregate market data. This category\
    \ currently includes 2 endpoints:\n- [/v1/global-metrics/quotes/latest](#operation/getV1GlobalmetricsQuotesLatest)\
    \ - Latest global metrics  \n- [/v1/global-metrics/quotes/historical](#operation/getV1GlobalmetricsQuotesHistorical)\
    \ - Historical global metrics"
- name: "tools"
  description: "##### API endpoints for convenience utilities. This category currently\
    \ includes 1 endpoint:\n- [/v2/tools/price-conversion](#operation/getV2ToolsPriceconversion)\
    \ - Price conversion tool\n- [/v1/tools/postman](#operation/getV1ToolsPostman)\
    \ - Postman tool"
- name: "blockchain"
  description: "##### API endpoints for blockchain data. This category currently includes\
    \ 1 endpoint:\n- [/v1/blockchain/statistics/latest](#operation/getV1BlockchainStatisticsLatest)\
    \ - Latest statistics"
- name: "content"
  description: "##### API endpoints for content data. This category currently includes\
    \ 4 endpoints:\n- [/v1/content/latest](#operation/getV1ContentLatest) - Content\
    \ latest\n- [/v1/content/posts/top](#operation/getV1ContentPostsTop) - Content\
    \ top posts\n- [/v1/content/posts/latest](#operation/getV1ContentPostsLatest)\
    \ - Content latest posts\n- [/v1/content/posts/comments](#operation/getV1ContentPostsComments)\
    \ - Content post comments"
- name: "key"
  description: "##### API endpoints for managing your API key. This category currently\
    \ includes 1 endpoint:\n- [/v1/key/info](#operation/getV1KeyInfo) - Key Info"
- name: "deprecated"
  description: "##### Deprecated (V1) Endpoints\n<br /><br />These endpoints have\
    \ been replaced with their V2 versions, and are no longer being actively supported.\n\
    <br />We strongly suggest migrating to V2 endpoints, and this documentation only\
    \ exists for legacy purposes."
schemes:
- "https"
paths:
  /v1/content/latest:
    get:
      summary: "Content Latest"
      description: "Returns a paginated list of content pulled from CMC News/Headlines\
        \ and Alexandria articles.\n\n  \n  **This endpoint is available on the following\
        \ <a href=\"https://coinmarketcap.com/api/features\" target=\"_blank\">API\
        \ plans</a>:**\n  - Professional\n  - Enterprise\n\n**Cache / Update frequency:**\
        \ Five Minutes\n**Plan credit use:** 1 call credit per 100 items returned\
        \ (rounded up)."
      operationId: "getV1ContentLatest"
      parameters:
      - name: "start"
        in: "query"
        description: "Optionally offset the start (1-based index) of the paginated\
          \ list of items to return."
        required: false
        type: "integer"
        default: 1
        minimum: 1
        x-exportParamName: "Start"
        x-optionalDataType: "Int32"
      - name: "limit"
        in: "query"
        description: "Optionally specify the number of results to return. Use this\
          \ parameter and the \"start\" parameter to determine your own pagination\
          \ size."
        required: false
        type: "integer"
        default: 100
        maximum: 5000
        minimum: 1
        x-exportParamName: "Limit"
        x-optionalDataType: "Int32"
      - name: "id"
        in: "query"
        description: "Optional cryptocurrency CoinMarketCap IDs. Example: 1027"
        required: false
        type: "string"
        pattern: "^\\d*$"
        x-exportParamName: "Id"
        x-optionalDataType: "String"
      - name: "slug"
        in: "query"
        description: "Alternatively pass one cryptocurrency slug. Example: \"ethereum\""
        required: false
        type: "string"
        pattern: "^[0-9a-z-]*$"
        x-convert:
          lowercase: true
        x-exportParamName: "Slug"
        x-optionalDataType: "String"
      - name: "symbol"
        in: "query"
        description: "Alternatively pass one cryptocurrency symbols. Example: \"ETH\""
        required: false
        type: "string"
        pattern: "^[0-9A-Za-z$@\\-]*$"
        x-exportParamName: "Symbol"
        x-optionalDataType: "String"
      - name: "news_type"
        in: "query"
        description: "Optionally specify a comma-separated list of supplemental data\
          \ fields: `news`, `gravity`, or `alexandria` to filter news sources. Pass\
          \ `all` or leave it blank to include all news types."
        required: false
        type: "string"
        default: "all"
        pattern: "^(news|gravity|alexandria|all)+(?:,(news|gravity|alexandria|all)+)*$"
        x-exportParamName: "NewsType"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Successful"
          schema:
            $ref: "#/definitions/Content Latest - Response Model"
        "400":
          description: "Bad Request"
          schema:
            $ref: "#/definitions/HTTP Status 400 Error Object"
        "401":
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/HTTP Status 401 Error Object"
        "403":
          description: "Forbidden"
          schema:
            $ref: "#/definitions/HTTP Status 403 Error Object"
        "429":
          description: "Too Many Requests"
          schema:
            $ref: "#/definitions/HTTP Status 429 Error Object"
        "500":
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/HTTP Status 500 Error Object"
  /v1/cryptocurrency/airdrop:
    get:
      tags:
      - "cryptocurrency"
      summary: "Airdrop"
      description: "Returns information about a single airdrop available on CoinMarketCap.\
        \ Includes the cryptocurrency metadata. \n\n  **This endpoint is available\
        \ on the following <a href=\"https://coinmarketcap.com/api/features\" target=\"\
        _blank\">API plans</a>:**\n  - Hobbyist\n  - Startup\n  - Standard\n  - Professional\n\
        \  - Enterprise\n\n**Cache / Update frequency:** Data is updated only as needed,\
        \ every 30 seconds.  \n**Plan credit use:** 1 API call credit per request\
        \ no matter query size.  \n**CMC equivalent pages:** Our free airdrops page\
        \ [coinmarketcap.com/airdrop/](https://coinmarketcap.com/airdrop/)."
      operationId: "getV1CryptocurrencyAirdrop"
      parameters:
      - name: "id"
        in: "query"
        description: "Airdrop Unique ID. This can be found using the Airdrops API."
        required: true
        type: "string"
        x-exportParamName: "Id"
      responses:
        "200":
          description: "Successful"
          schema:
            $ref: "#/definitions/Airdrop - Response Model"
        "400":
          description: "Bad Request"
          schema:
            $ref: "#/definitions/HTTP Status 400 Error Object"
        "401":
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/HTTP Status 401 Error Object"
        "403":
          description: "Forbidden"
          schema:
            $ref: "#/definitions/HTTP Status 403 Error Object"
        "429":
          description: "Too Many Requests"
          schema:
            $ref: "#/definitions/HTTP Status 429 Error Object"
        "500":
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/HTTP Status 500 Error Object"
  /v1/cryptocurrency/airdrops:
    get:
      tags:
      - "cryptocurrency"
      summary: "Airdrops"
      description: "Returns a list of past, present, or future airdrops which have\
        \ run on CoinMarketCap.\n\n  **This endpoint is available on the following\
        \ <a href=\"https://coinmarketcap.com/api/features\" target=\"_blank\">API\
        \ plans</a>:**\n  - Hobbyist\n  - Startup\n  - Standard\n  - Professional\n\
        \  - Enterprise\n\n**Cache / Update frequency:** Data is updated only as needed,\
        \ every 30 seconds.  \n**Plan credit use:** 1 API call credit per request\
        \ no matter query size.  \n**CMC equivalent pages:** Our free airdrops page\
        \ [coinmarketcap.com/airdrop/](https://coinmarketcap.com/airdrop/)."
      operationId: "getV1CryptocurrencyAirdrops"
      parameters:
      - name: "start"
        in: "query"
        description: "Optionally offset the start (1-based index) of the paginated\
          \ list of items to return."
        required: false
        type: "integer"
        default: 1
        minimum: 1
        x-exportParamName: "Start"
        x-optionalDataType: "Int32"
      - name: "limit"
        in: "query"
        description: "Optionally specify the number of results to return. Use this\
          \ parameter and the \"start\" parameter to determine your own pagination\
          \ size."
        required: false
        type: "integer"
        default: 100
        maximum: 5000
        minimum: 1
        x-exportParamName: "Limit"
        x-optionalDataType: "Int32"
      - name: "status"
        in: "query"
        description: "What status of airdrops."
        required: false
        type: "string"
        default: "ONGOING"
        enum:
        - "ENDED"
        - "ONGOING"
        - "UPCOMING"
        x-exportParamName: "Status"
        x-optionalDataType: "String"
      - name: "id"
        in: "query"
        description: "Filtered airdrops by one cryptocurrency CoinMarketCap IDs. Example:\
          \ 1"
        required: false
        type: "string"
        pattern: "^\\d*$"
        x-exportParamName: "Id"
        x-optionalDataType: "String"
      - name: "slug"
        in: "query"
        description: "Alternatively filter airdrops by a cryptocurrency slug. Example:\
          \ \"bitcoin\""
        required: false
        type: "string"
        pattern: "^[0-9a-z-]*$"
        x-convert:
          lowercase: true
        x-exportParamName: "Slug"
        x-optionalDataType: "String"
      - name: "symbol"
        in: "query"
        description: "Alternatively filter airdrops one cryptocurrency symbol. Example:\
          \ \"BTC\"."
        required: false
        type: "string"
        pattern: "^[0-9A-Za-z$@\\-]*$"
        x-exportParamName: "Symbol"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Successful"
          schema:
            $ref: "#/definitions/Airdrops - Response Model"
        "400":
          description: "Bad Request"
          schema:
            $ref: "#/definitions/HTTP Status 400 Error Object"
        "401":
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/HTTP Status 401 Error Object"
        "403":
          description: "Forbidden"
          schema:
            $ref: "#/definitions/HTTP Status 403 Error Object"
        "429":
          description: "Too Many Requests"
          schema:
            $ref: "#/definitions/HTTP Status 429 Error Object"
        "500":
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/HTTP Status 500 Error Object"
  /v1/cryptocurrency/categories:
    get:
      tags:
      - "cryptocurrency"
      summary: "Categories"
      description: "Returns information about all coin categories available on CoinMarketCap.\
        \ Includes a paginated list of cryptocurrency quotes and metadata from each\
        \ category.\n\n  **This endpoint is available on the following <a href=\"\
        https://coinmarketcap.com/api/features\" target=\"_blank\">API plans</a>:**\n\
        \  - Free\n  - Hobbyist\n  - Startup\n  - Standard\n  - Professional\n  -\
        \ Enterprise\n\n**Cache / Update frequency:** Data is updated only as needed,\
        \ every 30 seconds.  \n**Plan credit use:** 1 API call credit per request\
        \ + 1 call credit per 200 cryptocurrencies returned (rounded up) and 1 call\
        \ credit per `convert` option beyond the first.  \n**CMC equivalent pages:**\
        \ Our free airdrops page [coinmarketcap.com/cryptocurrency-category/](https://coinmarketcap.com/cryptocurrency-category/)."
      operationId: "getV1CryptocurrencyCategories"
      parameters:
      - name: "start"
        in: "query"
        description: "Optionally offset the start (1-based index) of the paginated\
          \ list of items to return."
        required: false
        type: "integer"
        default: 1
        minimum: 1
        x-exportParamName: "Start"
        x-optionalDataType: "Int32"
      - name: "limit"
        in: "query"
        description: "Optionally specify the number of results to return. Use this\
          \ parameter and the \"start\" parameter to determine your own pagination\
          \ size."
        required: false
        type: "integer"
        maximum: 5000
        minimum: 1
        x-exportParamName: "Limit"
        x-optionalDataType: "Int32"
      - name: "id"
        in: "query"
        description: "Filtered categories by one or more comma-separated cryptocurrency\
          \ CoinMarketCap IDs. Example: 1,2"
        required: false
        type: "string"
        pattern: "^\\d+(?:,\\d+)*$"
        x-exportParamName: "Id"
        x-optionalDataType: "String"
      - name: "slug"
        in: "query"
        description: "Alternatively filter categories by a comma-separated list of\
          \ cryptocurrency slugs. Example: \"bitcoin,ethereum\""
        required: false
        type: "string"
        pattern: "^[0-9a-z-]+(?:,[0-9a-z-]+)*$"
        x-convert:
          lowercase: true
        x-exportParamName: "Slug"
        x-optionalDataType: "String"
      - name: "symbol"
        in: "query"
        description: "Alternatively filter categories one or more comma-separated\
          \ cryptocurrency symbols. Example: \"BTC,ETH\"."
        required: false
        type: "string"
        pattern: "^[0-9A-Za-z$@\\-,]+(?:,[0-9A-Za-z$@\\-]+)*$"
        x-exportParamName: "Symbol"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Successful"
          schema:
            $ref: "#/definitions/Categories - Response Model"
        "400":
          description: "Bad Request"
          schema:
            $ref: "#/definitions/HTTP Status 400 Error Object"
        "401":
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/HTTP Status 401 Error Object"
        "403":
          description: "Forbidden"
          schema:
            $ref: "#/definitions/HTTP Status 403 Error Object"
        "429":
          description: "Too Many Requests"
          schema:
            $ref: "#/definitions/HTTP Status 429 Error Object"
        "500":
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/HTTP Status 500 Error Object"
  /v1/cryptocurrency/category:
    get:
      tags:
      - "cryptocurrency"
      summary: "Category"
      description: "Returns information about a single coin category available on\
        \ CoinMarketCap. Includes a paginated list of the cryptocurrency quotes and\
        \ metadata for the category.\n\n  **This endpoint is available on the following\
        \ <a href=\"https://coinmarketcap.com/api/features\" target=\"_blank\">API\
        \ plans</a>:**\n  - Free\n  - Hobbyist\n  - Startup\n  - Standard\n  - Professional\n\
        \  - Enterprise\n\n**Cache / Update frequency:** Data is updated only as needed,\
        \ every 30 seconds.  \n**Plan credit use:** 1 API call credit per request\
        \ + 1 call credit per 200 cryptocurrencies returned (rounded up) and 1 call\
        \ credit per `convert` option beyond the first.  \n**CMC equivalent pages:**\
        \ Our Cryptocurrency Category page [coinmarketcap.com/cryptocurrency-category/](https://coinmarketcap.com/cryptocurrency-category/)."
      operationId: "getV1CryptocurrencyCategory"
      parameters:
      - name: "id"
        in: "query"
        description: "The Category ID. This can be found using the Categories API."
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "start"
        in: "query"
        description: "Optionally offset the start (1-based index) of the paginated\
          \ list of coins to return."
        required: false
        type: "integer"
        default: 1
        minimum: 1
        x-exportParamName: "Start"
        x-optionalDataType: "Int32"
      - name: "limit"
        in: "query"
        description: "Optionally specify the number of coins to return. Use this parameter\
          \ and the \"start\" parameter to determine your own pagination size."
        required: false
        type: "integer"
        default: 100
        maximum: 1000
        minimum: 1
        x-exportParamName: "Limit"
        x-optionalDataType: "Int32"
      - name: "convert"
        in: "query"
        description: "Optionally calculate market quotes in up to 120 currencies at\
          \ once by passing a comma-separated list of cryptocurrency or fiat currency\
          \ symbols. Each additional convert option beyond the first requires an additional\
          \ call credit. A list of supported fiat options can be found [here](#section/Standards-and-Conventions).\
          \ Each conversion is returned in its own \"quote\" object."
        required: false
        type: "string"
        pattern: "^[0-9A-Za-z$@\\-,]+(?:,[0-9A-Za-z$@\\-]+)*$"
        x-exportParamName: "Convert"
        x-optionalDataType: "String"
      - name: "convert_id"
        in: "query"
        description: "Optionally calculate market quotes by CoinMarketCap ID instead\
          \ of symbol. This option is identical to `convert` outside of ID format.\
          \ Ex: convert_id=1,2781 would replace convert=BTC,USD in your query. This\
          \ parameter cannot be used when `convert` is used."
        required: false
        type: "string"
        pattern: "^\\d+(?:,\\d+)*$"
        x-exportParamName: "ConvertId"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Successful"
          schema:
            $ref: "#/definitions/Category - Response Model"
        "400":
          description: "Bad Request"
          schema:
            $ref: "#/definitions/HTTP Status 400 Error Object"
        "401":
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/HTTP Status 401 Error Object"
        "403":
          description: "Forbidden"
          schema:
            $ref: "#/definitions/HTTP Status 403 Error Object"
        "429":
          description: "Too Many Requests"
          schema:
            $ref: "#/definitions/HTTP Status 429 Error Object"
        "500":
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/HTTP Status 500 Error Object"
  /v1/cryptocurrency/info:
    get:
      tags:
      - "deprecated"
      summary: "Metadata v1 (deprecated)"
      description: "Returns all static metadata available for one or more cryptocurrencies.\
        \ This information includes details like logo, description, official website\
        \ URL, social links, and links to a cryptocurrency's technical documentation.\n\
        \n\n**This endpoint is available on the following <a href=\"https://coinmarketcap.com/api/features\"\
        \ target=\"_blank\">API plans</a>:**\n- Basic\n- Startup\n- Hobbyist\n- Standard\n\
        - Professional\n- Enterprise\n\n**Cache / Update frequency:** Static data\
        \ is updated only as needed, every 30 seconds.  \n**Plan credit use:** 1 call\
        \ credit per 100 cryptocurrencies returned (rounded up).  \n**CMC equivalent\
        \ pages:** Cryptocurrency detail page metadata like [coinmarketcap.com/currencies/bitcoin/](https://coinmarketcap.com/currencies/bitcoin/).\
        \  "
      operationId: "getV1CryptocurrencyInfo"
      parameters:
      - name: "id"
        in: "query"
        description: "One or more comma-separated CoinMarketCap cryptocurrency IDs.\
          \ Example: \"1,2\""
        required: false
        type: "string"
        pattern: "^\\d+(?:,\\d+)*$"
        x-exportParamName: "Id"
        x-optionalDataType: "String"
      - name: "slug"
        in: "query"
        description: "Alternatively pass a comma-separated list of cryptocurrency\
          \ slugs. Example: \"bitcoin,ethereum\""
        required: false
        type: "string"
        pattern: "^[0-9a-z-]+(?:,[0-9a-z-]+)*$"
        x-convert:
          lowercase: true
        x-exportParamName: "Slug"
        x-optionalDataType: "String"
      - name: "symbol"
        in: "query"
        description: "Alternatively pass one or more comma-separated cryptocurrency\
          \ symbols. Example: \"BTC,ETH\". At least one \"id\" *or* \"slug\" *or*\
          \ \"symbol\" is required for this request."
        required: false
        type: "string"
        pattern: "^[0-9A-Za-z$@\\-,]+(?:,[0-9A-Za-z$@\\-]+)*$"
        x-exportParamName: "Symbol"
        x-optionalDataType: "String"
      - name: "address"
        in: "query"
        description: "Alternatively pass in a contract address. Example: \"0xc40af1e4fecfa05ce6bab79dcd8b373d2e436c4e\""
        required: false
        type: "string"
        x-exportParamName: "Address"
        x-optionalDataType: "String"
      - name: "aux"
        in: "query"
        description: "Optionally specify a comma-separated list of supplemental data\
          \ fields to return. Pass `urls,logo,description,tags,platform,date_added,notice,status`\
          \ to include all auxiliary fields."
        required: false
        type: "string"
        default: "urls,logo,description,tags,platform,date_added,notice"
        pattern: "^(urls|logo|description|tags|platform|date_added|notice|status)+(?:,(urls|logo|description|tags|platform|date_added|notice|status)+)*$"
        x-exportParamName: "Aux"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Successful"
          schema:
            $ref: "#/definitions/Cryptocurrencies Info - Response Model"
        "400":
          description: "Bad Request"
          schema:
            $ref: "#/definitions/HTTP Status 400 Error Object"
        "401":
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/HTTP Status 401 Error Object"
        "403":
          description: "Forbidden"
          schema:
            $ref: "#/definitions/HTTP Status 403 Error Object"
        "429":
          description: "Too Many Requests"
          schema:
            $ref: "#/definitions/HTTP Status 429 Error Object"
        "500":
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/HTTP Status 500 Error Object"
  /v1/cryptocurrency/map:
    get:
      tags:
      - "cryptocurrency"
      summary: "CoinMarketCap ID Map"
      description: "Returns a mapping of all cryptocurrencies to unique CoinMarketCap\
        \ `id`s. Per our <a href=\"#section/Best-Practices\" target=\"_blank\">Best\
        \ Practices</a> we recommend utilizing CMC ID instead of cryptocurrency symbols\
        \ to securely identify cryptocurrencies with our other endpoints and in your\
        \ own application logic.  Each cryptocurrency returned includes typical identifiers\
        \ such as `name`, `symbol`, and `token_address` for flexible mapping to `id`.\
        \   \n  \n  By default this endpoint returns cryptocurrencies that have actively\
        \ tracked markets on supported exchanges. You may receive a map of all inactive\
        \ cryptocurrencies by passing `listing_status=inactive`. You may also receive\
        \ a map of registered cryptocurrency projects that are listed but do not yet\
        \ meet methodology requirements to have tracked markets via `listing_status=untracked`.\
        \ Please review our <a target=\"_blank\" href=\"https://coinmarketcap.com/methodology/\"\
        >methodology documentation</a> for additional details on listing states. \n\
        \    \n  Cryptocurrencies returned include `first_historical_data` and `last_historical_data`\
        \ timestamps to conveniently reference historical date ranges available to\
        \ query with historical time-series data endpoints. You may also use the `aux`\
        \ parameter to only include properties you require to slim down the payload\
        \ if calling this endpoint frequently. \n\n  **This endpoint is available\
        \ on the following <a href=\"https://coinmarketcap.com/api/features\" target=\"\
        _blank\">API plans</a>:**\n  - Basic\n  - Hobbyist\n  - Startup\n  - Standard\n\
        \  - Professional\n  - Enterprise\n\n**Cache / Update frequency:** Mapping\
        \ data is updated only as needed, every 30 seconds.  \n**Plan credit use:**\
        \ 1 API call credit per request no matter query size.  \n**CMC equivalent\
        \ pages:** No equivalent, this data is only available via API."
      operationId: "getV1CryptocurrencyMap"
      parameters:
      - name: "listing_status"
        in: "query"
        description: "Only active cryptocurrencies are returned by default. Pass `inactive`\
          \ to get a list of cryptocurrencies that are no longer active. Pass `untracked`\
          \ to get a list of cryptocurrencies that are listed but do not yet meet\
          \ methodology requirements to have tracked markets available. You may pass\
          \ one or more comma-separated values."
        required: false
        type: "string"
        default: "active"
        pattern: "^(active|inactive|untracked)+(?:,(active|inactive|untracked)+)*$"
        x-exportParamName: "ListingStatus"
        x-optionalDataType: "String"
      - name: "start"
        in: "query"
        description: "Optionally offset the start (1-based index) of the paginated\
          \ list of items to return."
        required: false
        type: "integer"
        default: 1
        minimum: 1
        x-exportParamName: "Start"
        x-optionalDataType: "Int32"
      - name: "limit"
        in: "query"
        description: "Optionally specify the number of results to return. Use this\
          \ parameter and the \"start\" parameter to determine your own pagination\
          \ size."
        required: false
        type: "integer"
        maximum: 5000
        minimum: 1
        x-exportParamName: "Limit"
        x-optionalDataType: "Int32"
      - name: "sort"
        in: "query"
        description: "What field to sort the list of cryptocurrencies by."
        required: false
        type: "string"
        default: "id"
        enum:
        - "cmc_rank"
        - "id"
        x-exportParamName: "Sort"
        x-optionalDataType: "String"
      - name: "symbol"
        in: "query"
        description: "Optionally pass a comma-separated list of cryptocurrency symbols\
          \ to return CoinMarketCap IDs for. If this option is passed, other options\
          \ will be ignored."
        required: false
        type: "string"
        pattern: "^[0-9A-Za-z$@\\-,]+(?:,[0-9A-Za-z$@\\-]+)*$"
        x-exportParamName: "Symbol"
        x-optionalDataType: "String"
      - name: "aux"
        in: "query"
        description: "Optionally specify a comma-separated list of supplemental data\
          \ fields to return. Pass `platform,first_historical_data,last_historical_data,is_active,status`\
          \ to include all auxiliary fields."
        required: false
        type: "string"
        default: "platform,first_historical_data,last_historical_data,is_active"
        pattern: "^(platform|first_historical_data|last_historical_data|is_active|status)+(?:,(platform|first_historical_data|last_historical_data|is_active|status)+)*$"
        x-exportParamName: "Aux"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Successful"
          schema:
            $ref: "#/definitions/Cryptocurrency Map - Response Model"
        "400":
          description: "Bad Request"
          schema:
            $ref: "#/definitions/HTTP Status 400 Error Object"
        "401":
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/HTTP Status 401 Error Object"
        "403":
          description: "Forbidden"
          schema:
            $ref: "#/definitions/HTTP Status 403 Error Object"
        "429":
          description: "Too Many Requests"
          schema:
            $ref: "#/definitions/HTTP Status 429 Error Object"
        "500":
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/HTTP Status 500 Error Object"
  /v1/exchange/info:
    get:
      tags:
      - "exchange"
      summary: "Metadata"
      description: "Returns all static metadata for one or more exchanges. This information\
        \ includes details like launch date, logo, official website URL, social links,\
        \ and market fee documentation URL.\n\n  **This endpoint is available on the\
        \ following <a href=\"https://coinmarketcap.com/api/features\" target=\"_blank\"\
        >API plans</a>:**\n  - Basic\n  - Hobbyist\n  - Startup\n  - Standard\n  -\
        \ Professional\n  - Enterprise\n\n**Cache / Update frequency:** Static data\
        \ is updated only as needed, every 30 seconds.  \n**Plan credit use:** 1 call\
        \ credit per 100 exchanges returned (rounded up).  \n**CMC equivalent pages:**\
        \ Exchange detail page metadata like [coinmarketcap.com/exchanges/binance/](https://coinmarketcap.com/exchanges/binance/).\
        \  "
      operationId: "getV1ExchangeInfo"
      parameters:
      - name: "id"
        in: "query"
        description: "One or more comma-separated CoinMarketCap cryptocurrency exchange\
          \ ids. Example: \"1,2\""
        required: false
        type: "string"
        pattern: "^\\d+(?:,\\d+)*$"
        x-exportParamName: "Id"
        x-optionalDataType: "String"
      - name: "slug"
        in: "query"
        description: "Alternatively, one or more comma-separated exchange names in\
          \ URL friendly shorthand \"slug\" format (all lowercase, spaces replaced\
          \ with hyphens). Example: \"binance,gdax\". At least one \"id\" *or* \"\
          slug\" is required."
        required: false
        type: "string"
        pattern: "^[0-9a-z-]+(?:,[0-9a-z-]+)*$"
        x-convert:
          lowercase: true
        x-exportParamName: "Slug"
        x-optionalDataType: "String"
      - name: "aux"
        in: "query"
        description: "Optionally specify a comma-separated list of supplemental data\
          \ fields to return. Pass `urls,logo,description,date_launched,notice,status`\
          \ to include all auxiliary fields."
        required: false
        type: "string"
        default: "urls,logo,description,date_launched,notice"
        pattern: "^(urls|logo|description|date_launched|notice|status)+(?:,(urls|logo|description|date_launched|notice|status)+)*$"
        x-exportParamName: "Aux"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Successful"
          schema:
            $ref: "#/definitions/Exchanges Info - Response Model"
        "400":
          description: "Bad Request"
          schema:
            $ref: "#/definitions/HTTP Status 400 Error Object"
        "401":
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/HTTP Status 401 Error Object"
        "403":
          description: "Forbidden"
          schema:
            $ref: "#/definitions/HTTP Status 403 Error Object"
        "429":
          description: "Too Many Requests"
          schema:
            $ref: "#/definitions/HTTP Status 429 Error Object"
        "500":
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/HTTP Status 500 Error Object"
  /v1/exchange/map:
    get:
      tags:
      - "exchange"
      summary: "CoinMarketCap ID Map"
      description: "Returns a paginated list of all active cryptocurrency exchanges\
        \ by CoinMarketCap ID. We recommend using this convenience endpoint to lookup\
        \ and utilize our unique exchange `id` across all endpoints as typical exchange\
        \ identifiers may change over time. As a convenience you may pass a comma-separated\
        \ list of exchanges by `slug` to filter this list to only those you require\
        \ or the `aux` parameter to slim down the payload.\n\nBy default this endpoint\
        \ returns exchanges that have at least 1 actively tracked market. You may\
        \ receive a map of all inactive cryptocurrencies by passing `listing_status=inactive`.\
        \ You may also receive a map of registered exchanges that are listed but do\
        \ not yet meet methodology requirements to have tracked markets available\
        \ via `listing_status=untracked`. Please review **(3) Listing Tiers** in our\
        \ <a target=\"_blank\" href=\"https://coinmarketcap.com/methodology/\">methodology\
        \ documentation</a> for additional details on listing states. \n\n**This endpoint\
        \ is available on the following <a href=\"https://coinmarketcap.com/api/features\"\
        \ target=\"_blank\">API plans</a>:**\n  - Basic\n  - Hobbyist\n  - Startup\n\
        \  - Standard\n  - Professional\n  - Enterprise\n\n**Cache / Update frequency:**\
        \ Mapping data is updated only as needed, every 30 seconds.  \n**Plan credit\
        \ use:** 1 call credit per call.  \n**CMC equivalent pages:** No equivalent,\
        \ this data is only available via API.  "
      operationId: "getV1ExchangeMap"
      parameters:
      - name: "listing_status"
        in: "query"
        description: "Only active exchanges are returned by default. Pass `inactive`\
          \ to get a list of exchanges that are no longer active. Pass `untracked`\
          \ to get a list of exchanges that are registered but do not currently meet\
          \ methodology requirements to have active markets tracked. You may pass\
          \ one or more comma-separated values."
        required: false
        type: "string"
        default: "active"
        pattern: "^(active|inactive|untracked)+(?:,(active|inactive|untracked)+)*$"
        x-exportParamName: "ListingStatus"
        x-optionalDataType: "String"
      - name: "slug"
        in: "query"
        description: "Optionally pass a comma-separated list of exchange slugs (lowercase\
          \ URL friendly shorthand name with spaces replaced with dashes) to return\
          \ CoinMarketCap IDs for. If this option is passed, other options will be\
          \ ignored."
        required: false
        type: "string"
        pattern: "^[0-9a-z-]+(?:,[0-9a-z-]+)*$"
        x-convert:
          lowercase: true
        x-exportParamName: "Slug"
        x-optionalDataType: "String"
      - name: "start"
        in: "query"
        description: "Optionally offset the start (1-based index) of the paginated\
          \ list of items to return."
        required: false
        type: "integer"
        default: 1
        minimum: 1
        x-exportParamName: "Start"
        x-optionalDataType: "Int32"
      - name: "limit"
        in: "query"
        description: "Optionally specify the number of results to return. Use this\
          \ parameter and the \"start\" parameter to determine your own pagination\
          \ size."
        required: false
        type: "integer"
        maximum: 5000
        minimum: 1
        x-exportParamName: "Limit"
        x-optionalDataType: "Int32"
      - name: "sort"
        in: "query"
        description: "What field to sort the list of exchanges by."
        required: false
        type: "string"
        default: "id"
        enum:
        - "volume_24h"
        - "id"
        x-exportParamName: "Sort"
        x-optionalDataType: "String"
      - name: "aux"
        in: "query"
        description: "Optionally specify a comma-separated list of supplemental data\
          \ fields to return. Pass `first_historical_data,last_historical_data,is_active,status`\
          \ to include all auxiliary fields."
        required: false
        type: "string"
        default: "first_historical_data,last_historical_data,is_active"
        pattern: "^(first_historical_data|last_historical_data|is_active|status)+(?:,(first_historical_data|last_historical_data|is_active|status)+)*$"
        x-exportParamName: "Aux"
        x-optionalDataType: "String"
      - name: "crypto_id"
        in: "query"
        description: "Optionally include one fiat or cryptocurrency IDs to filter\
          \ market pairs by. For example `?crypto_id=1` would only return exchanges\
          \ that have BTC."
        required: false
        type: "string"
        pattern: "^\\d*$"
        x-exportParamName: "CryptoId"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Successful"
          schema:
            $ref: "#/definitions/Exchange Map - Response Model"
        "400":
          description: "Bad Request"
          schema:
            $ref: "#/definitions/HTTP Status 400 Error Object"
        "401":
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/HTTP Status 401 Error Object"
        "403":
          description: "Forbidden"
          schema:
            $ref: "#/definitions/HTTP Status 403 Error Object"
        "429":
          description: "Too Many Requests"
          schema:
            $ref: "#/definitions/HTTP Status 429 Error Object"
        "500":
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/HTTP Status 500 Error Object"
  /v1/fiat/map:
    get:
      tags:
      - "fiat"
      summary: "CoinMarketCap ID Map"
      description: "Returns a mapping of all supported fiat currencies to unique CoinMarketCap\
        \ ids. Per our Best Practices we recommend utilizing CMC ID instead of currency\
        \ symbols to securely identify assets with our other endpoints and in your\
        \ own application logic. \n\n  **This endpoint is available on the following\
        \ <a href=\"https://coinmarketcap.com/api/features\" target=\"_blank\">API\
        \ plans</a>:**\n  - Basic\n  - Hobbyist\n  - Startup\n  - Standard\n  - Professional\n\
        \  - Enterprise\n\n**Cache / Update frequency:** Mapping data is updated only\
        \ as needed, every 30 seconds.  \n**Plan credit use:** 1 API call credit per\
        \ request no matter query size.  \n**CMC equivalent pages:** No equivalent,\
        \ this data is only available via API."
      operationId: "getV1FiatMap"
      parameters:
      - name: "start"
        in: "query"
        description: "Optionally offset the start (1-based index) of the paginated\
          \ list of items to return."
        required: false
        type: "integer"
        default: 1
        minimum: 1
        x-exportParamName: "Start"
        x-optionalDataType: "Int32"
      - name: "limit"
        in: "query"
        description: "Optionally specify the number of results to return. Use this\
          \ parameter and the \"start\" parameter to determine your own pagination\
          \ size."
        required: false
        type: "integer"
        maximum: 5000
        minimum: 1
        x-exportParamName: "Limit"
        x-optionalDataType: "Int32"
      - name: "sort"
        in: "query"
        description: "What field to sort the list by."
        required: false
        type: "string"
        default: "id"
        enum:
        - "name"
        - "id"
        x-exportParamName: "Sort"
        x-optionalDataType: "String"
      - name: "include_metals"
        in: "query"
        description: "Pass `true` to include precious metals."
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "IncludeMetals"
        x-optionalDataType: "Bool"
      responses:
        "200":
          description: "Successful"
          schema:
            $ref: "#/definitions/Fiat Map - Response Model"
        "400":
          description: "Bad Request"
          schema:
            $ref: "#/definitions/HTTP Status 400 Error Object"
        "401":
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/HTTP Status 401 Error Object"
        "403":
          description: "Forbidden"
          schema:
            $ref: "#/definitions/HTTP Status 403 Error Object"
        "429":
          description: "Too Many Requests"
          schema:
            $ref: "#/definitions/HTTP Status 429 Error Object"
        "500":
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/HTTP Status 500 Error Object"
  /v1/key/info:
    get:
      tags:
      - "key"
      summary: "Key Info"
      description: "Returns API key details and usage stats. This endpoint can be\
        \ used to programmatically monitor your key usage compared to the rate limit\
        \ and daily/monthly credit limits available to your API plan. You may use\
        \ the Developer Portal's account dashboard as an alternative to this endpoint.\n\
        \n  **This endpoint is available on the following <a href=\"https://coinmarketcap.com/api/features\"\
        \ target=\"_blank\">API plans</a>:**\n  - Basic\n  - Hobbyist\n  - Startup\n\
        \  - Standard\n  - Professional\n  - Enterprise\n\n  **Cache / Update frequency:**\
        \ No cache, this endpoint updates as requests are made with your key.  \n\
        \  **Plan credit use:** No API credit cost. Requests to this endpoint do contribute\
        \ to your minute based rate limit however.  \n  **CMC equivalent pages:**\
        \ Our Developer Portal dashboard for your API Key at [pro.coinmarketcap.com/account](https://pro.coinmarketcap.com/account)."
      operationId: "getV1KeyInfo"
      parameters: []
      responses:
        "200":
          description: "Successful"
          schema:
            $ref: "#/definitions/Account Info - Response Model"
        "400":
          description: "Bad Request"
          schema:
            $ref: "#/definitions/HTTP Status 400 Error Object"
        "401":
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/HTTP Status 401 Error Object"
        "403":
          description: "Forbidden"
          schema:
            $ref: "#/definitions/HTTP Status 403 Error Object"
        "429":
          description: "Too Many Requests"
          schema:
            $ref: "#/definitions/HTTP Status 429 Error Object"
        "500":
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/HTTP Status 500 Error Object"
  /v1/tools/postman:
    get:
      tags:
      - "tools"
      summary: "Postman Conversion v1"
      description: "Convert APIs into postman format. You can reference the operation\
        \ from <a href=\"https://coinmarketcap.com/alexandria/article/register-for-coinmarketcap-api\"\
        \ target=\"_blank\"><b>this article</b></a>.\n  \n  \n  **This endpoint is\
        \ available on the following <a href=\"https://coinmarketcap.com/api/features\"\
        \ target=\"_blank\">API plans</a>:**\n  - Free\n  - Hobbyist\n  - Startup\n\
        \  - Standard\n  - Professional\n  - Enterprise\n\n  **Technical Notes**\n\
        \  - Set the env variables in the postman: {{baseUrl}}, {{API_KEY}}\n"
      operationId: "getV1ToolsPostman"
      parameters: []
      responses:
        "400":
          description: "Bad Request"
          schema:
            $ref: "#/definitions/HTTP Status 400 Error Object"
        "401":
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/HTTP Status 401 Error Object"
        "403":
          description: "Forbidden"
          schema:
            $ref: "#/definitions/HTTP Status 403 Error Object"
        "429":
          description: "Too Many Requests"
          schema:
            $ref: "#/definitions/HTTP Status 429 Error Object"
        "500":
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/HTTP Status 500 Error Object"
  /v1/tools/price-conversion:
    get:
      tags:
      - "deprecated"
      summary: "Price Conversion v1 (deprecated)"
      description: "Convert an amount of one cryptocurrency or fiat currency into\
        \ one or more different currencies utilizing the latest market rate for each\
        \ currency. You may optionally pass a historical timestamp as `time` to convert\
        \ values based on historical rates (as your API plan supports). \n  \n  \n\
        **Technical Notes**\n- Latest market rate conversions are accurate to 1 minute\
        \ of specificity. Historical conversions are accurate to 1 minute of specificity\
        \ outside of non-USD fiat conversions which have 5 minute specificity. \n\
        - You may reference a current list of all supported cryptocurrencies via the\
        \ <a href=\"/api/v1/#section/Standards-and-Conventions\" target=\"_blank\"\
        >cryptocurrency/map</a> endpoint. This endpoint also returns the supported\
        \ date ranges for historical conversions via the `first_historical_data` and\
        \ `last_historical_data` properties.   \n- Conversions are supported in 93\
        \ different fiat currencies and 4 precious metals <a href=\"/api/v1/#section/Standards-and-Conventions\"\
        \ target=\"_blank\">as outlined here</a>. Historical fiat conversions are\
        \ supported as far back as 2013-04-28.\n- A `last_updated` timestamp is included\
        \ for both your source currency and each conversion currency. This is the\
        \ timestamp of the closest market rate record referenced for each currency\
        \ during the conversion.  \n\n**This endpoint is available on the following\
        \ <a href=\"https://coinmarketcap.com/api/features\" target=\"_blank\">API\
        \ plans</a>:**\n- Basic (Latest market price conversions)\n- Hobbyist (Latest\
        \ market price conversions + 1 month historical)\n- Startup (Latest market\
        \ price conversions + 1 month historical)\n- Standard (Latest market price\
        \ conversions + 3 months historical)\n- Professional (Latest market price\
        \ conversions + 12 months historical)\n- Enterprise (Latest market price conversions\
        \ + up to 6 years historical)\n\n**Cache / Update frequency:** Every 60 seconds\
        \ for the lastest cryptocurrency and fiat currency rates.    \n**Plan credit\
        \ use:** 1 call credit per call and 1 call credit per `convert` option beyond\
        \ the first.  \n**CMC equivalent pages:** Our cryptocurrency conversion page\
        \ at [coinmarketcap.com/converter/](https://coinmarketcap.com/converter/).\
        \  "
      operationId: "getV1ToolsPriceconversion"
      parameters:
      - name: "amount"
        in: "query"
        description: "An amount of currency to convert. Example: 10.43"
        required: true
        type: "number"
        maximum: 1000000000000
        minimum: 1.0E-8
        x-exportParamName: "Amount"
      - name: "id"
        in: "query"
        description: "The CoinMarketCap currency ID of the base cryptocurrency or\
          \ fiat to convert from. Example: \"1\""
        required: false
        type: "string"
        pattern: "^\\d*$"
        x-exportParamName: "Id"
        x-optionalDataType: "String"
      - name: "symbol"
        in: "query"
        description: "Alternatively the currency symbol of the base cryptocurrency\
          \ or fiat to convert from. Example: \"BTC\". One \"id\" *or* \"symbol\"\
          \ is required."
        required: false
        type: "string"
        pattern: "^[0-9A-Za-z$@\\-]*$"
        x-exportParamName: "Symbol"
        x-optionalDataType: "String"
      - name: "time"
        in: "query"
        description: "Optional timestamp (Unix or ISO 8601) to reference historical\
          \ pricing during conversion. If not passed, the current time will be used.\
          \ If passed, we'll reference the closest historic values available for this\
          \ conversion."
        required: false
        type: "string"
        x-exportParamName: "Time"
        x-optionalDataType: "String"
      - name: "convert"
        in: "query"
        description: "Pass up to 120 comma-separated fiat or cryptocurrency symbols\
          \ to convert the source amount to."
        required: false
        type: "string"
        pattern: "^[0-9A-Za-z$@\\-,]+(?:,[0-9A-Za-z$@\\-]+)*$"
        x-exportParamName: "Convert"
        x-optionalDataType: "String"
      - name: "convert_id"
        in: "query"
        description: "Optionally calculate market quotes by CoinMarketCap ID instead\
          \ of symbol. This option is identical to `convert` outside of ID format.\
          \ Ex: convert_id=1,2781 would replace convert=BTC,USD in your query. This\
          \ parameter cannot be used when `convert` is used."
        required: false
        type: "string"
        pattern: "^\\d+(?:,\\d+)*$"
        x-exportParamName: "ConvertId"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Successful"
          schema:
            $ref: "#/definitions/Tools Price Conversion - Response Model"
        "400":
          description: "Bad Request"
          schema:
            $ref: "#/definitions/HTTP Status 400 Error Object"
        "401":
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/HTTP Status 401 Error Object"
        "403":
          description: "Forbidden"
          schema:
            $ref: "#/definitions/HTTP Status 403 Error Object"
        "429":
          description: "Too Many Requests"
          schema:
            $ref: "#/definitions/HTTP Status 429 Error Object"
        "500":
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/HTTP Status 500 Error Object"
  /v2/cryptocurrency/info:
    get:
      tags:
      - "cryptocurrency"
      summary: "Metadata v2"
      description: "Returns all static metadata available for one or more cryptocurrencies.\
        \ This information includes details like logo, description, official website\
        \ URL, social links, and links to a cryptocurrency's technical documentation.\n\
        \n**Please note**: This documentation relates to our updated V2 endpoint,\
        \ which may be incompatible with our V1 versions. Documentation for deprecated\
        \ endpoints can be found <a href=\"#tag/deprecated\">here</a>.<br><br>\n**This\
        \ endpoint is available on the following <a href=\"https://coinmarketcap.com/api/features\"\
        \ target=\"_blank\">API plans</a>:**\n- Basic\n- Startup\n- Hobbyist\n- Standard\n\
        - Professional\n- Enterprise\n\n**Cache / Update frequency:** Static data\
        \ is updated only as needed, every 30 seconds.  \n**Plan credit use:** 1 call\
        \ credit per 100 cryptocurrencies returned (rounded up).  \n**CMC equivalent\
        \ pages:** Cryptocurrency detail page metadata like [coinmarketcap.com/currencies/bitcoin/](https://coinmarketcap.com/currencies/bitcoin/).\
        \  "
      operationId: "getV2CryptocurrencyInfo"
      parameters:
      - name: "id"
        in: "query"
        description: "One or more comma-separated CoinMarketCap cryptocurrency IDs.\
          \ Example: \"1,2\""
        required: false
        type: "string"
        pattern: "^\\d+(?:,\\d+)*$"
        x-exportParamName: "Id"
        x-optionalDataType: "String"
      - name: "slug"
        in: "query"
        description: "Alternatively pass a comma-separated list of cryptocurrency\
          \ slugs. Example: \"bitcoin,ethereum\""
        required: false
        type: "string"
        pattern: "^[0-9a-z-]+(?:,[0-9a-z-]+)*$"
        x-convert:
          lowercase: true
        x-exportParamName: "Slug"
        x-optionalDataType: "String"
      - name: "symbol"
        in: "query"
        description: "Alternatively pass one or more comma-separated cryptocurrency\
          \ symbols. Example: \"BTC,ETH\". At least one \"id\" *or* \"slug\" *or*\
          \ \"symbol\" is required for this request."
        required: false
        type: "string"
        pattern: "^[0-9A-Za-z$@\\-,]+(?:,[0-9A-Za-z$@\\-]+)*$"
        x-exportParamName: "Symbol"
        x-optionalDataType: "String"
      - name: "address"
        in: "query"
        description: "Alternatively pass in a contract address. Example: \"0xc40af1e4fecfa05ce6bab79dcd8b373d2e436c4e\""
        required: false
        type: "string"
        x-exportParamName: "Address"
        x-optionalDataType: "String"
      - name: "aux"
        in: "query"
        description: "Optionally specify a comma-separated list of supplemental data\
          \ fields to return. Pass `urls,logo,description,tags,platform,date_added,notice,status`\
          \ to include all auxiliary fields."
        required: false
        type: "string"
        default: "urls,logo,description,tags,platform,date_added,notice"
        pattern: "^(urls|logo|description|tags|platform|date_added|notice|status)+(?:,(urls|logo|description|tags|platform|date_added|notice|status)+)*$"
        x-exportParamName: "Aux"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Successful"
          schema:
            $ref: "#/definitions/Cryptocurrencies Info - Response Model"
        "400":
          description: "Bad Request"
          schema:
            $ref: "#/definitions/HTTP Status 400 Error Object"
        "401":
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/HTTP Status 401 Error Object"
        "403":
          description: "Forbidden"
          schema:
            $ref: "#/definitions/HTTP Status 403 Error Object"
        "429":
          description: "Too Many Requests"
          schema:
            $ref: "#/definitions/HTTP Status 429 Error Object"
        "500":
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/HTTP Status 500 Error Object"
  /v2/tools/price-conversion:
    get:
      tags:
      - "tools"
      summary: "Price Conversion v2"
      description: "Convert an amount of one cryptocurrency or fiat currency into\
        \ one or more different currencies utilizing the latest market rate for each\
        \ currency. You may optionally pass a historical timestamp as `time` to convert\
        \ values based on historical rates (as your API plan supports). \n  \n  **Please\
        \ note**: This documentation relates to our updated V2 endpoint, which may\
        \ be incompatible with our V1 versions. Documentation for deprecated endpoints\
        \ can be found <a href=\"#tag/deprecated\">here</a>.<br><br>\n**Technical\
        \ Notes**\n- Latest market rate conversions are accurate to 1 minute of specificity.\
        \ Historical conversions are accurate to 1 minute of specificity outside of\
        \ non-USD fiat conversions which have 5 minute specificity. \n- You may reference\
        \ a current list of all supported cryptocurrencies via the <a href=\"/api/v1/#section/Standards-and-Conventions\"\
        \ target=\"_blank\">cryptocurrency/map</a> endpoint. This endpoint also returns\
        \ the supported date ranges for historical conversions via the `first_historical_data`\
        \ and `last_historical_data` properties.   \n- Conversions are supported in\
        \ 93 different fiat currencies and 4 precious metals <a href=\"/api/v1/#section/Standards-and-Conventions\"\
        \ target=\"_blank\">as outlined here</a>. Historical fiat conversions are\
        \ supported as far back as 2013-04-28.\n- A `last_updated` timestamp is included\
        \ for both your source currency and each conversion currency. This is the\
        \ timestamp of the closest market rate record referenced for each currency\
        \ during the conversion.  \n\n**This endpoint is available on the following\
        \ <a href=\"https://coinmarketcap.com/api/features\" target=\"_blank\">API\
        \ plans</a>:**\n- Basic (Latest market price conversions)\n- Hobbyist (Latest\
        \ market price conversions + 1 month historical)\n- Startup (Latest market\
        \ price conversions + 1 month historical)\n- Standard (Latest market price\
        \ conversions + 3 months historical)\n- Professional (Latest market price\
        \ conversions + 12 months historical)\n- Enterprise (Latest market price conversions\
        \ + up to 6 years historical)\n\n**Cache / Update frequency:** Every 60 seconds\
        \ for the lastest cryptocurrency and fiat currency rates.    \n**Plan credit\
        \ use:** 1 call credit per call and 1 call credit per `convert` option beyond\
        \ the first.  \n**CMC equivalent pages:** Our cryptocurrency conversion page\
        \ at [coinmarketcap.com/converter/](https://coinmarketcap.com/converter/).\
        \  "
      operationId: "getV2ToolsPriceconversion"
      parameters:
      - name: "amount"
        in: "query"
        description: "An amount of currency to convert. Example: 10.43"
        required: true
        type: "number"
        maximum: 1000000000000
        minimum: 1.0E-8
        x-exportParamName: "Amount"
      - name: "id"
        in: "query"
        description: "The CoinMarketCap currency ID of the base cryptocurrency or\
          \ fiat to convert from. Example: \"1\""
        required: false
        type: "string"
        pattern: "^\\d*$"
        x-exportParamName: "Id"
        x-optionalDataType: "String"
      - name: "symbol"
        in: "query"
        description: "Alternatively the currency symbol of the base cryptocurrency\
          \ or fiat to convert from. Example: \"BTC\". One \"id\" *or* \"symbol\"\
          \ is required."
        required: false
        type: "string"
        pattern: "^[0-9A-Za-z$@\\-]*$"
        x-exportParamName: "Symbol"
        x-optionalDataType: "String"
      - name: "time"
        in: "query"
        description: "Optional timestamp (Unix or ISO 8601) to reference historical\
          \ pricing during conversion. If not passed, the current time will be used.\
          \ If passed, we'll reference the closest historic values available for this\
          \ conversion."
        required: false
        type: "string"
        x-exportParamName: "Time"
        x-optionalDataType: "String"
      - name: "convert"
        in: "query"
        description: "Pass up to 120 comma-separated fiat or cryptocurrency symbols\
          \ to convert the source amount to."
        required: false
        type: "string"
        pattern: "^[0-9A-Za-z$@\\-,]+(?:,[0-9A-Za-z$@\\-]+)*$"
        x-exportParamName: "Convert"
        x-optionalDataType: "String"
      - name: "convert_id"
        in: "query"
        description: "Optionally calculate market quotes by CoinMarketCap ID instead\
          \ of symbol. This option is identical to `convert` outside of ID format.\
          \ Ex: convert_id=1,2781 would replace convert=BTC,USD in your query. This\
          \ parameter cannot be used when `convert` is used."
        required: false
        type: "string"
        pattern: "^\\d+(?:,\\d+)*$"
        x-exportParamName: "ConvertId"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Successful"
          schema:
            $ref: "#/definitions/Tools Price Conversion - Response Model"
        "400":
          description: "Bad Request"
          schema:
            $ref: "#/definitions/HTTP Status 400 Error Object"
        "401":
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/HTTP Status 401 Error Object"
        "403":
          description: "Forbidden"
          schema:
            $ref: "#/definitions/HTTP Status 403 Error Object"
        "429":
          description: "Too Many Requests"
          schema:
            $ref: "#/definitions/HTTP Status 429 Error Object"
        "500":
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/HTTP Status 500 Error Object"
  /v1/blockchain/statistics/latest:
    get:
      tags:
      - "blockchain"
      summary: "Statistics Latest"
      description: "Returns the latest blockchain statistics data for 1 or more blockchains.\
        \ Bitcoin, Litecoin, and Ethereum are currently supported. Additional blockchains\
        \ will be made available on a regular basis.  \n\n\n \n  **This endpoint is\
        \ available on the following <a href=\"https://coinmarketcap.com/api/features\"\
        \ target=\"_blank\">API plans</a>:**\n  - ~~Basic~~\n  - ~~Hobbyist~~\n  -\
        \ ~~Startup~~\n  - ~~Standard~~\n  - ~~Professional~~\n  - Enterprise\n\n\
        **Cache / Update frequency:** Every 15 seconds.  \n**Plan credit use:** 1\
        \ call credit per request.  \n**CMC equivalent pages:** Our blockchain explorer\
        \ pages like [blockchain.coinmarketcap.com/](https://blockchain.coinmarketcap.com/)."
      operationId: "getV1BlockchainStatisticsLatest"
      parameters:
      - name: "id"
        in: "query"
        description: "One or more comma-separated cryptocurrency CoinMarketCap IDs\
          \ to return blockchain data for. Pass `1,2,1027` to request all currently\
          \ supported blockchains."
        required: false
        type: "string"
        pattern: "^\\d+(?:,\\d+)*$"
        x-exportParamName: "Id"
        x-optionalDataType: "String"
      - name: "symbol"
        in: "query"
        description: "Alternatively pass one or more comma-separated cryptocurrency\
          \ symbols. Pass `BTC,LTC,ETH` to request all currently supported blockchains."
        required: false
        type: "string"
        pattern: "^[0-9A-Za-z$@\\-,]+(?:,[0-9A-Za-z$@\\-]+)*$"
        x-exportParamName: "Symbol"
        x-optionalDataType: "String"
      - name: "slug"
        in: "query"
        description: "Alternatively pass a comma-separated list of cryptocurrency\
          \ slugs. Pass `bitcoin,litecoin,ethereum` to request all currently supported\
          \ blockchains."
        required: false
        type: "string"
        pattern: "^[0-9a-z-]+(?:,[0-9a-z-]+)*$"
        x-convert:
          lowercase: true
        x-exportParamName: "Slug"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Successful"
          schema:
            $ref: "#/definitions/Blockchain Statistics Latest - Response Model"
        "400":
          description: "Bad Request"
          schema:
            $ref: "#/definitions/HTTP Status 400 Error Object"
        "401":
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/HTTP Status 401 Error Object"
        "403":
          description: "Forbidden"
          schema:
            $ref: "#/definitions/HTTP Status 403 Error Object"
        "429":
          description: "Too Many Requests"
          schema:
            $ref: "#/definitions/HTTP Status 429 Error Object"
        "500":
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/HTTP Status 500 Error Object"
  /v1/content/posts/comments:
    get:
      summary: "Content Post Comments"
      description: "Returns comments of the CMC Community post.\n\n  \n  **This endpoint\
        \ is available on the following <a href=\"https://coinmarketcap.com/api/features\"\
        \ target=\"_blank\">API plans</a>:**\n  - Professional\n  - Enterprise\n\n\
        **Cache / Update frequency:** Five Minutes\n**Plan credit use:** 0 credit"
      operationId: "getV1ContentPostsComments"
      parameters:
      - name: "post_id"
        in: "query"
        description: "Required post ID. Example: 325670123"
        required: true
        type: "string"
        pattern: "^\\d*$"
        x-exportParamName: "PostId"
      responses:
        "200":
          description: "Successful"
          schema:
            $ref: "#/definitions/Content Post Comments - Response Model"
        "400":
          description: "Bad Request"
          schema:
            $ref: "#/definitions/HTTP Status 400 Error Object"
        "401":
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/HTTP Status 401 Error Object"
        "403":
          description: "Forbidden"
          schema:
            $ref: "#/definitions/HTTP Status 403 Error Object"
        "429":
          description: "Too Many Requests"
          schema:
            $ref: "#/definitions/HTTP Status 429 Error Object"
        "500":
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/HTTP Status 500 Error Object"
  /v1/content/posts/latest:
    get:
      summary: "Content Latest Posts"
      description: "Returns the latest crypto-related posts from the CMC Community.\n\
        \n  \n  **This endpoint is available on the following <a href=\"https://coinmarketcap.com/api/features\"\
        \ target=\"_blank\">API plans</a>:**\n  - Professional\n  - Enterprise\n\n\
        **Cache / Update frequency:** Five Minutes\n**Plan credit use:** 0 credit"
      operationId: "getV1ContentPostsLatest"
      parameters:
      - name: "id"
        in: "query"
        description: "Optional one cryptocurrency CoinMarketCap ID. Example: 1027"
        required: false
        type: "string"
        pattern: "^\\d*$"
        x-exportParamName: "Id"
        x-optionalDataType: "String"
      - name: "slug"
        in: "query"
        description: "Alternatively pass one cryptocurrency slug. Example: \"ethereum\""
        required: false
        type: "string"
        pattern: "^[0-9a-z-]*$"
        x-convert:
          lowercase: true
        x-exportParamName: "Slug"
        x-optionalDataType: "String"
      - name: "symbol"
        in: "query"
        description: "Alternatively pass one cryptocurrency symbols. Example: \"ETH\""
        required: false
        type: "string"
        pattern: "^[0-9A-Za-z$@\\-]*$"
        x-exportParamName: "Symbol"
        x-optionalDataType: "String"
      - name: "last_score"
        in: "query"
        description: "Optional. The score is given in the response for finding next\
          \ batch posts. Example: 1662903634322"
        required: false
        type: "string"
        x-exportParamName: "LastScore"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Successful"
          schema:
            $ref: "#/definitions/Content Latest Posts - Response Model"
        "400":
          description: "Bad Request"
          schema:
            $ref: "#/definitions/HTTP Status 400 Error Object"
        "401":
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/HTTP Status 401 Error Object"
        "403":
          description: "Forbidden"
          schema:
            $ref: "#/definitions/HTTP Status 403 Error Object"
        "429":
          description: "Too Many Requests"
          schema:
            $ref: "#/definitions/HTTP Status 429 Error Object"
        "500":
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/HTTP Status 500 Error Object"
  /v1/content/posts/top:
    get:
      summary: "Content Top Posts"
      description: "Returns the top crypto-related posts from the CMC Community.\n\
        \n  \n  **This endpoint is available on the following <a href=\"https://coinmarketcap.com/api/features\"\
        \ target=\"_blank\">API plans</a>:**\n  - Professional\n  - Enterprise\n\n\
        **Cache / Update frequency:** Five Minutes\n**Plan credit use:** 0 credit"
      operationId: "getV1ContentPostsTop"
      parameters:
      - name: "id"
        in: "query"
        description: "Optional one cryptocurrency CoinMarketCap ID. Example: 1027"
        required: false
        type: "string"
        pattern: "^\\d*$"
        x-exportParamName: "Id"
        x-optionalDataType: "String"
      - name: "slug"
        in: "query"
        description: "Alternatively pass one cryptocurrency slug. Example: \"ethereum\""
        required: false
        type: "string"
        pattern: "^[0-9a-z-]*$"
        x-convert:
          lowercase: true
        x-exportParamName: "Slug"
        x-optionalDataType: "String"
      - name: "symbol"
        in: "query"
        description: "Alternatively pass one cryptocurrency symbols. Example: \"ETH\""
        required: false
        type: "string"
        pattern: "^[0-9A-Za-z$@\\-]*$"
        x-exportParamName: "Symbol"
        x-optionalDataType: "String"
      - name: "last_score"
        in: "query"
        description: "Optional. The score is given in the response for finding next\
          \ batch of related posts. Example: 38507.8865"
        required: false
        type: "string"
        x-exportParamName: "LastScore"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Successful"
          schema:
            $ref: "#/definitions/Content Top Posts - Response Model"
        "400":
          description: "Bad Request"
          schema:
            $ref: "#/definitions/HTTP Status 400 Error Object"
        "401":
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/HTTP Status 401 Error Object"
        "403":
          description: "Forbidden"
          schema:
            $ref: "#/definitions/HTTP Status 403 Error Object"
        "429":
          description: "Too Many Requests"
          schema:
            $ref: "#/definitions/HTTP Status 429 Error Object"
        "500":
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/HTTP Status 500 Error Object"
  /v1/cryptocurrency/listings/historical:
    get:
      tags:
      - "cryptocurrency"
      summary: "Listings Historical"
      description: "Returns a ranked and sorted list of all cryptocurrencies for a\
        \ historical UTC date.  \n\n\n**Technical Notes**\n- This endpoint is identical\
        \ in format to our [/cryptocurrency/listings/latest](#operation/getV1CryptocurrencyListingsLatest)\
        \ endpoint but is used to retrieve historical daily ranking snapshots from\
        \ the end of each UTC day.  \n- Daily snapshots reflect market data at the\
        \ end of each UTC day and may be requested as far back as 2013-04-28 (as supported\
        \ by your plan's historical limits).  \n- The required \"date\" parameter\
        \ can be passed as a Unix timestamp or ISO 8601 date but only the date portion\
        \ of the timestamp will be referenced. It is recommended to send an ISO date\
        \ format like \"2019-10-10\" without time.\n- This endpoint is for retrieving\
        \ paginated and sorted lists of all currencies. If you require historical\
        \ market data on specific cryptocurrencies you should use [/cryptocurrency/quotes/historical](#operation/getV1CryptocurrencyQuotesHistorical).\n\
        \   \n\n\nCryptocurrencies are listed by cmc_rank by default. You may optionally\
        \ sort against any of the following:  \n**cmc_rank**: CoinMarketCap's market\
        \ cap rank as outlined in <a href=\"https://coinmarketcap.com/methodology/\"\
        \ target=\"_blank\">our methodology</a>.  \n**name**: The cryptocurrency name.\
        \  \n**symbol**: The cryptocurrency symbol.  \n**market_cap**: market cap\
        \ (latest trade price x circulating supply).  \n**price**: latest average\
        \ trade price across markets.  \n**circulating_supply**: approximate number\
        \ of coins currently in circulation.  \n**total_supply**: approximate total\
        \ amount of coins in existence right now (minus any coins that have been verifiably\
        \ burned).  \n**max_supply**: our best approximation of the maximum amount\
        \ of coins that will ever exist in the lifetime of the currency.  \n**num_market_pairs**:\
        \ number of market pairs across all exchanges trading each currency.  \n**volume_24h**:\
        \ 24 hour trading volume for each currency.  \n**percent_change_1h**: 1 hour\
        \ trading price percentage change for each currency.  \n**percent_change_24h**:\
        \ 24 hour trading price percentage change for each currency.  \n**percent_change_7d**:\
        \ 7 day trading price percentage change for each currency.  \n \n  **This\
        \ endpoint is available on the following <a href=\"https://coinmarketcap.com/api/features\"\
        \ target=\"_blank\">API plans</a>:**\n  - ~~Basic~~\n  - ~~Hobbyist~~\n  -\
        \ ~~Startup~~\n  - Standard (3 months)\n  - Professional (12 months)\n  -\
        \ Enterprise (Up to 6 years)\n\n**Cache / Update frequency:** The last completed\
        \ UTC day is available 30 minutes after midnight on the next UTC day.  \n\
        **Plan credit use:** 1 call credit per 100 cryptocurrencies returned (rounded\
        \ up) and 1 call credit per `convert` option beyond the first.  \n**CMC equivalent\
        \ pages:** Our historical daily crypto ranking snapshot pages like this one\
        \ on [February 02, 2014](https://coinmarketcap.com/historical/20140202/)."
      operationId: "getV1CryptocurrencyListingsHistorical"
      parameters:
      - name: "date"
        in: "query"
        description: "date (Unix or ISO 8601) to reference day of snapshot."
        required: true
        type: "string"
        x-exportParamName: "Date"
      - name: "start"
        in: "query"
        description: "Optionally offset the start (1-based index) of the paginated\
          \ list of items to return."
        required: false
        type: "integer"
        default: 1
        minimum: 1
        x-exportParamName: "Start"
        x-optionalDataType: "Int32"
      - name: "limit"
        in: "query"
        description: "Optionally specify the number of results to return. Use this\
          \ parameter and the \"start\" parameter to determine your own pagination\
          \ size."
        required: false
        type: "integer"
        default: 100
        maximum: 5000
        minimum: 1
        x-exportParamName: "Limit"
        x-optionalDataType: "Int32"
      - name: "convert"
        in: "query"
        description: "Optionally calculate market quotes in up to 120 currencies at\
          \ once by passing a comma-separated list of cryptocurrency or fiat currency\
          \ symbols. Each additional convert option beyond the first requires an additional\
          \ call credit. A list of supported fiat options can be found [here](#section/Standards-and-Conventions).\
          \ Each conversion is returned in its own \"quote\" object."
        required: false
        type: "string"
        pattern: "^[0-9A-Za-z$@\\-,]+(?:,[0-9A-Za-z$@\\-]+)*$"
        x-exportParamName: "Convert"
        x-optionalDataType: "String"
      - name: "convert_id"
        in: "query"
        description: "Optionally calculate market quotes by CoinMarketCap ID instead\
          \ of symbol. This option is identical to `convert` outside of ID format.\
          \ Ex: convert_id=1,2781 would replace convert=BTC,USD in your query. This\
          \ parameter cannot be used when `convert` is used."
        required: false
        type: "string"
        pattern: "^\\d+(?:,\\d+)*$"
        x-exportParamName: "ConvertId"
        x-optionalDataType: "String"
      - name: "sort"
        in: "query"
        description: "What field to sort the list of cryptocurrencies by."
        required: false
        type: "string"
        default: "cmc_rank"
        enum:
        - "cmc_rank"
        - "name"
        - "symbol"
        - "market_cap"
        - "price"
        - "circulating_supply"
        - "total_supply"
        - "max_supply"
        - "num_market_pairs"
        - "volume_24h"
        - "percent_change_1h"
        - "percent_change_24h"
        - "percent_change_7d"
        x-exportParamName: "Sort"
        x-optionalDataType: "String"
      - name: "sort_dir"
        in: "query"
        description: "The direction in which to order cryptocurrencies against the\
          \ specified sort."
        required: false
        type: "string"
        enum:
        - "asc"
        - "desc"
        x-exportParamName: "SortDir"
        x-optionalDataType: "String"
      - name: "cryptocurrency_type"
        in: "query"
        description: "The type of cryptocurrency to include."
        required: false
        type: "string"
        default: "all"
        enum:
        - "all"
        - "coins"
        - "tokens"
        x-exportParamName: "CryptocurrencyType"
        x-optionalDataType: "String"
      - name: "aux"
        in: "query"
        description: "Optionally specify a comma-separated list of supplemental data\
          \ fields to return. Pass `platform,tags,date_added,circulating_supply,total_supply,max_supply,cmc_rank,num_market_pairs`\
          \ to include all auxiliary fields."
        required: false
        type: "string"
        default: "platform,tags,date_added,circulating_supply,total_supply,max_supply,cmc_rank,num_market_pairs"
        pattern: "^(platform|tags|date_added|circulating_supply|total_supply|max_supply|cmc_rank|num_market_pairs)+(?:,(platform|tags|date_added|circulating_supply|total_supply|max_supply|cmc_rank|num_market_pairs)+)*$"
        x-exportParamName: "Aux"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Successful"
          schema:
            $ref: "#/definitions/Cryptocurrency Listings Latest - Response Model"
        "400":
          description: "Bad Request"
          schema:
            $ref: "#/definitions/HTTP Status 400 Error Object"
        "401":
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/HTTP Status 401 Error Object"
        "403":
          description: "Forbidden"
          schema:
            $ref: "#/definitions/HTTP Status 403 Error Object"
        "429":
          description: "Too Many Requests"
          schema:
            $ref: "#/definitions/HTTP Status 429 Error Object"
        "500":
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/HTTP Status 500 Error Object"
  /v1/cryptocurrency/listings/latest:
    get:
      tags:
      - "cryptocurrency"
      summary: "Listings Latest"
      description: "Returns a paginated list of all active cryptocurrencies with latest\
        \ market data. The default \"market_cap\" sort returns cryptocurrency in order\
        \ of CoinMarketCap's market cap rank (as outlined in <a href=\"https://coinmarketcap.com/methodology/\"\
        \ target=\"_blank\">our methodology</a>) but you may configure this call to\
        \ order by another market ranking field. Use the \"convert\" option to return\
        \ market values in multiple fiat and cryptocurrency conversions in the same\
        \ call.\n\n\nYou may sort against any of the following:  \n**market_cap**:\
        \ CoinMarketCap's market cap rank as outlined in <a href=\"https://coinmarketcap.com/methodology/\"\
        \ target=\"_blank\">our methodology</a>.  \n**market_cap_strict**: A strict\
        \ market cap sort (latest trade price x circulating supply).  \n**name**:\
        \ The cryptocurrency name.  \n**symbol**: The cryptocurrency symbol.  \n**date_added**:\
        \ Date cryptocurrency was added to the system.  \n**price**: latest average\
        \ trade price across markets.  \n**circulating_supply**: approximate number\
        \ of coins currently in circulation.  \n**total_supply**: approximate total\
        \ amount of coins in existence right now (minus any coins that have been verifiably\
        \ burned).  \n**max_supply**: our best approximation of the maximum amount\
        \ of coins that will ever exist in the lifetime of the currency.  \n**num_market_pairs**:\
        \ number of market pairs across all exchanges trading each currency.  \n**market_cap_by_total_supply_strict**:\
        \ market cap by total supply.  \n**volume_24h**: rolling 24 hour adjusted\
        \ trading volume.  \n**volume_7d**: rolling 24 hour adjusted trading volume.\
        \  \n**volume_30d**: rolling 24 hour adjusted trading volume.  \n**percent_change_1h**:\
        \ 1 hour trading price percentage change for each currency.  \n**percent_change_24h**:\
        \ 24 hour trading price percentage change for each currency.  \n**percent_change_7d**:\
        \ 7 day trading price percentage change for each currency.  \n\n  **This endpoint\
        \ is available on the following <a href=\"https://coinmarketcap.com/api/features\"\
        \ target=\"_blank\">API plans</a>:**\n  - Basic\n  - Hobbyist\n  - Startup\n\
        \  - Standard\n  - Professional\n  - Enterprise\n\n**Cache / Update frequency:**\
        \ Every 60 seconds.  \n**Plan credit use:** 1 call credit per 200 cryptocurrencies\
        \ returned (rounded up) and 1 call credit per `convert` option beyond the\
        \ first.\n**CMC equivalent pages:** Our latest cryptocurrency listing and\
        \ ranking pages like [coinmarketcap.com/all/views/all/](https://coinmarketcap.com/all/views/all/),\
        \ [coinmarketcap.com/tokens/](https://coinmarketcap.com/tokens/), [coinmarketcap.com/gainers-losers/](https://coinmarketcap.com/gainers-losers/),\
        \ [coinmarketcap.com/new/](https://coinmarketcap.com/new/).     \n  \n***NOTE:**\
        \ Use this endpoint if you need a sorted and paginated list of all cryptocurrencies.\
        \ If you want to query for market data on a few specific cryptocurrencies\
        \ use [/v1/cryptocurrency/quotes/latest](#operation/getV1CryptocurrencyQuotesLatest)\
        \ which is optimized for that purpose. The response data between these endpoints\
        \ is otherwise the same.* "
      operationId: "getV1CryptocurrencyListingsLatest"
      parameters:
      - name: "start"
        in: "query"
        description: "Optionally offset the start (1-based index) of the paginated\
          \ list of items to return."
        required: false
        type: "integer"
        default: 1
        minimum: 1
        x-exportParamName: "Start"
        x-optionalDataType: "Int32"
      - name: "limit"
        in: "query"
        description: "Optionally specify the number of results to return. Use this\
          \ parameter and the \"start\" parameter to determine your own pagination\
          \ size."
        required: false
        type: "integer"
        default: 100
        maximum: 5000
        minimum: 1
        x-exportParamName: "Limit"
        x-optionalDataType: "Int32"
      - name: "price_min"
        in: "query"
        description: "Optionally specify a threshold of minimum USD price to filter\
          \ results by."
        required: false
        type: "number"
        maximum: 100000000000000000
        minimum: 0
        x-exportParamName: "PriceMin"
        x-optionalDataType: "Float32"
      - name: "price_max"
        in: "query"
        description: "Optionally specify a threshold of maximum USD price to filter\
          \ results by."
        required: false
        type: "number"
        maximum: 100000000000000000
        minimum: 0
        x-exportParamName: "PriceMax"
        x-optionalDataType: "Float32"
      - name: "market_cap_min"
        in: "query"
        description: "Optionally specify a threshold of minimum market cap to filter\
          \ results by."
        required: false
        type: "number"
        maximum: 100000000000000000
        minimum: 0
        x-exportParamName: "MarketCapMin"
        x-optionalDataType: "Float32"
      - name: "market_cap_max"
        in: "query"
        description: "Optionally specify a threshold of maximum market cap to filter\
          \ results by."
        required: false
        type: "number"
        maximum: 100000000000000000
        minimum: 0
        x-exportParamName: "MarketCapMax"
        x-optionalDataType: "Float32"
      - name: "volume_24h_min"
        in: "query"
        description: "Optionally specify a threshold of minimum 24 hour USD volume\
          \ to filter results by."
        required: false
        type: "number"
        maximum: 100000000000000000
        minimum: 0
        x-exportParamName: "Volume24hMin"
        x-optionalDataType: "Float32"
      - name: "volume_24h_max"
        in: "query"
        description: "Optionally specify a threshold of maximum 24 hour USD volume\
          \ to filter results by."
        required: false
        type: "number"
        maximum: 100000000000000000
        minimum: 0
        x-exportParamName: "Volume24hMax"
        x-optionalDataType: "Float32"
      - name: "circulating_supply_min"
        in: "query"
        description: "Optionally specify a threshold of minimum circulating supply\
          \ to filter results by."
        required: false
        type: "number"
        maximum: 100000000000000000
        minimum: 0
        x-exportParamName: "CirculatingSupplyMin"
        x-optionalDataType: "Float32"
      - name: "circulating_supply_max"
        in: "query"
        description: "Optionally specify a threshold of maximum circulating supply\
          \ to filter results by."
        required: false
        type: "number"
        maximum: 100000000000000000
        minimum: 0
        x-exportParamName: "CirculatingSupplyMax"
        x-optionalDataType: "Float32"
      - name: "percent_change_24h_min"
        in: "query"
        description: "Optionally specify a threshold of minimum 24 hour percent change\
          \ to filter results by."
        required: false
        type: "number"
        minimum: -100
        x-exportParamName: "PercentChange24hMin"
        x-optionalDataType: "Float32"
      - name: "percent_change_24h_max"
        in: "query"
        description: "Optionally specify a threshold of maximum 24 hour percent change\
          \ to filter results by."
        required: false
        type: "number"
        minimum: -100
        x-exportParamName: "PercentChange24hMax"
        x-optionalDataType: "Float32"
      - name: "convert"
        in: "query"
        description: "Optionally calculate market quotes in up to 120 currencies at\
          \ once by passing a comma-separated list of cryptocurrency or fiat currency\
          \ symbols. Each additional convert option beyond the first requires an additional\
          \ call credit. A list of supported fiat options can be found [here](#section/Standards-and-Conventions).\
          \ Each conversion is returned in its own \"quote\" object."
        required: false
        type: "string"
        pattern: "^[0-9A-Za-z$@\\-,]+(?:,[0-9A-Za-z$@\\-]+)*$"
        x-exportParamName: "Convert"
        x-optionalDataType: "String"
      - name: "convert_id"
        in: "query"
        description: "Optionally calculate market quotes by CoinMarketCap ID instead\
          \ of symbol. This option is identical to `convert` outside of ID format.\
          \ Ex: convert_id=1,2781 would replace convert=BTC,USD in your query. This\
          \ parameter cannot be used when `convert` is used."
        required: false
        type: "string"
        pattern: "^\\d+(?:,\\d+)*$"
        x-exportParamName: "ConvertId"
        x-optionalDataType: "String"
      - name: "sort"
        in: "query"
        description: "What field to sort the list of cryptocurrencies by."
        required: false
        type: "string"
        default: "market_cap"
        enum:
        - "name"
        - "symbol"
        - "date_added"
        - "market_cap"
        - "market_cap_strict"
        - "price"
        - "circulating_supply"
        - "total_supply"
        - "max_supply"
        - "num_market_pairs"
        - "volume_24h"
        - "percent_change_1h"
        - "percent_change_24h"
        - "percent_change_7d"
        - "market_cap_by_total_supply_strict"
        - "volume_7d"
        - "volume_30d"
        x-exportParamName: "Sort"
        x-optionalDataType: "String"
      - name: "sort_dir"
        in: "query"
        description: "The direction in which to order cryptocurrencies against the\
          \ specified sort."
        required: false
        type: "string"
        enum:
        - "asc"
        - "desc"
        x-exportParamName: "SortDir"
        x-optionalDataType: "String"
      - name: "cryptocurrency_type"
        in: "query"
        description: "The type of cryptocurrency to include."
        required: false
        type: "string"
        default: "all"
        enum:
        - "all"
        - "coins"
        - "tokens"
        x-exportParamName: "CryptocurrencyType"
        x-optionalDataType: "String"
      - name: "tag"
        in: "query"
        description: "The tag of cryptocurrency to include."
        required: false
        type: "string"
        default: "all"
        enum:
        - "all"
        - "defi"
        - "filesharing"
        x-exportParamName: "Tag"
        x-optionalDataType: "String"
      - name: "aux"
        in: "query"
        description: "Optionally specify a comma-separated list of supplemental data\
          \ fields to return. Pass `num_market_pairs,cmc_rank,date_added,tags,platform,max_supply,circulating_supply,total_supply,market_cap_by_total_supply,volume_24h_reported,volume_7d,volume_7d_reported,volume_30d,volume_30d_reported,is_market_cap_included_in_calc`\
          \ to include all auxiliary fields."
        required: false
        type: "string"
        default: "num_market_pairs,cmc_rank,date_added,tags,platform,max_supply,circulating_supply,total_supply"
        pattern: "^(num_market_pairs|cmc_rank|date_added|tags|platform|max_supply|circulating_supply|total_supply|market_cap_by_total_supply|volume_24h_reported|volume_7d|volume_7d_reported|volume_30d|volume_30d_reported|is_market_cap_included_in_calc)+(?:,(num_market_pairs|cmc_rank|date_added|tags|platform|max_supply|circulating_supply|total_supply|market_cap_by_total_supply|volume_24h_reported|volume_7d|volume_7d_reported|volume_30d|volume_30d_reported|is_market_cap_included_in_calc)+)*$"
        x-exportParamName: "Aux"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Successful"
          schema:
            $ref: "#/definitions/Cryptocurrency Listings Latest - Response Model 1"
        "400":
          description: "Bad Request"
          schema:
            $ref: "#/definitions/HTTP Status 400 Error Object"
        "401":
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/HTTP Status 401 Error Object"
        "403":
          description: "Forbidden"
          schema:
            $ref: "#/definitions/HTTP Status 403 Error Object"
        "429":
          description: "Too Many Requests"
          schema:
            $ref: "#/definitions/HTTP Status 429 Error Object"
        "500":
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/HTTP Status 500 Error Object"
  /v1/cryptocurrency/listings/new:
    get:
      tags:
      - "cryptocurrency"
      summary: "Listings New"
      description: "Returns a paginated list of most recently added cryptocurrencies.\n\
        \n\n  **This endpoint is available on the following <a href=\"https://coinmarketcap.com/api/features\"\
        \ target=\"_blank\">API plans</a>:**\n  - Startup\n  - Standard\n  - Professional\n\
        \  - Enterprise\n\n**Cache / Update frequency:** Every 60 seconds.  \n**Plan\
        \ credit use:** 1 call credit per 200 cryptocurrencies returned (rounded up)\
        \ and 1 call credit per `convert` option beyond the first.  \n**CMC equivalent\
        \ pages:** Our \"new\" cryptocurrency page [coinmarketcap.com/new/](https://coinmarketcap.com/new)\n\
        \  \n***NOTE:** Use this endpoint if you need a sorted and paginated list\
        \ of all recently added cryptocurrencies.* "
      operationId: "getV1CryptocurrencyListingsNew"
      parameters:
      - name: "start"
        in: "query"
        description: "Optionally offset the start (1-based index) of the paginated\
          \ list of items to return."
        required: false
        type: "integer"
        default: 1
        minimum: 1
        x-exportParamName: "Start"
        x-optionalDataType: "Int32"
      - name: "limit"
        in: "query"
        description: "Optionally specify the number of results to return. Use this\
          \ parameter and the \"start\" parameter to determine your own pagination\
          \ size."
        required: false
        type: "integer"
        default: 100
        maximum: 5000
        minimum: 1
        x-exportParamName: "Limit"
        x-optionalDataType: "Int32"
      - name: "convert"
        in: "query"
        description: "Optionally calculate market quotes in up to 120 currencies at\
          \ once by passing a comma-separated list of cryptocurrency or fiat currency\
          \ symbols. Each additional convert option beyond the first requires an additional\
          \ call credit. A list of supported fiat options can be found [here](#section/Standards-and-Conventions).\
          \ Each conversion is returned in its own \"quote\" object."
        required: false
        type: "string"
        pattern: "^[0-9A-Za-z$@\\-,]+(?:,[0-9A-Za-z$@\\-]+)*$"
        x-exportParamName: "Convert"
        x-optionalDataType: "String"
      - name: "convert_id"
        in: "query"
        description: "Optionally calculate market quotes by CoinMarketCap ID instead\
          \ of symbol. This option is identical to `convert` outside of ID format.\
          \ Ex: convert_id=1,2781 would replace convert=BTC,USD in your query. This\
          \ parameter cannot be used when `convert` is used."
        required: false
        type: "string"
        pattern: "^\\d+(?:,\\d+)*$"
        x-exportParamName: "ConvertId"
        x-optionalDataType: "String"
      - name: "sort_dir"
        in: "query"
        description: "The direction in which to order cryptocurrencies against the\
          \ specified sort."
        required: false
        type: "string"
        enum:
        - "asc"
        - "desc"
        x-exportParamName: "SortDir"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Successful"
          schema:
            $ref: "#/definitions/Cryptocurrency Listings New - Response Model"
        "400":
          description: "Bad Request"
          schema:
            $ref: "#/definitions/HTTP Status 400 Error Object"
        "401":
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/HTTP Status 401 Error Object"
        "403":
          description: "Forbidden"
          schema:
            $ref: "#/definitions/HTTP Status 403 Error Object"
        "429":
          description: "Too Many Requests"
          schema:
            $ref: "#/definitions/HTTP Status 429 Error Object"
        "500":
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/HTTP Status 500 Error Object"
  /v1/cryptocurrency/market-pairs/latest:
    get:
      tags:
      - "deprecated"
      summary: "Market Pairs Latest v1 (deprecated)"
      description: "Lists all active market pairs that CoinMarketCap tracks for a\
        \ given cryptocurrency or fiat currency. All markets with this currency as\
        \ the pair base *or* pair quote will be returned. The latest price and volume\
        \ information is returned for each market. Use the \"convert\" option to return\
        \ market values in multiple fiat and cryptocurrency conversions in the same\
        \ call.\n\n\n\n  **This endpoint is available on the following <a href=\"\
        https://coinmarketcap.com/api/features\" target=\"_blank\">API plans</a>:**\n\
        \  - ~~Basic~~\n  - ~~Hobbyist~~\n  - ~~Startup~~\n  - Standard\n  - Professional\n\
        \  - Enterprise\n\n**Cache / Update frequency:** Every 1 minute.  \n**Plan\
        \ credit use:** 1 call credit per 100 market pairs returned (rounded up) and\
        \ 1 call credit per `convert` option beyond the first.  \n**CMC equivalent\
        \ pages:** Our active cryptocurrency markets pages like [coinmarketcap.com/currencies/bitcoin/#markets](https://coinmarketcap.com/currencies/bitcoin/#markets).\
        \  "
      operationId: "getV1CryptocurrencyMarketpairsLatest"
      parameters:
      - name: "id"
        in: "query"
        description: "A cryptocurrency or fiat currency by CoinMarketCap ID to list\
          \ market pairs for. Example: \"1\""
        required: false
        type: "string"
        x-exportParamName: "Id"
        x-optionalDataType: "String"
      - name: "slug"
        in: "query"
        description: "Alternatively pass a cryptocurrency by slug. Example: \"bitcoin\""
        required: false
        type: "string"
        pattern: "^[0-9a-z-]*$"
        x-convert:
          lowercase: true
        x-exportParamName: "Slug"
        x-optionalDataType: "String"
      - name: "symbol"
        in: "query"
        description: "Alternatively pass a cryptocurrency by symbol. Fiat currencies\
          \ are not supported by this field. Example: \"BTC\". A single cryptocurrency\
          \ \"id\", \"slug\", *or* \"symbol\" is required."
        required: false
        type: "string"
        pattern: "^[0-9A-Za-z$@\\-]*$"
        x-exportParamName: "Symbol"
        x-optionalDataType: "String"
      - name: "start"
        in: "query"
        description: "Optionally offset the start (1-based index) of the paginated\
          \ list of items to return."
        required: false
        type: "integer"
        default: 1
        minimum: 1
        x-exportParamName: "Start"
        x-optionalDataType: "Int32"
      - name: "limit"
        in: "query"
        description: "Optionally specify the number of results to return. Use this\
          \ parameter and the \"start\" parameter to determine your own pagination\
          \ size."
        required: false
        type: "integer"
        default: 100
        maximum: 5000
        minimum: 1
        x-exportParamName: "Limit"
        x-optionalDataType: "Int32"
      - name: "sort_dir"
        in: "query"
        description: "Optionally specify the sort direction of markets returned."
        required: false
        type: "string"
        default: "desc"
        enum:
        - "asc"
        - "desc"
        x-exportParamName: "SortDir"
        x-optionalDataType: "String"
      - name: "sort"
        in: "query"
        description: "Optionally specify the sort order of markets returned. By default\
          \ we return a strict sort on 24 hour reported volume. Pass `cmc_rank` to\
          \ return a CMC methodology based sort where markets with excluded volumes\
          \ are returned last."
        required: false
        type: "string"
        default: "volume_24h_strict"
        enum:
        - "volume_24h_strict"
        - "cmc_rank"
        - "cmc_rank_advanced"
        - "effective_liquidity"
        - "market_score"
        - "market_reputation"
        x-exportParamName: "Sort"
        x-optionalDataType: "String"
      - name: "aux"
        in: "query"
        description: "Optionally specify a comma-separated list of supplemental data\
          \ fields to return. Pass `num_market_pairs,category,fee_type,market_url,currency_name,currency_slug,price_quote,notice,cmc_rank,effective_liquidity,market_score,market_reputation`\
          \ to include all auxiliary fields."
        required: false
        type: "string"
        default: "num_market_pairs,category,fee_type"
        pattern: "^(num_market_pairs|category|fee_type|market_url|currency_name|currency_slug|price_quote|notice|cmc_rank|effective_liquidity|market_score|market_reputation)+(?:,(num_market_pairs|category|fee_type|market_url|currency_name|currency_slug|price_quote|notice|cmc_rank|effective_liquidity|market_score|market_reputation)+)*$"
        x-exportParamName: "Aux"
        x-optionalDataType: "String"
      - name: "matched_id"
        in: "query"
        description: "Optionally include one or more fiat or cryptocurrency IDs to\
          \ filter market pairs by. For example `?id=1&matched_id=2781` would only\
          \ return BTC markets that matched: \"BTC/USD\" or \"USD/BTC\". This parameter\
          \ cannot be used when `matched_symbol` is used."
        required: false
        type: "string"
        pattern: "^\\d+(?:,\\d+)*$"
        x-exportParamName: "MatchedId"
        x-optionalDataType: "String"
      - name: "matched_symbol"
        in: "query"
        description: "Optionally include one or more fiat or cryptocurrency symbols\
          \ to filter market pairs by. For example `?symbol=BTC&matched_symbol=USD`\
          \ would only return BTC markets that matched: \"BTC/USD\" or \"USD/BTC\"\
          . This parameter cannot be used when `matched_id` is used."
        required: false
        type: "string"
        pattern: "^[0-9A-Za-z$@\\-,]+(?:,[0-9A-Za-z$@\\-]+)*$"
        x-exportParamName: "MatchedSymbol"
        x-optionalDataType: "String"
      - name: "category"
        in: "query"
        description: "The category of trading this market falls under. Spot markets\
          \ are the most common but options include derivatives and OTC."
        required: false
        type: "string"
        default: "all"
        enum:
        - "all"
        - "spot"
        - "derivatives"
        - "otc"
        - "perpetual"
        x-exportParamName: "Category"
        x-optionalDataType: "String"
      - name: "fee_type"
        in: "query"
        description: "The fee type the exchange enforces for this market."
        required: false
        type: "string"
        default: "all"
        enum:
        - "all"
        - "percentage"
        - "no-fees"
        - "transactional-mining"
        - "unknown"
        x-exportParamName: "FeeType"
        x-optionalDataType: "String"
      - name: "convert"
        in: "query"
        description: "Optionally calculate market quotes in up to 120 currencies at\
          \ once by passing a comma-separated list of cryptocurrency or fiat currency\
          \ symbols. Each additional convert option beyond the first requires an additional\
          \ call credit. A list of supported fiat options can be found [here](#section/Standards-and-Conventions).\
          \ Each conversion is returned in its own \"quote\" object."
        required: false
        type: "string"
        pattern: "^[0-9A-Za-z$@\\-,]+(?:,[0-9A-Za-z$@\\-]+)*$"
        x-exportParamName: "Convert"
        x-optionalDataType: "String"
      - name: "convert_id"
        in: "query"
        description: "Optionally calculate market quotes by CoinMarketCap ID instead\
          \ of symbol. This option is identical to `convert` outside of ID format.\
          \ Ex: convert_id=1,2781 would replace convert=BTC,USD in your query. This\
          \ parameter cannot be used when `convert` is used."
        required: false
        type: "string"
        pattern: "^\\d+(?:,\\d+)*$"
        x-exportParamName: "ConvertId"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Successful"
          schema:
            $ref: "#/definitions/Cryptocurrency Market Pairs Latest - Response Model"
        "400":
          description: "Bad Request"
          schema:
            $ref: "#/definitions/HTTP Status 400 Error Object"
        "401":
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/HTTP Status 401 Error Object"
        "403":
          description: "Forbidden"
          schema:
            $ref: "#/definitions/HTTP Status 403 Error Object"
        "429":
          description: "Too Many Requests"
          schema:
            $ref: "#/definitions/HTTP Status 429 Error Object"
        "500":
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/HTTP Status 500 Error Object"
  /v1/cryptocurrency/ohlcv/historical:
    get:
      tags:
      - "deprecated"
      summary: "OHLCV Historical v1 (deprecated)"
      description: "Returns historical OHLCV (Open, High, Low, Close, Volume) data\
        \ along with market cap for any cryptocurrency using time interval parameters.\
        \ Currently daily and hourly OHLCV periods are supported. Volume is not currently\
        \ supported for hourly OHLCV intervals before 2020-09-22.\n\n  \n**Technical\
        \ Notes**\n- Only the date portion of the timestamp is used for daily OHLCV\
        \ so it's recommended to send an ISO date format like \"2018-09-19\" without\
        \ time for this \"time_period\". \n- One OHLCV quote will be returned for\
        \ every \"time_period\" between your \"time_start\" (exclusive) and \"time_end\"\
        \ (inclusive).  \n- If a \"time_start\" is not supplied, the \"time_period\"\
        \ will be calculated in reverse from \"time_end\" using the \"count\" parameter\
        \ which defaults to 10 results.  \n- If \"time_end\" is not supplied, it defaults\
        \ to the current time.   \n- If you don't need every \"time_period\" between\
        \ your dates you may adjust the frequency that \"time_period\" is sampled\
        \ using the \"interval\" parameter. For example with \"time_period\" set to\
        \ \"daily\" you may set \"interval\" to \"2d\" to get the daily OHLCV for\
        \ every other day. You could set \"interval\" to \"monthly\" to get the first\
        \ daily OHLCV for each month, or set it to \"yearly\" to get the daily OHLCV\
        \ value against the same date every year.  \n\n**Implementation Tips**\n-\
        \ If querying for a specific OHLCV date your \"time_start\" should specify\
        \ a timestamp of 1 interval prior as \"time_start\" is an exclusive time parameter\
        \ (as opposed to \"time_end\" which is inclusive to the search). This means\
        \ that when you pass a \"time_start\" results will be returned for the *next*\
        \ complete \"time_period\". For example, if you are querying for a daily OHLCV\
        \ datapoint for 2018-11-30 your \"time_start\" should be \"2018-11-29\". \
        \  \n- If only specifying a \"count\" parameter to return latest OHLCV periods,\
        \ your \"count\" should be 1 number higher than the number of results you\
        \ expect to receive. \"Count\" defines the number of \"time_period\" intervals\
        \ queried, *not* the number of results to return, and this includes the currently\
        \ active time period which is incomplete when working backwards from current\
        \ time. For example, if you want the last daily OHLCV value available simply\
        \ pass \"count=2\" to skip the incomplete active time period.\n- This endpoint\
        \ supports requesting multiple cryptocurrencies in the same call. Please note\
        \ the API response will be wrapped in an additional object in this case. \
        \ \n  \n**Interval Options**  \n  \nThere are 2 types of time interval formats\
        \ that may be used for \"time_period\" and \"interval\" parameters. For \"\
        time_period\" these return aggregate OHLCV data from the beginning to end\
        \ of each interval period. Apply these time intervals to \"interval\" to adjust\
        \ how frequently \"time_period\" is sampled.  \n  \nThe first are calendar\
        \ year and time constants in UTC time:  \n**\"hourly\"** - Hour intervals\
        \ in UTC.  \n**\"daily\"** - Calendar day intervals for each UTC day.  \n\
        **\"weekly\"** - Calendar week intervals for each calendar week.  \n**\"monthly\"\
        ** - Calendar month intervals for each calendar month.    \n**\"yearly\"**\
        \ - Calendar year intervals for each calendar year.  \n  \nThe second are\
        \ relative time intervals.  \n**\"h\"**: Get the first quote available every\
        \ \"h\" hours (3600 second intervals). Supported hour intervals are: \"1h\"\
        , \"2h\", \"3h\", \"4h\", \"6h\", \"12h\".  \n**\"d\"**: Time periods that\
        \ repeat every \"d\" days (86400 second intervals). Supported day intervals\
        \ are: \"1d\", \"2d\", \"3d\", \"7d\", \"14d\", \"15d\", \"30d\", \"60d\"\
        , \"90d\", \"365d\".  \n  \nPlease note that \"time_period\" currently supports\
        \ the \"daily\" and \"hourly\" options. \"interval\" supports all interval\
        \ options.  \n  \n**This endpoint is available on the following <a href=\"\
        https://coinmarketcap.com/api/features\" target=\"_blank\">API plans</a>:**\
        \  \n- ~~Basic~~\n- ~~Hobbyist~~\n- Startup (1 month)\n- Standard (3 months)\n\
        - Professional (12 months)\n- Enterprise (Up to 6 years)\n\n**Cache / Update\
        \ frequency:** Latest Daily OHLCV record is available ~5 to ~10 minutes after\
        \ each midnight UTC. The latest hourly OHLCV record is available 5 minutes\
        \ after each UTC hour.  \n**Plan credit use:** 1 call credit per 100 OHLCV\
        \ data points returned (rounded up) and 1 call credit per `convert` option\
        \ beyond the first.  \n**CMC equivalent pages:** Our historical cryptocurrency\
        \ data pages like [coinmarketcap.com/currencies/bitcoin/historical-data/](https://coinmarketcap.com/currencies/bitcoin/historical-data/)."
      operationId: "getV1CryptocurrencyOhlcvHistorical"
      parameters:
      - name: "id"
        in: "query"
        description: "One or more comma-separated CoinMarketCap cryptocurrency IDs.\
          \ Example: \"1,1027\""
        required: false
        type: "string"
        pattern: "^\\d+(?:,\\d+)*$"
        x-exportParamName: "Id"
        x-optionalDataType: "String"
      - name: "slug"
        in: "query"
        description: "Alternatively pass a comma-separated list of cryptocurrency\
          \ slugs. Example: \"bitcoin,ethereum\""
        required: false
        type: "string"
        pattern: "^[0-9a-z-]+(?:,[0-9a-z-]+)*$"
        x-convert:
          lowercase: true
        x-exportParamName: "Slug"
        x-optionalDataType: "String"
      - name: "symbol"
        in: "query"
        description: "Alternatively pass one or more comma-separated cryptocurrency\
          \ symbols. Example: \"BTC,ETH\". At least one \"id\" *or* \"slug\" *or*\
          \ \"symbol\" is required for this request."
        required: false
        type: "string"
        pattern: "^[0-9A-Za-z$@\\-,]+(?:,[0-9A-Za-z$@\\-]+)*$"
        x-exportParamName: "Symbol"
        x-optionalDataType: "String"
      - name: "time_period"
        in: "query"
        description: "Time period to return OHLCV data for. The default is \"daily\"\
          . See the main endpoint description for details."
        required: false
        type: "string"
        default: "daily"
        enum:
        - "daily"
        - "hourly"
        x-exportParamName: "TimePeriod"
        x-optionalDataType: "String"
      - name: "time_start"
        in: "query"
        description: "Timestamp (Unix or ISO 8601) to start returning OHLCV time periods\
          \ for. Only the date portion of the timestamp is used for daily OHLCV so\
          \ it's recommended to send an ISO date format like \"2018-09-19\" without\
          \ time."
        required: false
        type: "string"
        x-exportParamName: "TimeStart"
        x-optionalDataType: "String"
      - name: "time_end"
        in: "query"
        description: "Timestamp (Unix or ISO 8601) to stop returning OHLCV time periods\
          \ for (inclusive). Optional, if not passed we'll default to the current\
          \ time. Only the date portion of the timestamp is used for daily OHLCV so\
          \ it's recommended to send an ISO date format like \"2018-09-19\" without\
          \ time."
        required: false
        type: "string"
        x-exportParamName: "TimeEnd"
        x-optionalDataType: "String"
      - name: "count"
        in: "query"
        description: "Optionally limit the number of time periods to return results\
          \ for. The default is 10 items. The current query limit is 10000 items."
        required: false
        type: "number"
        default: 10.0
        maximum: 10000
        minimum: 1
        x-exportParamName: "Count"
        x-optionalDataType: "Float32"
      - name: "interval"
        in: "query"
        description: "Optionally adjust the interval that \"time_period\" is sampled.\
          \ See main endpoint description for available options."
        required: false
        type: "string"
        default: "daily"
        enum:
        - "hourly"
        - "daily"
        - "weekly"
        - "monthly"
        - "yearly"
        - "1h"
        - "2h"
        - "3h"
        - "4h"
        - "6h"
        - "12h"
        - "1d"
        - "2d"
        - "3d"
        - "7d"
        - "14d"
        - "15d"
        - "30d"
        - "60d"
        - "90d"
        - "365d"
        x-exportParamName: "Interval"
        x-optionalDataType: "String"
      - name: "convert"
        in: "query"
        description: "By default market quotes are returned in USD. Optionally calculate\
          \ market quotes in up to 3 fiat currencies or cryptocurrencies."
        required: false
        type: "string"
        pattern: "^[0-9A-Za-z$@\\-,]+(?:,[0-9A-Za-z$@\\-]+)*$"
        x-exportParamName: "Convert"
        x-optionalDataType: "String"
      - name: "convert_id"
        in: "query"
        description: "Optionally calculate market quotes by CoinMarketCap ID instead\
          \ of symbol. This option is identical to `convert` outside of ID format.\
          \ Ex: convert_id=1,2781 would replace convert=BTC,USD in your query. This\
          \ parameter cannot be used when `convert` is used."
        required: false
        type: "string"
        pattern: "^\\d+(?:,\\d+)*$"
        x-exportParamName: "ConvertId"
        x-optionalDataType: "String"
      - name: "skip_invalid"
        in: "query"
        description: "Pass `true` to relax request validation rules. When requesting\
          \ records on multiple cryptocurrencies an error is returned if any invalid\
          \ cryptocurrencies are requested or a cryptocurrency does not have matching\
          \ records in the requested timeframe. If set to true, invalid lookups will\
          \ be skipped allowing valid cryptocurrencies to still be returned."
        required: false
        type: "boolean"
        default: true
        x-exportParamName: "SkipInvalid"
        x-optionalDataType: "Bool"
      responses:
        "200":
          description: "Successful"
          schema:
            $ref: "#/definitions/Cryptocurrency OHLCV Historical - Response Model"
        "400":
          description: "Bad Request"
          schema:
            $ref: "#/definitions/HTTP Status 400 Error Object"
        "401":
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/HTTP Status 401 Error Object"
        "403":
          description: "Forbidden"
          schema:
            $ref: "#/definitions/HTTP Status 403 Error Object"
        "429":
          description: "Too Many Requests"
          schema:
            $ref: "#/definitions/HTTP Status 429 Error Object"
        "500":
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/HTTP Status 500 Error Object"
  /v1/cryptocurrency/ohlcv/latest:
    get:
      tags:
      - "deprecated"
      summary: "OHLCV Latest v1 (deprecated)"
      description: "Returns the latest OHLCV (Open, High, Low, Close, Volume) market\
        \ values for one or more cryptocurrencies for the current UTC day. Since the\
        \ current UTC day is still active these values are updated frequently. You\
        \ can find the final calculated OHLCV values for the last completed UTC day\
        \ along with all historic days using /cryptocurrency/ohlcv/historical. \n\n\
        \n  **This endpoint is available on the following <a href=\"https://coinmarketcap.com/api/features\"\
        \ target=\"_blank\">API plans</a>:**\n  - ~~Basic~~\n  - ~~Hobbyist~~\n  -\
        \ Startup\n  - Standard\n  - Professional\n  - Enterprise\n\n  **Cache / Update\
        \ frequency:** Every 10 minutes. Additional OHLCV intervals and 1 minute updates\
        \ will be available in the future.  \n  **Plan credit use:** 1 call credit\
        \ per 100 OHLCV values returned (rounded up) and 1 call credit per `convert`\
        \ option beyond the first.  \n  **CMC equivalent pages:** No equivalent, this\
        \ data is only available via API."
      operationId: "getV1CryptocurrencyOhlcvLatest"
      parameters:
      - name: "id"
        in: "query"
        description: "One or more comma-separated cryptocurrency CoinMarketCap IDs.\
          \ Example: 1,2"
        required: false
        type: "string"
        pattern: "^\\d+(?:,\\d+)*$"
        x-exportParamName: "Id"
        x-optionalDataType: "String"
      - name: "symbol"
        in: "query"
        description: "Alternatively pass one or more comma-separated cryptocurrency\
          \ symbols. Example: \"BTC,ETH\". At least one \"id\" *or* \"symbol\" is\
          \ required."
        required: false
        type: "string"
        pattern: "^[0-9A-Za-z$@\\-,]+(?:,[0-9A-Za-z$@\\-]+)*$"
        x-exportParamName: "Symbol"
        x-optionalDataType: "String"
      - name: "convert"
        in: "query"
        description: "Optionally calculate market quotes in up to 120 currencies at\
          \ once by passing a comma-separated list of cryptocurrency or fiat currency\
          \ symbols. Each additional convert option beyond the first requires an additional\
          \ call credit. A list of supported fiat options can be found [here](#section/Standards-and-Conventions).\
          \ Each conversion is returned in its own \"quote\" object."
        required: false
        type: "string"
        pattern: "^[0-9A-Za-z$@\\-,]+(?:,[0-9A-Za-z$@\\-]+)*$"
        x-exportParamName: "Convert"
        x-optionalDataType: "String"
      - name: "convert_id"
        in: "query"
        description: "Optionally calculate market quotes by CoinMarketCap ID instead\
          \ of symbol. This option is identical to `convert` outside of ID format.\
          \ Ex: convert_id=1,2781 would replace convert=BTC,USD in your query. This\
          \ parameter cannot be used when `convert` is used."
        required: false
        type: "string"
        pattern: "^\\d+(?:,\\d+)*$"
        x-exportParamName: "ConvertId"
        x-optionalDataType: "String"
      - name: "skip_invalid"
        in: "query"
        description: "Pass `true` to relax request validation rules. When requesting\
          \ records on multiple cryptocurrencies an error is returned if any invalid\
          \ cryptocurrencies are requested or a cryptocurrency does not have matching\
          \ records in the requested timeframe. If set to true, invalid lookups will\
          \ be skipped allowing valid cryptocurrencies to still be returned."
        required: false
        type: "boolean"
        default: true
        x-exportParamName: "SkipInvalid"
        x-optionalDataType: "Bool"
      responses:
        "200":
          description: "Successful"
          schema:
            $ref: "#/definitions/Cryptocurrency OHLCV Latest - Response Model"
        "400":
          description: "Bad Request"
          schema:
            $ref: "#/definitions/HTTP Status 400 Error Object"
        "401":
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/HTTP Status 401 Error Object"
        "403":
          description: "Forbidden"
          schema:
            $ref: "#/definitions/HTTP Status 403 Error Object"
        "429":
          description: "Too Many Requests"
          schema:
            $ref: "#/definitions/HTTP Status 429 Error Object"
        "500":
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/HTTP Status 500 Error Object"
  /v1/cryptocurrency/price-performance-stats/latest:
    get:
      tags:
      - "deprecated"
      summary: "Price Performance Stats v1 (deprecated)"
      description: "Returns price performance statistics for one or more cryptocurrencies\
        \ including launch price ROI and all-time high / all-time low. Stats are returned\
        \ for an `all_time` period by default. UTC `yesterday` and a number of *rolling\
        \ time periods* may be requested using the `time_period` parameter. Utilize\
        \ the `convert` parameter to translate values into multiple fiats or cryptocurrencies\
        \ using historical rates.\n\n\n\n  **This endpoint is available on the following\
        \ <a href=\"https://coinmarketcap.com/api/features\" target=\"_blank\">API\
        \ plans</a>:**\n  - ~~Basic~~\n  - ~~Hobbyist~~\n  - Startup\n  - Standard\n\
        \  - Professional\n  - Enterprise\n\n**Cache / Update frequency:** Every 60\
        \ seconds.  \n**Plan credit use:** 1 call credit per 100 cryptocurrencies\
        \ returned (rounded up) and 1 call credit per `convert` option beyond the\
        \ first.  \n**CMC equivalent pages:** The statistics module displayed on cryptocurrency\
        \ pages like [Bitcoin](https://coinmarketcap.com/currencies/bitcoin/).   \
        \  \n  \n***NOTE:** You may also use [/cryptocurrency/ohlcv/historical](#operation/getV1CryptocurrencyOhlcvHistorical)\
        \ for traditional OHLCV data at historical daily and hourly intervals. You\
        \ may also use [/v1/cryptocurrency/ohlcv/latest](#operation/getV1CryptocurrencyOhlcvLatest)\
        \ for OHLCV data for the current UTC day.* "
      operationId: "getV1CryptocurrencyPriceperformancestatsLatest"
      parameters:
      - name: "id"
        in: "query"
        description: "One or more comma-separated cryptocurrency CoinMarketCap IDs.\
          \ Example: 1,2"
        required: false
        type: "string"
        pattern: "^\\d+(?:,\\d+)*$"
        x-exportParamName: "Id"
        x-optionalDataType: "String"
      - name: "slug"
        in: "query"
        description: "Alternatively pass a comma-separated list of cryptocurrency\
          \ slugs. Example: \"bitcoin,ethereum\""
        required: false
        type: "string"
        pattern: "^[0-9a-z-]+(?:,[0-9a-z-]+)*$"
        x-convert:
          lowercase: true
        x-exportParamName: "Slug"
        x-optionalDataType: "String"
      - name: "symbol"
        in: "query"
        description: "Alternatively pass one or more comma-separated cryptocurrency\
          \ symbols. Example: \"BTC,ETH\". At least one \"id\" *or* \"slug\" *or*\
          \ \"symbol\" is required for this request."
        required: false
        type: "string"
        pattern: "^[0-9A-Za-z$@\\-,]+(?:,[0-9A-Za-z$@\\-]+)*$"
        x-exportParamName: "Symbol"
        x-optionalDataType: "String"
      - name: "time_period"
        in: "query"
        description: "Specify one or more comma-delimited time periods to return stats\
          \ for. `all_time` is the default. Pass `all_time,yesterday,24h,7d,30d,90d,365d`\
          \ to return all supported time periods. All rolling periods have a rolling\
          \ close time of the current request time. For example `24h` would have a\
          \ close time of now and an open time of 24 hours before now. *Please note:\
          \ `yesterday` is a UTC period and currently does not currently support `high`\
          \ and `low` timestamps.*"
        required: false
        type: "string"
        default: "all_time"
        pattern: "^(all_time|yesterday|24h|7d|30d|90d|365d)+(?:,(all_time|yesterday|24h|7d|30d|90d|365d)+)*$"
        x-exportParamName: "TimePeriod"
        x-optionalDataType: "String"
      - name: "convert"
        in: "query"
        description: "Optionally calculate quotes in up to 120 currencies at once\
          \ by passing a comma-separated list of cryptocurrency or fiat currency symbols.\
          \ Each additional convert option beyond the first requires an additional\
          \ call credit. A list of supported fiat options can be found [here](#section/Standards-and-Conventions).\
          \ Each conversion is returned in its own \"quote\" object."
        required: false
        type: "string"
        pattern: "^[0-9A-Za-z$@\\-,]+(?:,[0-9A-Za-z$@\\-]+)*$"
        x-exportParamName: "Convert"
        x-optionalDataType: "String"
      - name: "convert_id"
        in: "query"
        description: "Optionally calculate quotes by CoinMarketCap ID instead of symbol.\
          \ This option is identical to `convert` outside of ID format. Ex: convert_id=1,2781\
          \ would replace convert=BTC,USD in your query. This parameter cannot be\
          \ used when `convert` is used."
        required: false
        type: "string"
        pattern: "^\\d+(?:,\\d+)*$"
        x-exportParamName: "ConvertId"
        x-optionalDataType: "String"
      - name: "skip_invalid"
        in: "query"
        description: "Pass `true` to relax request validation rules. When requesting\
          \ records on multiple cryptocurrencies an error is returned if no match\
          \ is found for 1 or more requested cryptocurrencies. If set to true, invalid\
          \ lookups will be skipped allowing valid cryptocurrencies to still be returned."
        required: false
        type: "boolean"
        default: true
        x-exportParamName: "SkipInvalid"
        x-optionalDataType: "Bool"
      responses:
        "200":
          description: "Successful"
          schema:
            $ref: "#/definitions/Cryptocurrency Price Performance Stats Latest - Response\
              \ Model"
        "400":
          description: "Bad Request"
          schema:
            $ref: "#/definitions/HTTP Status 400 Error Object"
        "401":
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/HTTP Status 401 Error Object"
        "403":
          description: "Forbidden"
          schema:
            $ref: "#/definitions/HTTP Status 403 Error Object"
        "429":
          description: "Too Many Requests"
          schema:
            $ref: "#/definitions/HTTP Status 429 Error Object"
        "500":
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/HTTP Status 500 Error Object"
  /v1/cryptocurrency/quotes/historical:
    get:
      tags:
      - "deprecated"
      summary: "Quotes Historical v1 (deprecated)"
      description: "Returns an interval of historic market quotes for any cryptocurrency\
        \ based on time and interval parameters.\n\n\n**Technical Notes**  \n- A historic\
        \ quote for every \"interval\" period between your \"time_start\" and \"time_end\"\
        \ will be returned.  \n- If a \"time_start\" is not supplied, the \"interval\"\
        \ will be applied in reverse from \"time_end\".  \n- If \"time_end\" is not\
        \ supplied, it defaults to the current time.  \n- At each \"interval\" period,\
        \ the historic quote that is closest in time to the requested time will be\
        \ returned.  \n- If no historic quotes are available in a given \"interval\"\
        \ period up until the next interval period, it will be skipped.  \n\n**Implementation\
        \ Tips**\n- Want to get the last quote of each UTC day? Don't use \"interval=daily\"\
        \ as that returns the first quote. Instead use \"interval=24h\" to repeat\
        \ a specific timestamp search every 24 hours and pass ex. \"time_start=2019-01-04T23:59:00.000Z\"\
        \ to query for the last record of each UTC day.\n- This endpoint supports\
        \ requesting multiple cryptocurrencies in the same call. Please note the API\
        \ response will be wrapped in an additional object in this case.  \n  \n**Interval\
        \ Options**  \nThere are 2 types of time interval formats that may be used\
        \ for \"interval\".\n\nThe first are calendar year and time constants in UTC\
        \ time:  \n**\"hourly\"** - Get the first quote available at the beginning\
        \ of each calendar hour.  \n**\"daily\"** - Get the first quote available\
        \ at the beginning of each calendar day.  \n**\"weekly\"** - Get the first\
        \ quote available at the beginning of each calendar week.  \n**\"monthly\"\
        ** - Get the first quote available at the beginning of each calendar month.\
        \  \n**\"yearly\"** - Get the first quote available at the beginning of each\
        \ calendar year.  \n\nThe second are relative time intervals.  \n**\"m\"**:\
        \ Get the first quote available every \"m\" minutes (60 second intervals).\
        \ Supported minutes are: \"5m\", \"10m\", \"15m\", \"30m\", \"45m\".  \n**\"\
        h\"**: Get the first quote available every \"h\" hours (3600 second intervals).\
        \ Supported hour intervals are: \"1h\", \"2h\", \"3h\", \"4h\", \"6h\", \"\
        12h\".  \n**\"d\"**: Get the first quote available every \"d\" days (86400\
        \ second intervals). Supported day intervals are: \"1d\", \"2d\", \"3d\",\
        \ \"7d\", \"14d\", \"15d\", \"30d\", \"60d\", \"90d\", \"365d\".  \n\n**This\
        \ endpoint is available on the following <a href=\"https://coinmarketcap.com/api/features\"\
        \ target=\"_blank\">API plans</a>:**\n- ~~Basic~~\n- ~~Hobbyist~~\n- ~~Startup~~\n\
        - Standard (3 month)\n- Professional (12 months)\n- Enterprise (Up to 6 years)\n\
        \n**Cache / Update frequency:** Every 5 minutes.    \n**Plan credit use:**\
        \ 1 call credit per 100 historical data points returned (rounded up) and 1\
        \ call credit per `convert` option beyond the first.  \n**CMC equivalent pages:**\
        \ Our historical cryptocurrency charts like [coinmarketcap.com/currencies/bitcoin/#charts](https://coinmarketcap.com/currencies/bitcoin/#charts).\
        \  "
      operationId: "getV1CryptocurrencyQuotesHistorical"
      parameters:
      - name: "id"
        in: "query"
        description: "One or more comma-separated CoinMarketCap cryptocurrency IDs.\
          \ Example: \"1,2\""
        required: false
        type: "string"
        pattern: "^\\d+(?:,\\d+)*$"
        x-exportParamName: "Id"
        x-optionalDataType: "String"
      - name: "symbol"
        in: "query"
        description: "Alternatively pass one or more comma-separated cryptocurrency\
          \ symbols. Example: \"BTC,ETH\". At least one \"id\" *or* \"symbol\" is\
          \ required for this request."
        required: false
        type: "string"
        pattern: "^[0-9A-Za-z$@\\-,]+(?:,[0-9A-Za-z$@\\-]+)*$"
        x-exportParamName: "Symbol"
        x-optionalDataType: "String"
      - name: "time_start"
        in: "query"
        description: "Timestamp (Unix or ISO 8601) to start returning quotes for.\
          \ Optional, if not passed, we'll return quotes calculated in reverse from\
          \ \"time_end\"."
        required: false
        type: "string"
        x-exportParamName: "TimeStart"
        x-optionalDataType: "String"
      - name: "time_end"
        in: "query"
        description: "Timestamp (Unix or ISO 8601) to stop returning quotes for (inclusive).\
          \ Optional, if not passed, we'll default to the current time. If no \"time_start\"\
          \ is passed, we return quotes in reverse order starting from this time."
        required: false
        type: "string"
        x-exportParamName: "TimeEnd"
        x-optionalDataType: "String"
      - name: "count"
        in: "query"
        description: "The number of interval periods to return results for. Optional,\
          \ required if both \"time_start\" and \"time_end\" aren't supplied. The\
          \ default is 10 items. The current query limit is 10000."
        required: false
        type: "number"
        default: 10.0
        maximum: 10000
        minimum: 1
        x-exportParamName: "Count"
        x-optionalDataType: "Float32"
      - name: "interval"
        in: "query"
        description: "Interval of time to return data points for. See details in endpoint\
          \ description."
        required: false
        type: "string"
        default: "5m"
        enum:
        - "yearly"
        - "monthly"
        - "weekly"
        - "daily"
        - "hourly"
        - "5m"
        - "10m"
        - "15m"
        - "30m"
        - "45m"
        - "1h"
        - "2h"
        - "3h"
        - "4h"
        - "6h"
        - "12h"
        - "24h"
        - "1d"
        - "2d"
        - "3d"
        - "7d"
        - "14d"
        - "15d"
        - "30d"
        - "60d"
        - "90d"
        - "365d"
        x-exportParamName: "Interval"
        x-optionalDataType: "String"
      - name: "convert"
        in: "query"
        description: "By default market quotes are returned in USD. Optionally calculate\
          \ market quotes in up to 3 other fiat currencies or cryptocurrencies."
        required: false
        type: "string"
        pattern: "^[0-9A-Za-z$@\\-,]+(?:,[0-9A-Za-z$@\\-]+)*$"
        x-exportParamName: "Convert"
        x-optionalDataType: "String"
      - name: "convert_id"
        in: "query"
        description: "Optionally calculate market quotes by CoinMarketCap ID instead\
          \ of symbol. This option is identical to `convert` outside of ID format.\
          \ Ex: convert_id=1,2781 would replace convert=BTC,USD in your query. This\
          \ parameter cannot be used when `convert` is used."
        required: false
        type: "string"
        pattern: "(^\\d+(?:,\\d+)*$|(\\d,)*PLATFORM_ID+(?:,\\d+)*$)"
        x-exportParamName: "ConvertId"
        x-optionalDataType: "String"
      - name: "aux"
        in: "query"
        description: "Optionally specify a comma-separated list of supplemental data\
          \ fields to return. Pass `price,volume,market_cap,circulating_supply,total_supply,quote_timestamp,is_active,is_fiat,search_interval`\
          \ to include all auxiliary fields."
        required: false
        type: "string"
        default: "price,volume,market_cap,circulating_supply,total_supply,quote_timestamp,is_active,is_fiat"
        pattern: "^(price|volume|market_cap|circulating_supply|total_supply|quote_timestamp|is_active|is_fiat|search_interval)+(?:,(price|volume|market_cap|circulating_supply|total_supply|quote_timestamp|is_active|is_fiat|search_interval)+)*$"
        x-exportParamName: "Aux"
        x-optionalDataType: "String"
      - name: "skip_invalid"
        in: "query"
        description: "Pass `true` to relax request validation rules. When requesting\
          \ records on multiple cryptocurrencies an error is returned if no match\
          \ is found for 1 or more requested cryptocurrencies. If set to true, invalid\
          \ lookups will be skipped allowing valid cryptocurrencies to still be returned."
        required: false
        type: "boolean"
        default: true
        x-exportParamName: "SkipInvalid"
        x-optionalDataType: "Bool"
      responses:
        "200":
          description: "Successful"
          schema:
            $ref: "#/definitions/Cryptocurrency Quotes Historical - Response Model"
        "400":
          description: "Bad Request"
          schema:
            $ref: "#/definitions/HTTP Status 400 Error Object"
        "401":
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/HTTP Status 401 Error Object"
        "403":
          description: "Forbidden"
          schema:
            $ref: "#/definitions/HTTP Status 403 Error Object"
        "429":
          description: "Too Many Requests"
          schema:
            $ref: "#/definitions/HTTP Status 429 Error Object"
        "500":
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/HTTP Status 500 Error Object"
  /v1/cryptocurrency/quotes/latest:
    get:
      tags:
      - "deprecated"
      summary: "Quotes Latest v1 (deprecated)"
      description: "Returns the latest market quote for 1 or more cryptocurrencies.\
        \ Use the \"convert\" option to return market values in multiple fiat and\
        \ cryptocurrency conversions in the same call.\n\n\n**This endpoint is available\
        \ on the following <a href=\"https://coinmarketcap.com/api/features\" target=\"\
        _blank\">API plans</a>:**\n- Basic\n- Startup\n- Hobbyist\n- Standard\n- Professional\n\
        - Enterprise\n\n**Cache / Update frequency:** Every 60 seconds.  \n**Plan\
        \ credit use:** 1 call credit per 100 cryptocurrencies returned (rounded up)\
        \ and 1 call credit per `convert` option beyond the first.  \n**CMC equivalent\
        \ pages:** Latest market data pages for specific cryptocurrencies like [coinmarketcap.com/currencies/bitcoin/](https://coinmarketcap.com/currencies/bitcoin/).\
        \  \n   \n***NOTE:** Use this endpoint to request the latest quote for specific\
        \ cryptocurrencies. If you need to request all cryptocurrencies use [/v1/cryptocurrency/listings/latest](#operation/getV1CryptocurrencyListingsLatest)\
        \ which is optimized for that purpose. The response data between these endpoints\
        \ is otherwise the same.*"
      operationId: "getV1CryptocurrencyQuotesLatest"
      parameters:
      - name: "id"
        in: "query"
        description: "One or more comma-separated cryptocurrency CoinMarketCap IDs.\
          \ Example: 1,2"
        required: false
        type: "string"
        pattern: "^\\d+(?:,\\d+)*$"
        x-exportParamName: "Id"
        x-optionalDataType: "String"
      - name: "slug"
        in: "query"
        description: "Alternatively pass a comma-separated list of cryptocurrency\
          \ slugs. Example: \"bitcoin,ethereum\""
        required: false
        type: "string"
        pattern: "^[0-9a-z-]+(?:,[0-9a-z-]+)*$"
        x-convert:
          lowercase: true
        x-exportParamName: "Slug"
        x-optionalDataType: "String"
      - name: "symbol"
        in: "query"
        description: "Alternatively pass one or more comma-separated cryptocurrency\
          \ symbols. Example: \"BTC,ETH\". At least one \"id\" *or* \"slug\" *or*\
          \ \"symbol\" is required for this request."
        required: false
        type: "string"
        pattern: "^[0-9A-Za-z$@\\-,]+(?:,[0-9A-Za-z$@\\-]+)*$"
        x-exportParamName: "Symbol"
        x-optionalDataType: "String"
      - name: "convert"
        in: "query"
        description: "Optionally calculate market quotes in up to 120 currencies at\
          \ once by passing a comma-separated list of cryptocurrency or fiat currency\
          \ symbols. Each additional convert option beyond the first requires an additional\
          \ call credit. A list of supported fiat options can be found [here](#section/Standards-and-Conventions).\
          \ Each conversion is returned in its own \"quote\" object."
        required: false
        type: "string"
        pattern: "^[0-9A-Za-z$@\\-,]+(?:,[0-9A-Za-z$@\\-]+)*$"
        x-exportParamName: "Convert"
        x-optionalDataType: "String"
      - name: "convert_id"
        in: "query"
        description: "Optionally calculate market quotes by CoinMarketCap ID instead\
          \ of symbol. This option is identical to `convert` outside of ID format.\
          \ Ex: convert_id=1,2781 would replace convert=BTC,USD in your query. This\
          \ parameter cannot be used when `convert` is used."
        required: false
        type: "string"
        pattern: "(^\\d+(?:,\\d+)*$|(\\d,)*PLATFORM_ID+(?:,\\d+)*$)"
        x-exportParamName: "ConvertId"
        x-optionalDataType: "String"
      - name: "aux"
        in: "query"
        description: "Optionally specify a comma-separated list of supplemental data\
          \ fields to return. Pass `num_market_pairs,cmc_rank,date_added,tags,platform,max_supply,circulating_supply,total_supply,market_cap_by_total_supply,volume_24h_reported,volume_7d,volume_7d_reported,volume_30d,volume_30d_reported,is_active,is_fiat`\
          \ to include all auxiliary fields."
        required: false
        type: "string"
        default: "num_market_pairs,cmc_rank,date_added,tags,platform,max_supply,circulating_supply,total_supply,is_active,is_fiat"
        pattern: "^(num_market_pairs|cmc_rank|date_added|tags|platform|max_supply|circulating_supply|total_supply|market_cap_by_total_supply|volume_24h_reported|volume_7d|volume_7d_reported|volume_30d|volume_30d_reported|is_active|is_fiat)+(?:,(num_market_pairs|cmc_rank|date_added|tags|platform|max_supply|circulating_supply|total_supply|market_cap_by_total_supply|volume_24h_reported|volume_7d|volume_7d_reported|volume_30d|volume_30d_reported|is_active|is_fiat)+)*$"
        x-exportParamName: "Aux"
        x-optionalDataType: "String"
      - name: "skip_invalid"
        in: "query"
        description: "Pass `true` to relax request validation rules. When requesting\
          \ records on multiple cryptocurrencies an error is returned if no match\
          \ is found for 1 or more requested cryptocurrencies. If set to true, invalid\
          \ lookups will be skipped allowing valid cryptocurrencies to still be returned."
        required: false
        type: "boolean"
        default: true
        x-exportParamName: "SkipInvalid"
        x-optionalDataType: "Bool"
      responses:
        "200":
          description: "Successful"
          schema:
            $ref: "#/definitions/Cryptocurrency Quotes Latest - Response Model"
        "400":
          description: "Bad Request"
          schema:
            $ref: "#/definitions/HTTP Status 400 Error Object"
        "401":
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/HTTP Status 401 Error Object"
        "403":
          description: "Forbidden"
          schema:
            $ref: "#/definitions/HTTP Status 403 Error Object"
        "429":
          description: "Too Many Requests"
          schema:
            $ref: "#/definitions/HTTP Status 429 Error Object"
        "500":
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/HTTP Status 500 Error Object"
  /v1/cryptocurrency/trending/gainers-losers:
    get:
      tags:
      - "cryptocurrency"
      summary: "Trending Gainers & Losers"
      description: "Returns a paginated list of all trending cryptocurrencies, determined\
        \ and sorted by the largest price gains or losses.\n\n\nYou may sort against\
        \ any of the following:  \n**percent_change_24h**: 24 hour trading price percentage\
        \ change for each currency.\n\n**This endpoint is available on the following\
        \ <a href=\"https://coinmarketcap.com/api/features\" target=\"_blank\">API\
        \ plans</a>:**\n  - Startup\n  - Standard\n  - Professional\n  - Enterprise\n\
        \n**Cache / Update frequency:** Every 10 minutes.  \n**Plan credit use:**\
        \ 1 call credit per 200 cryptocurrencies returned (rounded up) and 1 call\
        \ credit per `convert` option beyond the first.  \n**CMC equivalent pages:**\
        \ Our cryptocurrency Gainers & Losers page [coinmarketcap.com/gainers-losers/](https://coinmarketcap.com/gainers-losers/)."
      operationId: "getV1CryptocurrencyTrendingGainerslosers"
      parameters:
      - name: "start"
        in: "query"
        description: "Optionally offset the start (1-based index) of the paginated\
          \ list of items to return."
        required: false
        type: "integer"
        default: 1
        minimum: 1
        x-exportParamName: "Start"
        x-optionalDataType: "Int32"
      - name: "limit"
        in: "query"
        description: "Optionally specify the number of results to return. Use this\
          \ parameter and the \"start\" parameter to determine your own pagination\
          \ size."
        required: false
        type: "integer"
        default: 100
        maximum: 1000
        minimum: 1
        x-exportParamName: "Limit"
        x-optionalDataType: "Int32"
      - name: "time_period"
        in: "query"
        description: "Adjusts the overall window of time for the biggest gainers and\
          \ losers."
        required: false
        type: "string"
        default: "24h"
        enum:
        - "1h"
        - "24h"
        - "30d"
        - "7d"
        x-exportParamName: "TimePeriod"
        x-optionalDataType: "String"
      - name: "convert"
        in: "query"
        description: "Optionally calculate market quotes in up to 120 currencies at\
          \ once by passing a comma-separated list of cryptocurrency or fiat currency\
          \ symbols. Each additional convert option beyond the first requires an additional\
          \ call credit. A list of supported fiat options can be found [here](#section/Standards-and-Conventions).\
          \ Each conversion is returned in its own \"quote\" object."
        required: false
        type: "string"
        pattern: "^[0-9A-Za-z$@\\-,]+(?:,[0-9A-Za-z$@\\-]+)*$"
        x-exportParamName: "Convert"
        x-optionalDataType: "String"
      - name: "convert_id"
        in: "query"
        description: "Optionally calculate market quotes by CoinMarketCap ID instead\
          \ of symbol. This option is identical to `convert` outside of ID format.\
          \ Ex: convert_id=1,2781 would replace convert=BTC,USD in your query. This\
          \ parameter cannot be used when `convert` is used."
        required: false
        type: "string"
        pattern: "^\\d+(?:,\\d+)*$"
        x-exportParamName: "ConvertId"
        x-optionalDataType: "String"
      - name: "sort"
        in: "query"
        description: "What field to sort the list of cryptocurrencies by."
        required: false
        type: "string"
        default: "percent_change_24h"
        enum:
        - "percent_change_24h"
        x-exportParamName: "Sort"
        x-optionalDataType: "String"
      - name: "sort_dir"
        in: "query"
        description: "The direction in which to order cryptocurrencies against the\
          \ specified sort."
        required: false
        type: "string"
        enum:
        - "asc"
        - "desc"
        x-exportParamName: "SortDir"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Successful"
          schema:
            $ref: "#/definitions/Cryptocurrency Trending Gainers & Losers - Response\
              \ Model"
        "400":
          description: "Bad Request"
          schema:
            $ref: "#/definitions/HTTP Status 400 Error Object"
        "401":
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/HTTP Status 401 Error Object"
        "403":
          description: "Forbidden"
          schema:
            $ref: "#/definitions/HTTP Status 403 Error Object"
        "429":
          description: "Too Many Requests"
          schema:
            $ref: "#/definitions/HTTP Status 429 Error Object"
        "500":
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/HTTP Status 500 Error Object"
  /v1/cryptocurrency/trending/latest:
    get:
      tags:
      - "cryptocurrency"
      summary: "Trending Latest"
      description: "Returns a paginated list of all trending cryptocurrency market\
        \ data, determined and sorted by CoinMarketCap search volume.\n\n\n\n  **This\
        \ endpoint is available on the following <a href=\"https://coinmarketcap.com/api/features\"\
        \ target=\"_blank\">API plans</a>:**\n  - Startup\n  - Standard\n  - Professional\n\
        \  - Enterprise\n\n**Cache / Update frequency:** Every 10 minutes.  \n**Plan\
        \ credit use:** 1 call credit per 200 cryptocurrencies returned (rounded up)\
        \ and 1 call credit per `convert` option beyond the first.  \n**CMC equivalent\
        \ pages:** Our cryptocurrency Trending page [coinmarketcap.com/trending-cryptocurrencies/](https://coinmarketcap.com/trending-cryptocurrencies/)."
      operationId: "getV1CryptocurrencyTrendingLatest"
      parameters:
      - name: "start"
        in: "query"
        description: "Optionally offset the start (1-based index) of the paginated\
          \ list of items to return."
        required: false
        type: "integer"
        default: 1
        minimum: 1
        x-exportParamName: "Start"
        x-optionalDataType: "Int32"
      - name: "limit"
        in: "query"
        description: "Optionally specify the number of results to return. Use this\
          \ parameter and the \"start\" parameter to determine your own pagination\
          \ size."
        required: false
        type: "integer"
        default: 100
        maximum: 1000
        minimum: 1
        x-exportParamName: "Limit"
        x-optionalDataType: "Int32"
      - name: "time_period"
        in: "query"
        description: "Adjusts the overall window of time for the latest trending coins."
        required: false
        type: "string"
        default: "24h"
        enum:
        - "24h"
        - "30d"
        - "7d"
        x-exportParamName: "TimePeriod"
        x-optionalDataType: "String"
      - name: "convert"
        in: "query"
        description: "Optionally calculate market quotes in up to 120 currencies at\
          \ once by passing a comma-separated list of cryptocurrency or fiat currency\
          \ symbols. Each additional convert option beyond the first requires an additional\
          \ call credit. A list of supported fiat options can be found [here](#section/Standards-and-Conventions).\
          \ Each conversion is returned in its own \"quote\" object."
        required: false
        type: "string"
        pattern: "^[0-9A-Za-z$@\\-,]+(?:,[0-9A-Za-z$@\\-]+)*$"
        x-exportParamName: "Convert"
        x-optionalDataType: "String"
      - name: "convert_id"
        in: "query"
        description: "Optionally calculate market quotes by CoinMarketCap ID instead\
          \ of symbol. This option is identical to `convert` outside of ID format.\
          \ Ex: convert_id=1,2781 would replace convert=BTC,USD in your query. This\
          \ parameter cannot be used when `convert` is used."
        required: false
        type: "string"
        pattern: "^\\d+(?:,\\d+)*$"
        x-exportParamName: "ConvertId"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Successful"
          schema:
            $ref: "#/definitions/Cryptocurrency Trending Latest - Response Model"
        "400":
          description: "Bad Request"
          schema:
            $ref: "#/definitions/HTTP Status 400 Error Object"
        "401":
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/HTTP Status 401 Error Object"
        "403":
          description: "Forbidden"
          schema:
            $ref: "#/definitions/HTTP Status 403 Error Object"
        "429":
          description: "Too Many Requests"
          schema:
            $ref: "#/definitions/HTTP Status 429 Error Object"
        "500":
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/HTTP Status 500 Error Object"
  /v1/cryptocurrency/trending/most-visited:
    get:
      tags:
      - "cryptocurrency"
      summary: "Trending Most Visited"
      description: "Returns a paginated list of all trending cryptocurrency market\
        \ data, determined and sorted by traffic to coin detail pages.\n\n\n\n  **This\
        \ endpoint is available on the following <a href=\"https://coinmarketcap.com/api/features\"\
        \ target=\"_blank\">API plans</a>:**\n  - Startup\n  - Standard\n  - Professional\n\
        \  - Enterprise\n\n**Cache / Update frequency:** Every 10 minutes.  \n**Plan\
        \ credit use:** 1 call credit per 200 cryptocurrencies returned (rounded up)\
        \ and 1 call credit per `convert` option beyond the first.  \n**CMC equivalent\
        \ pages:** The CoinMarketCap “Most Visited” trending list. [coinmarketcap.com/most-viewed-pages/](https://coinmarketcap.com/most-viewed-pages/)."
      operationId: "getV1CryptocurrencyTrendingMostvisited"
      parameters:
      - name: "start"
        in: "query"
        description: "Optionally offset the start (1-based index) of the paginated\
          \ list of items to return."
        required: false
        type: "integer"
        default: 1
        minimum: 1
        x-exportParamName: "Start"
        x-optionalDataType: "Int32"
      - name: "limit"
        in: "query"
        description: "Optionally specify the number of results to return. Use this\
          \ parameter and the \"start\" parameter to determine your own pagination\
          \ size."
        required: false
        type: "integer"
        default: 100
        maximum: 1000
        minimum: 1
        x-exportParamName: "Limit"
        x-optionalDataType: "Int32"
      - name: "time_period"
        in: "query"
        description: "Adjusts the overall window of time for most visited currencies."
        required: false
        type: "string"
        default: "24h"
        enum:
        - "24h"
        - "30d"
        - "7d"
        x-exportParamName: "TimePeriod"
        x-optionalDataType: "String"
      - name: "convert"
        in: "query"
        description: "Optionally calculate market quotes in up to 120 currencies at\
          \ once by passing a comma-separated list of cryptocurrency or fiat currency\
          \ symbols. Each additional convert option beyond the first requires an additional\
          \ call credit. A list of supported fiat options can be found [here](#section/Standards-and-Conventions).\
          \ Each conversion is returned in its own \"quote\" object."
        required: false
        type: "string"
        pattern: "^[0-9A-Za-z$@\\-,]+(?:,[0-9A-Za-z$@\\-]+)*$"
        x-exportParamName: "Convert"
        x-optionalDataType: "String"
      - name: "convert_id"
        in: "query"
        description: "Optionally calculate market quotes by CoinMarketCap ID instead\
          \ of symbol. This option is identical to `convert` outside of ID format.\
          \ Ex: convert_id=1,2781 would replace convert=BTC,USD in your query. This\
          \ parameter cannot be used when `convert` is used."
        required: false
        type: "string"
        pattern: "^\\d+(?:,\\d+)*$"
        x-exportParamName: "ConvertId"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Successful"
          schema:
            $ref: "#/definitions/Cryptocurrency Trending Most Visited - Response Model"
        "400":
          description: "Bad Request"
          schema:
            $ref: "#/definitions/HTTP Status 400 Error Object"
        "401":
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/HTTP Status 401 Error Object"
        "403":
          description: "Forbidden"
          schema:
            $ref: "#/definitions/HTTP Status 403 Error Object"
        "429":
          description: "Too Many Requests"
          schema:
            $ref: "#/definitions/HTTP Status 429 Error Object"
        "500":
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/HTTP Status 500 Error Object"
  /v1/exchange/listings/latest:
    get:
      tags:
      - "exchange"
      summary: "Listings Latest"
      description: "Returns a paginated list of all cryptocurrency exchanges including\
        \ the latest aggregate market data for each exchange. Use the \"convert\"\
        \ option to return market values in multiple fiat and cryptocurrency conversions\
        \ in the same call.  \n  \n**This endpoint is available on the following <a\
        \ href=\"https://coinmarketcap.com/api/features\" target=\"_blank\">API plans</a>:**\n\
        \  - ~~Basic~~\n  - ~~Hobbyist~~\n  - ~~Startup~~\n  - Standard\n  - Professional\n\
        \  - Enterprise\n\n**Cache / Update frequency:** Every 1 minute.  \n**Plan\
        \ credit use:** 1 call credit per 100 exchanges returned (rounded up) and\
        \ 1 call credit per `convert` option beyond the first.  \n**CMC equivalent\
        \ pages:** Our latest exchange listing and ranking pages like [coinmarketcap.com/rankings/exchanges/](https://coinmarketcap.com/rankings/exchanges/).\
        \    \n  \n  ***NOTE:** Use this endpoint if you need a sorted and paginated\
        \ list of exchanges. If you want to query for market data on a few specific\
        \ exchanges use /v1/exchange/quotes/latest which is optimized for that purpose.\
        \ The response data between these endpoints is otherwise the same.*  "
      operationId: "getV1ExchangeListingsLatest"
      parameters:
      - name: "start"
        in: "query"
        description: "Optionally offset the start (1-based index) of the paginated\
          \ list of items to return."
        required: false
        type: "integer"
        default: 1
        minimum: 1
        x-exportParamName: "Start"
        x-optionalDataType: "Int32"
      - name: "limit"
        in: "query"
        description: "Optionally specify the number of results to return. Use this\
          \ parameter and the \"start\" parameter to determine your own pagination\
          \ size."
        required: false
        type: "integer"
        default: 100
        maximum: 5000
        minimum: 1
        x-exportParamName: "Limit"
        x-optionalDataType: "Int32"
      - name: "sort"
        in: "query"
        description: "What field to sort the list of exchanges by."
        required: false
        type: "string"
        default: "volume_24h"
        enum:
        - "name"
        - "volume_24h"
        - "volume_24h_adjusted"
        - "exchange_score"
        x-exportParamName: "Sort"
        x-optionalDataType: "String"
      - name: "sort_dir"
        in: "query"
        description: "The direction in which to order exchanges against the specified\
          \ sort."
        required: false
        type: "string"
        enum:
        - "asc"
        - "desc"
        x-exportParamName: "SortDir"
        x-optionalDataType: "String"
      - name: "market_type"
        in: "query"
        description: "The type of exchange markets to include in rankings. This field\
          \ is deprecated. Please use \"all\" for accurate sorting."
        required: false
        type: "string"
        default: "all"
        enum:
        - "fees"
        - "no_fees"
        - "all"
        x-exportParamName: "MarketType"
        x-optionalDataType: "String"
      - name: "category"
        in: "query"
        description: "The category for this exchange."
        required: false
        type: "string"
        default: "all"
        enum:
        - "all"
        - "spot"
        - "derivatives"
        - "dex"
        - "lending"
        x-exportParamName: "Category"
        x-optionalDataType: "String"
      - name: "aux"
        in: "query"
        description: "Optionally specify a comma-separated list of supplemental data\
          \ fields to return. Pass `num_market_pairs,traffic_score,rank,exchange_score,effective_liquidity_24h,date_launched,fiats`\
          \ to include all auxiliary fields."
        required: false
        type: "string"
        default: "num_market_pairs,traffic_score,rank,exchange_score,effective_liquidity_24h"
        pattern: "^(num_market_pairs|traffic_score|rank|exchange_score|effective_liquidity_24h|date_launched|fiats)+(?:,(num_market_pairs|traffic_score|rank|exchange_score|effective_liquidity_24h|date_launched|fiats)+)*$"
        x-exportParamName: "Aux"
        x-optionalDataType: "String"
      - name: "convert"
        in: "query"
        description: "Optionally calculate market quotes in up to 120 currencies at\
          \ once by passing a comma-separated list of cryptocurrency or fiat currency\
          \ symbols. Each additional convert option beyond the first requires an additional\
          \ call credit. A list of supported fiat options can be found [here](#section/Standards-and-Conventions).\
          \ Each conversion is returned in its own \"quote\" object."
        required: false
        type: "string"
        pattern: "^[0-9A-Za-z$@\\-,]+(?:,[0-9A-Za-z$@\\-]+)*$"
        x-exportParamName: "Convert"
        x-optionalDataType: "String"
      - name: "convert_id"
        in: "query"
        description: "Optionally calculate market quotes by CoinMarketCap ID instead\
          \ of symbol. This option is identical to `convert` outside of ID format.\
          \ Ex: convert_id=1,2781 would replace convert=BTC,USD in your query. This\
          \ parameter cannot be used when `convert` is used."
        required: false
        type: "string"
        pattern: "^\\d+(?:,\\d+)*$"
        x-exportParamName: "ConvertId"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Successful"
          schema:
            $ref: "#/definitions/Exchange Listings Latest - Response Model"
        "400":
          description: "Bad Request"
          schema:
            $ref: "#/definitions/HTTP Status 400 Error Object"
        "401":
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/HTTP Status 401 Error Object"
        "403":
          description: "Forbidden"
          schema:
            $ref: "#/definitions/HTTP Status 403 Error Object"
        "429":
          description: "Too Many Requests"
          schema:
            $ref: "#/definitions/HTTP Status 429 Error Object"
        "500":
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/HTTP Status 500 Error Object"
  /v1/exchange/market-pairs/latest:
    get:
      tags:
      - "exchange"
      summary: "Market Pairs Latest"
      description: "Returns all active market pairs that CoinMarketCap tracks for\
        \ a given exchange. The latest price and volume information is returned for\
        \ each market. Use the \"convert\" option to return market values in multiple\
        \ fiat and cryptocurrency conversions in the same call.'\n\n  **This endpoint\
        \ is available on the following <a href=\"https://coinmarketcap.com/api/features\"\
        \ target=\"_blank\">API plans</a>:**\n  - ~~Basic~~\n  - ~~Hobbyist~~\n  -\
        \ ~~Startup~~\n  - Standard\n  - Professional\n  - Enterprise\n\n**Cache /\
        \ Update frequency:** Every 60 seconds.  \n**Plan credit use:** 1 call credit\
        \ per 100 market pairs returned (rounded up) and 1 call credit per `convert`\
        \ option beyond the first.  \n**CMC equivalent pages:** Our exchange level\
        \ active markets pages like [coinmarketcap.com/exchanges/binance/](https://coinmarketcap.com/exchanges/binance/).\
        \  "
      operationId: "getV1ExchangeMarketpairsLatest"
      parameters:
      - name: "id"
        in: "query"
        description: "A CoinMarketCap exchange ID. Example: \"1\""
        required: false
        type: "string"
        pattern: "^\\d*$"
        x-exportParamName: "Id"
        x-optionalDataType: "String"
      - name: "slug"
        in: "query"
        description: "Alternatively pass an exchange \"slug\" (URL friendly all lowercase\
          \ shorthand version of name with spaces replaced with hyphens). Example:\
          \ \"binance\". One \"id\" *or* \"slug\" is required."
        required: false
        type: "string"
        pattern: "^[0-9a-z-]*$"
        x-convert:
          lowercase: true
        x-exportParamName: "Slug"
        x-optionalDataType: "String"
      - name: "start"
        in: "query"
        description: "Optionally offset the start (1-based index) of the paginated\
          \ list of items to return."
        required: false
        type: "integer"
        default: 1
        minimum: 1
        x-exportParamName: "Start"
        x-optionalDataType: "Int32"
      - name: "limit"
        in: "query"
        description: "Optionally specify the number of results to return. Use this\
          \ parameter and the \"start\" parameter to determine your own pagination\
          \ size."
        required: false
        type: "integer"
        default: 100
        maximum: 5000
        minimum: 1
        x-exportParamName: "Limit"
        x-optionalDataType: "Int32"
      - name: "aux"
        in: "query"
        description: "Optionally specify a comma-separated list of supplemental data\
          \ fields to return. Pass `num_market_pairs,category,fee_type,market_url,currency_name,currency_slug,price_quote,effective_liquidity,market_score,market_reputation`\
          \ to include all auxiliary fields."
        required: false
        type: "string"
        default: "num_market_pairs,category,fee_type"
        pattern: "^(num_market_pairs|category|fee_type|market_url|currency_name|currency_slug|price_quote|effective_liquidity|market_score|market_reputation)+(?:,(num_market_pairs|category|fee_type|market_url|currency_name|currency_slug|price_quote|effective_liquidity|market_score|market_reputation)+)*$"
        x-exportParamName: "Aux"
        x-optionalDataType: "String"
      - name: "matched_id"
        in: "query"
        description: "Optionally include one or more comma-delimited fiat or cryptocurrency\
          \ IDs to filter market pairs by. For example `?matched_id=2781` would only\
          \ return BTC markets that matched: \"BTC/USD\" or \"USD/BTC\" for the requested\
          \ exchange. This parameter cannot be used when `matched_symbol` is used."
        required: false
        type: "string"
        pattern: "^\\d+(?:,\\d+)*$"
        x-exportParamName: "MatchedId"
        x-optionalDataType: "String"
      - name: "matched_symbol"
        in: "query"
        description: "Optionally include one or more comma-delimited fiat or cryptocurrency\
          \ symbols to filter market pairs by. For example `?matched_symbol=USD` would\
          \ only return BTC markets that matched: \"BTC/USD\" or \"USD/BTC\" for the\
          \ requested exchange. This parameter cannot be used when `matched_id` is\
          \ used."
        required: false
        type: "string"
        pattern: "^[0-9A-Za-z$@\\-,]+(?:,[0-9A-Za-z$@\\-]+)*$"
        x-exportParamName: "MatchedSymbol"
        x-optionalDataType: "String"
      - name: "category"
        in: "query"
        description: "The category of trading this market falls under. Spot markets\
          \ are the most common but options include derivatives and OTC."
        required: false
        type: "string"
        default: "all"
        enum:
        - "all"
        - "spot"
        - "derivatives"
        - "otc"
        - "futures"
        - "perpetual"
        x-exportParamName: "Category"
        x-optionalDataType: "String"
      - name: "fee_type"
        in: "query"
        description: "The fee type the exchange enforces for this market."
        required: false
        type: "string"
        default: "all"
        enum:
        - "all"
        - "percentage"
        - "no-fees"
        - "transactional-mining"
        - "unknown"
        x-exportParamName: "FeeType"
        x-optionalDataType: "String"
      - name: "convert"
        in: "query"
        description: "Optionally calculate market quotes in up to 120 currencies at\
          \ once by passing a comma-separated list of cryptocurrency or fiat currency\
          \ symbols. Each additional convert option beyond the first requires an additional\
          \ call credit. A list of supported fiat options can be found [here](#section/Standards-and-Conventions).\
          \ Each conversion is returned in its own \"quote\" object."
        required: false
        type: "string"
        pattern: "^[0-9A-Za-z$@\\-,]+(?:,[0-9A-Za-z$@\\-]+)*$"
        x-exportParamName: "Convert"
        x-optionalDataType: "String"
      - name: "convert_id"
        in: "query"
        description: "Optionally calculate market quotes by CoinMarketCap ID instead\
          \ of symbol. This option is identical to `convert` outside of ID format.\
          \ Ex: convert_id=1,2781 would replace convert=BTC,USD in your query. This\
          \ parameter cannot be used when `convert` is used."
        required: false
        type: "string"
        pattern: "^\\d+(?:,\\d+)*$"
        x-exportParamName: "ConvertId"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Successful"
          schema:
            $ref: "#/definitions/Exchange Market Pairs Latest - Response Model"
        "400":
          description: "Bad Request"
          schema:
            $ref: "#/definitions/HTTP Status 400 Error Object"
        "401":
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/HTTP Status 401 Error Object"
        "403":
          description: "Forbidden"
          schema:
            $ref: "#/definitions/HTTP Status 403 Error Object"
        "429":
          description: "Too Many Requests"
          schema:
            $ref: "#/definitions/HTTP Status 429 Error Object"
        "500":
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/HTTP Status 500 Error Object"
  /v1/exchange/quotes/historical:
    get:
      tags:
      - "exchange"
      summary: "Quotes Historical"
      description: "Returns an interval of historic quotes for any exchange based\
        \ on time and interval parameters.\n\n**Technical Notes**\n- A historic quote\
        \ for every \"interval\" period between your \"time_start\" and \"time_end\"\
        \ will be returned.  \n- If a \"time_start\" is not supplied, the \"interval\"\
        \ will be applied in reverse from \"time_end\".  \n- If \"time_end\" is not\
        \ supplied, it defaults to the current time.  \n- At each \"interval\" period,\
        \ the historic quote that is closest in time to the requested time will be\
        \ returned.  \n- If no historic quotes are available in a given \"interval\"\
        \ period up until the next interval period, it will be skipped. \n- This endpoint\
        \ supports requesting multiple exchanges in the same call. Please note the\
        \ API response will be wrapped in an additional object in this case.   \n\n\
        **Interval Options**  \nThere are 2 types of time interval formats that may\
        \ be used for \"interval\".  \n\nThe first are calendar year and time constants\
        \ in UTC time:  \n**\"hourly\"** - Get the first quote available at the beginning\
        \ of each calendar hour.  \n**\"daily\"** - Get the first quote available\
        \ at the beginning of each calendar day.  \n**\"weekly\"** - Get the first\
        \ quote available at the beginning of each calendar week.  \n**\"monthly\"\
        ** - Get the first quote available at the beginning of each calendar month.\
        \  \n**\"yearly\"** - Get the first quote available at the beginning of each\
        \ calendar year.  \n\nThe second are relative time intervals.  \n**\"m\"**:\
        \ Get the first quote available every \"m\" minutes (60 second intervals).\
        \ Supported minutes are: \"5m\", \"10m\", \"15m\", \"30m\", \"45m\".  \n**\"\
        h\"**: Get the first quote available every \"h\" hours (3600 second intervals).\
        \ Supported hour intervals are: \"1h\", \"2h\", \"3h\", \"4h\", \"6h\", \"\
        12h\".  \n**\"d\"**: Get the first quote available every \"d\" days (86400\
        \ second intervals). Supported day intervals are: \"1d\", \"2d\", \"3d\",\
        \ \"7d\", \"14d\", \"15d\", \"30d\", \"60d\", \"90d\", \"365d\".  \n\n**This\
        \ endpoint is available on the following <a href=\"https://coinmarketcap.com/api/features\"\
        \ target=\"_blank\">API plans</a>:**\n  - ~~Basic~~\n  - ~~Hobbyist~~\n  -\
        \ ~~Startup~~\n  - Standard (3 months)\n  - Professional (Up to 12 months)\n\
        \  - Enterprise (Up to 6 years)\n\n**Note:** You may use the /exchange/map\
        \ endpoint to receive a list of earliest historical dates that may be fetched\
        \ for each exchange as  `first_historical_data`. This timestamp will either\
        \ be the date CoinMarketCap first started tracking the exchange or 2018-04-26T00:45:00.000Z,\
        \ the earliest date this type of historical data is available for.\n  \n**Cache\
        \ / Update frequency:** Every 5 minutes.  \n**Plan credit use:** 1 call credit\
        \ per 100 historical data points returned (rounded up) and 1 call credit per\
        \ `convert` option beyond the first.  \n**CMC equivalent pages:** No equivalent,\
        \ this data is only available via API outside of our volume sparkline charts\
        \ in [coinmarketcap.com/rankings/exchanges/](https://coinmarketcap.com/rankings/exchanges/).\
        \  "
      operationId: "getV1ExchangeQuotesHistorical"
      parameters:
      - name: "id"
        in: "query"
        description: "One or more comma-separated exchange CoinMarketCap ids. Example:\
          \ \"24,270\""
        required: false
        type: "string"
        pattern: "^\\d+(?:,\\d+)*$"
        x-exportParamName: "Id"
        x-optionalDataType: "String"
      - name: "slug"
        in: "query"
        description: "Alternatively, one or more comma-separated exchange names in\
          \ URL friendly shorthand \"slug\" format (all lowercase, spaces replaced\
          \ with hyphens). Example: \"binance,kraken\". At least one \"id\" *or* \"\
          slug\" is required."
        required: false
        type: "string"
        pattern: "^[0-9a-z-]+(?:,[0-9a-z-]+)*$"
        x-convert:
          lowercase: true
        x-exportParamName: "Slug"
        x-optionalDataType: "String"
      - name: "time_start"
        in: "query"
        description: "Timestamp (Unix or ISO 8601) to start returning quotes for.\
          \ Optional, if not passed, we'll return quotes calculated in reverse from\
          \ \"time_end\"."
        required: false
        type: "string"
        x-exportParamName: "TimeStart"
        x-optionalDataType: "String"
      - name: "time_end"
        in: "query"
        description: "Timestamp (Unix or ISO 8601) to stop returning quotes for (inclusive).\
          \ Optional, if not passed, we'll default to the current time. If no \"time_start\"\
          \ is passed, we return quotes in reverse order starting from this time."
        required: false
        type: "string"
        x-exportParamName: "TimeEnd"
        x-optionalDataType: "String"
      - name: "count"
        in: "query"
        description: "The number of interval periods to return results for. Optional,\
          \ required if both \"time_start\" and \"time_end\" aren't supplied. The\
          \ default is 10 items. The current query limit is 10000."
        required: false
        type: "number"
        default: 10.0
        maximum: 10000
        minimum: 1
        x-exportParamName: "Count"
        x-optionalDataType: "Float32"
      - name: "interval"
        in: "query"
        description: "Interval of time to return data points for. See details in endpoint\
          \ description."
        required: false
        type: "string"
        default: "5m"
        enum:
        - "yearly"
        - "monthly"
        - "weekly"
        - "daily"
        - "hourly"
        - "5m"
        - "10m"
        - "15m"
        - "30m"
        - "45m"
        - "1h"
        - "2h"
        - "3h"
        - "4h"
        - "6h"
        - "12h"
        - "24h"
        - "1d"
        - "2d"
        - "3d"
        - "7d"
        - "14d"
        - "15d"
        - "30d"
        - "60d"
        - "90d"
        - "365d"
        x-exportParamName: "Interval"
        x-optionalDataType: "String"
      - name: "convert"
        in: "query"
        description: "By default market quotes are returned in USD. Optionally calculate\
          \ market quotes in up to 3 other fiat currencies or cryptocurrencies."
        required: false
        type: "string"
        pattern: "^[0-9A-Za-z$@\\-,]+(?:,[0-9A-Za-z$@\\-]+)*$"
        x-exportParamName: "Convert"
        x-optionalDataType: "String"
      - name: "convert_id"
        in: "query"
        description: "Optionally calculate market quotes by CoinMarketCap ID instead\
          \ of symbol. This option is identical to `convert` outside of ID format.\
          \ Ex: convert_id=1,2781 would replace convert=BTC,USD in your query. This\
          \ parameter cannot be used when `convert` is used."
        required: false
        type: "string"
        pattern: "^\\d+(?:,\\d+)*$"
        x-exportParamName: "ConvertId"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Successful"
          schema:
            $ref: "#/definitions/Exchange Historical Quotes - Response Model"
        "400":
          description: "Bad Request"
          schema:
            $ref: "#/definitions/HTTP Status 400 Error Object"
        "401":
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/HTTP Status 401 Error Object"
        "403":
          description: "Forbidden"
          schema:
            $ref: "#/definitions/HTTP Status 403 Error Object"
        "429":
          description: "Too Many Requests"
          schema:
            $ref: "#/definitions/HTTP Status 429 Error Object"
        "500":
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/HTTP Status 500 Error Object"
  /v1/exchange/quotes/latest:
    get:
      tags:
      - "exchange"
      summary: "Quotes Latest"
      description: "Returns the latest aggregate market data for 1 or more exchanges.\
        \ Use the \"convert\" option to return market values in multiple fiat and\
        \ cryptocurrency conversions in the same call.\n\n**This endpoint is available\
        \ on the following <a href=\"https://coinmarketcap.com/api/features\" target=\"\
        _blank\">API plans</a>:**\n- ~~Basic~~\n- ~~Hobbyist~~\n- ~~Startup~~\n- Standard\n\
        - Professional\n- Enterprise\n\n**Cache / Update frequency:** Every 60 seconds.\
        \  \n**Plan credit use:** 1 call credit per 100 exchanges returned (rounded\
        \ up) and 1 call credit per `convert` option beyond the first.  \n**CMC equivalent\
        \ pages:** Latest market data summary for specific exchanges like [coinmarketcap.com/rankings/exchanges/](https://coinmarketcap.com/rankings/exchanges/).\
        \  "
      operationId: "getV1ExchangeQuotesLatest"
      parameters:
      - name: "id"
        in: "query"
        description: "One or more comma-separated CoinMarketCap exchange IDs. Example:\
          \ \"1,2\""
        required: false
        type: "string"
        pattern: "^\\d+(?:,\\d+)*$"
        x-exportParamName: "Id"
        x-optionalDataType: "String"
      - name: "slug"
        in: "query"
        description: "Alternatively, pass a comma-separated list of exchange \"slugs\"\
          \ (URL friendly all lowercase shorthand version of name with spaces replaced\
          \ with hyphens). Example: \"binance,gdax\". At least one \"id\" *or* \"\
          slug\" is required."
        required: false
        type: "string"
        pattern: "^[0-9a-z-]+(?:,[0-9a-z-]+)*$"
        x-convert:
          lowercase: true
        x-exportParamName: "Slug"
        x-optionalDataType: "String"
      - name: "convert"
        in: "query"
        description: "Optionally calculate market quotes in up to 120 currencies at\
          \ once by passing a comma-separated list of cryptocurrency or fiat currency\
          \ symbols. Each additional convert option beyond the first requires an additional\
          \ call credit. A list of supported fiat options can be found [here](#section/Standards-and-Conventions).\
          \ Each conversion is returned in its own \"quote\" object."
        required: false
        type: "string"
        pattern: "^[0-9A-Za-z$@\\-,]+(?:,[0-9A-Za-z$@\\-]+)*$"
        x-exportParamName: "Convert"
        x-optionalDataType: "String"
      - name: "convert_id"
        in: "query"
        description: "Optionally calculate market quotes by CoinMarketCap ID instead\
          \ of symbol. This option is identical to `convert` outside of ID format.\
          \ Ex: convert_id=1,2781 would replace convert=BTC,USD in your query. This\
          \ parameter cannot be used when `convert` is used."
        required: false
        type: "string"
        pattern: "^\\d+(?:,\\d+)*$"
        x-exportParamName: "ConvertId"
        x-optionalDataType: "String"
      - name: "aux"
        in: "query"
        description: "Optionally specify a comma-separated list of supplemental data\
          \ fields to return. Pass `num_market_pairs,traffic_score,rank,exchange_score,liquidity_score,effective_liquidity_24h`\
          \ to include all auxiliary fields."
        required: false
        type: "string"
        default: "num_market_pairs,traffic_score,rank,exchange_score,liquidity_score,effective_liquidity_24h"
        pattern: "^(num_market_pairs|traffic_score|rank|exchange_score|liquidity_score|effective_liquidity_24h)+(?:,(num_market_pairs|traffic_score|rank|exchange_score|liquidity_score|effective_liquidity_24h)+)*$"
        x-exportParamName: "Aux"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Successful"
          schema:
            $ref: "#/definitions/Exchange Quotes Latest - Response Model"
        "400":
          description: "Bad Request"
          schema:
            $ref: "#/definitions/HTTP Status 400 Error Object"
        "401":
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/HTTP Status 401 Error Object"
        "403":
          description: "Forbidden"
          schema:
            $ref: "#/definitions/HTTP Status 403 Error Object"
        "429":
          description: "Too Many Requests"
          schema:
            $ref: "#/definitions/HTTP Status 429 Error Object"
        "500":
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/HTTP Status 500 Error Object"
  /v1/global-metrics/quotes/historical:
    get:
      tags:
      - "global-metrics"
      summary: "Quotes Historical"
      description: "Returns an interval of historical global cryptocurrency market\
        \ metrics based on time and interval parameters.\n\n**Technical Notes**\n\
        - A historic quote for every \"interval\" period between your \"time_start\"\
        \ and \"time_end\" will be returned.\n- If a \"time_start\" is not supplied,\
        \ the \"interval\" will be applied in reverse from \"time_end\".\n- If \"\
        time_end\" is not supplied, it defaults to the current time.\n- At each \"\
        interval\" period, the historic quote that is closest in time to the requested\
        \ time will be returned.\n- If no historic quotes are available in a given\
        \ \"interval\" period up until the next interval period, it will be skipped.\n\
        \n**Interval Options**  \nThere are 2 types of time interval formats that\
        \ may be used for \"interval\".  \n\nThe first are calendar year and time\
        \ constants in UTC time:  \n**\"hourly\"** - Get the first quote available\
        \ at the beginning of each calendar hour.  \n**\"daily\"** - Get the first\
        \ quote available at the beginning of each calendar day.  \n**\"weekly\"**\
        \ - Get the first quote available at the beginning of each calendar week.\
        \  \n**\"monthly\"** - Get the first quote available at the beginning of each\
        \ calendar month.  \n**\"yearly\"** - Get the first quote available at the\
        \ beginning of each calendar year.  \n  \nThe second are relative time intervals.\
        \  \n**\"m\"**: Get the first quote available every \"m\" minutes (60 second\
        \ intervals). Supported minutes are: \"5m\", \"10m\", \"15m\", \"30m\", \"\
        45m\".  \n**\"h\"**: Get the first quote available every \"h\" hours (3600\
        \ second intervals). Supported hour intervals are: \"1h\", \"2h\", \"3h\"\
        , \"4h\", \"6h\", \"12h\".  \n**\"d\"**: Get the first quote available every\
        \ \"d\" days (86400 second intervals). Supported day intervals are: \"1d\"\
        , \"2d\", \"3d\", \"7d\", \"14d\", \"15d\", \"30d\", \"60d\", \"90d\", \"\
        365d\".  \n\n**This endpoint is available on the following <a href=\"https://coinmarketcap.com/api/features\"\
        \ target=\"_blank\">API plans</a>:**\n- ~~Basic~~\n- ~~Hobbyist~~\n- ~~Startup~~\n\
        - Standard (3 months)\n- Professional (12 months)\n- Enterprise (Up to 6 years)\n\
        \n**Cache / Update frequency:** Every 5 minutes.  \n**Plan credit use:** 1\
        \ call credit per 100 historical data points returned (rounded up).  \n**CMC\
        \ equivalent pages:** Our Total Market Capitalization global chart [coinmarketcap.com/charts/](https://coinmarketcap.com/charts/).\
        \  "
      operationId: "getV1GlobalmetricsQuotesHistorical"
      parameters:
      - name: "time_start"
        in: "query"
        description: "Timestamp (Unix or ISO 8601) to start returning quotes for.\
          \ Optional, if not passed, we'll return quotes calculated in reverse from\
          \ \"time_end\"."
        required: false
        type: "string"
        x-exportParamName: "TimeStart"
        x-optionalDataType: "String"
      - name: "time_end"
        in: "query"
        description: "Timestamp (Unix or ISO 8601) to stop returning quotes for (inclusive).\
          \ Optional, if not passed, we'll default to the current time. If no \"time_start\"\
          \ is passed, we return quotes in reverse order starting from this time."
        required: false
        type: "string"
        x-exportParamName: "TimeEnd"
        x-optionalDataType: "String"
      - name: "count"
        in: "query"
        description: "The number of interval periods to return results for. Optional,\
          \ required if both \"time_start\" and \"time_end\" aren't supplied. The\
          \ default is 10 items. The current query limit is 10000."
        required: false
        type: "number"
        default: 10.0
        maximum: 10000
        minimum: 1
        x-exportParamName: "Count"
        x-optionalDataType: "Float32"
      - name: "interval"
        in: "query"
        description: "Interval of time to return data points for. See details in endpoint\
          \ description."
        required: false
        type: "string"
        default: "1d"
        enum:
        - "yearly"
        - "monthly"
        - "weekly"
        - "daily"
        - "hourly"
        - "5m"
        - "10m"
        - "15m"
        - "30m"
        - "45m"
        - "1h"
        - "2h"
        - "3h"
        - "4h"
        - "6h"
        - "12h"
        - "24h"
        - "1d"
        - "2d"
        - "3d"
        - "7d"
        - "14d"
        - "15d"
        - "30d"
        - "60d"
        - "90d"
        - "365d"
        x-exportParamName: "Interval"
        x-optionalDataType: "String"
      - name: "convert"
        in: "query"
        description: "By default market quotes are returned in USD. Optionally calculate\
          \ market quotes in up to 3 other fiat currencies or cryptocurrencies."
        required: false
        type: "string"
        pattern: "^[0-9A-Za-z$@\\-,]+(?:,[0-9A-Za-z$@\\-]+)*$"
        x-exportParamName: "Convert"
        x-optionalDataType: "String"
      - name: "convert_id"
        in: "query"
        description: "Optionally calculate market quotes by CoinMarketCap ID instead\
          \ of symbol. This option is identical to `convert` outside of ID format.\
          \ Ex: convert_id=1,2781 would replace convert=BTC,USD in your query. This\
          \ parameter cannot be used when `convert` is used."
        required: false
        type: "string"
        pattern: "^\\d+(?:,\\d+)*$"
        x-exportParamName: "ConvertId"
        x-optionalDataType: "String"
      - name: "aux"
        in: "query"
        description: "Optionally specify a comma-separated list of supplemental data\
          \ fields to return. Pass `btc_dominance,active_cryptocurrencies,active_exchanges,active_market_pairs,total_volume_24h,total_volume_24h_reported,altcoin_market_cap,altcoin_volume_24h,altcoin_volume_24h_reported,search_interval`\
          \ to include all auxiliary fields."
        required: false
        type: "string"
        default: "btc_dominance,active_cryptocurrencies,active_exchanges,active_market_pairs,total_volume_24h,total_volume_24h_reported,altcoin_market_cap,altcoin_volume_24h,altcoin_volume_24h_reported"
        pattern: "^(btc_dominance|active_cryptocurrencies|active_exchanges|active_market_pairs|total_volume_24h|total_volume_24h_reported|altcoin_market_cap|altcoin_volume_24h|altcoin_volume_24h_reported|search_interval)+(?:,(btc_dominance|active_cryptocurrencies|active_exchanges|active_market_pairs|total_volume_24h|total_volume_24h_reported|altcoin_market_cap|altcoin_volume_24h|altcoin_volume_24h_reported|search_interval)+)*$"
        x-exportParamName: "Aux"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Successful"
          schema:
            $ref: "#/definitions/Global Metrics Quotes Historic - Response Model"
        "400":
          description: "Bad Request"
          schema:
            $ref: "#/definitions/HTTP Status 400 Error Object"
        "401":
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/HTTP Status 401 Error Object"
        "403":
          description: "Forbidden"
          schema:
            $ref: "#/definitions/HTTP Status 403 Error Object"
        "429":
          description: "Too Many Requests"
          schema:
            $ref: "#/definitions/HTTP Status 429 Error Object"
        "500":
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/HTTP Status 500 Error Object"
  /v1/global-metrics/quotes/latest:
    get:
      tags:
      - "global-metrics"
      summary: "Quotes Latest"
      description: "Returns the latest global cryptocurrency market metrics. Use the\
        \ \"convert\" option to return market values in multiple fiat and cryptocurrency\
        \ conversions in the same call.\n\n**This endpoint is available on the following\
        \ <a href=\"https://coinmarketcap.com/api/features\" target=\"_blank\">API\
        \ plans</a>:**\n- Basic\n- Hobbyist\n- Startup\n- Standard\n- Professional\n\
        - Enterprise\n\n**Cache / Update frequency:** Every 5 minute.   \n**Plan credit\
        \ use:** 1 call credit per call and 1 call credit per `convert` option beyond\
        \ the first.   \n**CMC equivalent pages:** The latest aggregate global market\
        \ stats ticker across all CMC pages like [coinmarketcap.com](https://coinmarketcap.com/).\
        \  "
      operationId: "getV1GlobalmetricsQuotesLatest"
      parameters:
      - name: "convert"
        in: "query"
        description: "Optionally calculate market quotes in up to 120 currencies at\
          \ once by passing a comma-separated list of cryptocurrency or fiat currency\
          \ symbols. Each additional convert option beyond the first requires an additional\
          \ call credit. A list of supported fiat options can be found [here](#section/Standards-and-Conventions).\
          \ Each conversion is returned in its own \"quote\" object."
        required: false
        type: "string"
        pattern: "^[0-9A-Za-z$@\\-,]+(?:,[0-9A-Za-z$@\\-]+)*$"
        x-exportParamName: "Convert"
        x-optionalDataType: "String"
      - name: "convert_id"
        in: "query"
        description: "Optionally calculate market quotes by CoinMarketCap ID instead\
          \ of symbol. This option is identical to `convert` outside of ID format.\
          \ Ex: convert_id=1,2781 would replace convert=BTC,USD in your query. This\
          \ parameter cannot be used when `convert` is used."
        required: false
        type: "string"
        pattern: "^\\d+(?:,\\d+)*$"
        x-exportParamName: "ConvertId"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Successful"
          schema:
            $ref: "#/definitions/Global Metrics Quotes Latest - Response Model"
        "400":
          description: "Bad Request"
          schema:
            $ref: "#/definitions/HTTP Status 400 Error Object"
        "401":
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/HTTP Status 401 Error Object"
        "403":
          description: "Forbidden"
          schema:
            $ref: "#/definitions/HTTP Status 403 Error Object"
        "429":
          description: "Too Many Requests"
          schema:
            $ref: "#/definitions/HTTP Status 429 Error Object"
        "500":
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/HTTP Status 500 Error Object"
  /v2/cryptocurrency/market-pairs/latest:
    get:
      tags:
      - "cryptocurrency"
      summary: "Market Pairs Latest v2"
      description: "Lists all active market pairs that CoinMarketCap tracks for a\
        \ given cryptocurrency or fiat currency. All markets with this currency as\
        \ the pair base *or* pair quote will be returned. The latest price and volume\
        \ information is returned for each market. Use the \"convert\" option to return\
        \ market values in multiple fiat and cryptocurrency conversions in the same\
        \ call.\n\n\n**Please note**: This documentation relates to our updated V2\
        \ endpoint, which may be incompatible with our V1 versions. Documentation\
        \ for deprecated endpoints can be found <a href=\"#tag/deprecated\">here</a>.<br><br>\n\
        \  **This endpoint is available on the following <a href=\"https://coinmarketcap.com/api/features\"\
        \ target=\"_blank\">API plans</a>:**\n  - ~~Basic~~\n  - ~~Hobbyist~~\n  -\
        \ ~~Startup~~\n  - Standard\n  - Professional\n  - Enterprise\n\n**Cache /\
        \ Update frequency:** Every 1 minute.  \n**Plan credit use:** 1 call credit\
        \ per 100 market pairs returned (rounded up) and 1 call credit per `convert`\
        \ option beyond the first.  \n**CMC equivalent pages:** Our active cryptocurrency\
        \ markets pages like [coinmarketcap.com/currencies/bitcoin/#markets](https://coinmarketcap.com/currencies/bitcoin/#markets).\
        \  "
      operationId: "getV2CryptocurrencyMarketpairsLatest"
      parameters:
      - name: "id"
        in: "query"
        description: "A cryptocurrency or fiat currency by CoinMarketCap ID to list\
          \ market pairs for. Example: \"1\""
        required: false
        type: "string"
        x-exportParamName: "Id"
        x-optionalDataType: "String"
      - name: "slug"
        in: "query"
        description: "Alternatively pass a cryptocurrency by slug. Example: \"bitcoin\""
        required: false
        type: "string"
        pattern: "^[0-9a-z-]*$"
        x-convert:
          lowercase: true
        x-exportParamName: "Slug"
        x-optionalDataType: "String"
      - name: "symbol"
        in: "query"
        description: "Alternatively pass a cryptocurrency by symbol. Fiat currencies\
          \ are not supported by this field. Example: \"BTC\". A single cryptocurrency\
          \ \"id\", \"slug\", *or* \"symbol\" is required."
        required: false
        type: "string"
        pattern: "^[0-9A-Za-z$@\\-]*$"
        x-exportParamName: "Symbol"
        x-optionalDataType: "String"
      - name: "start"
        in: "query"
        description: "Optionally offset the start (1-based index) of the paginated\
          \ list of items to return."
        required: false
        type: "integer"
        default: 1
        minimum: 1
        x-exportParamName: "Start"
        x-optionalDataType: "Int32"
      - name: "limit"
        in: "query"
        description: "Optionally specify the number of results to return. Use this\
          \ parameter and the \"start\" parameter to determine your own pagination\
          \ size."
        required: false
        type: "integer"
        default: 100
        maximum: 5000
        minimum: 1
        x-exportParamName: "Limit"
        x-optionalDataType: "Int32"
      - name: "sort_dir"
        in: "query"
        description: "Optionally specify the sort direction of markets returned."
        required: false
        type: "string"
        default: "desc"
        enum:
        - "asc"
        - "desc"
        x-exportParamName: "SortDir"
        x-optionalDataType: "String"
      - name: "sort"
        in: "query"
        description: "Optionally specify the sort order of markets returned. By default\
          \ we return a strict sort on 24 hour reported volume. Pass `cmc_rank` to\
          \ return a CMC methodology based sort where markets with excluded volumes\
          \ are returned last."
        required: false
        type: "string"
        default: "volume_24h_strict"
        enum:
        - "volume_24h_strict"
        - "cmc_rank"
        - "cmc_rank_advanced"
        - "effective_liquidity"
        - "market_score"
        - "market_reputation"
        x-exportParamName: "Sort"
        x-optionalDataType: "String"
      - name: "aux"
        in: "query"
        description: "Optionally specify a comma-separated list of supplemental data\
          \ fields to return. Pass `num_market_pairs,category,fee_type,market_url,currency_name,currency_slug,price_quote,notice,cmc_rank,effective_liquidity,market_score,market_reputation`\
          \ to include all auxiliary fields."
        required: false
        type: "string"
        default: "num_market_pairs,category,fee_type"
        pattern: "^(num_market_pairs|category|fee_type|market_url|currency_name|currency_slug|price_quote|notice|cmc_rank|effective_liquidity|market_score|market_reputation)+(?:,(num_market_pairs|category|fee_type|market_url|currency_name|currency_slug|price_quote|notice|cmc_rank|effective_liquidity|market_score|market_reputation)+)*$"
        x-exportParamName: "Aux"
        x-optionalDataType: "String"
      - name: "matched_id"
        in: "query"
        description: "Optionally include one or more fiat or cryptocurrency IDs to\
          \ filter market pairs by. For example `?id=1&matched_id=2781` would only\
          \ return BTC markets that matched: \"BTC/USD\" or \"USD/BTC\". This parameter\
          \ cannot be used when `matched_symbol` is used."
        required: false
        type: "string"
        pattern: "^\\d+(?:,\\d+)*$"
        x-exportParamName: "MatchedId"
        x-optionalDataType: "String"
      - name: "matched_symbol"
        in: "query"
        description: "Optionally include one or more fiat or cryptocurrency symbols\
          \ to filter market pairs by. For example `?symbol=BTC&matched_symbol=USD`\
          \ would only return BTC markets that matched: \"BTC/USD\" or \"USD/BTC\"\
          . This parameter cannot be used when `matched_id` is used."
        required: false
        type: "string"
        pattern: "^[0-9A-Za-z$@\\-,]+(?:,[0-9A-Za-z$@\\-]+)*$"
        x-exportParamName: "MatchedSymbol"
        x-optionalDataType: "String"
      - name: "category"
        in: "query"
        description: "The category of trading this market falls under. Spot markets\
          \ are the most common but options include derivatives and OTC."
        required: false
        type: "string"
        default: "all"
        enum:
        - "all"
        - "spot"
        - "derivatives"
        - "otc"
        - "perpetual"
        x-exportParamName: "Category"
        x-optionalDataType: "String"
      - name: "fee_type"
        in: "query"
        description: "The fee type the exchange enforces for this market."
        required: false
        type: "string"
        default: "all"
        enum:
        - "all"
        - "percentage"
        - "no-fees"
        - "transactional-mining"
        - "unknown"
        x-exportParamName: "FeeType"
        x-optionalDataType: "String"
      - name: "convert"
        in: "query"
        description: "Optionally calculate market quotes in up to 120 currencies at\
          \ once by passing a comma-separated list of cryptocurrency or fiat currency\
          \ symbols. Each additional convert option beyond the first requires an additional\
          \ call credit. A list of supported fiat options can be found [here](#section/Standards-and-Conventions).\
          \ Each conversion is returned in its own \"quote\" object."
        required: false
        type: "string"
        pattern: "^[0-9A-Za-z$@\\-,]+(?:,[0-9A-Za-z$@\\-]+)*$"
        x-exportParamName: "Convert"
        x-optionalDataType: "String"
      - name: "convert_id"
        in: "query"
        description: "Optionally calculate market quotes by CoinMarketCap ID instead\
          \ of symbol. This option is identical to `convert` outside of ID format.\
          \ Ex: convert_id=1,2781 would replace convert=BTC,USD in your query. This\
          \ parameter cannot be used when `convert` is used."
        required: false
        type: "string"
        pattern: "^\\d+(?:,\\d+)*$"
        x-exportParamName: "ConvertId"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Successful"
          schema:
            $ref: "#/definitions/Cryptocurrency Market Pairs Latest - Response Model"
        "400":
          description: "Bad Request"
          schema:
            $ref: "#/definitions/HTTP Status 400 Error Object"
        "401":
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/HTTP Status 401 Error Object"
        "403":
          description: "Forbidden"
          schema:
            $ref: "#/definitions/HTTP Status 403 Error Object"
        "429":
          description: "Too Many Requests"
          schema:
            $ref: "#/definitions/HTTP Status 429 Error Object"
        "500":
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/HTTP Status 500 Error Object"
  /v2/cryptocurrency/ohlcv/historical:
    get:
      tags:
      - "cryptocurrency"
      summary: "OHLCV Historical v2"
      description: "Returns historical OHLCV (Open, High, Low, Close, Volume) data\
        \ along with market cap for any cryptocurrency using time interval parameters.\
        \ Currently daily and hourly OHLCV periods are supported. Volume is not currently\
        \ supported for hourly OHLCV intervals before 2020-09-22.\n\n**Please note**:\
        \ This documentation relates to our updated V2 endpoint, which may be incompatible\
        \ with our V1 versions. Documentation for deprecated endpoints can be found\
        \ <a href=\"#tag/deprecated\">here</a>.<br><br>  \n**Technical Notes**\n-\
        \ Only the date portion of the timestamp is used for daily OHLCV so it's recommended\
        \ to send an ISO date format like \"2018-09-19\" without time for this \"\
        time_period\". \n- One OHLCV quote will be returned for every \"time_period\"\
        \ between your \"time_start\" (exclusive) and \"time_end\" (inclusive).  \n\
        - If a \"time_start\" is not supplied, the \"time_period\" will be calculated\
        \ in reverse from \"time_end\" using the \"count\" parameter which defaults\
        \ to 10 results.  \n- If \"time_end\" is not supplied, it defaults to the\
        \ current time.   \n- If you don't need every \"time_period\" between your\
        \ dates you may adjust the frequency that \"time_period\" is sampled using\
        \ the \"interval\" parameter. For example with \"time_period\" set to \"daily\"\
        \ you may set \"interval\" to \"2d\" to get the daily OHLCV for every other\
        \ day. You could set \"interval\" to \"monthly\" to get the first daily OHLCV\
        \ for each month, or set it to \"yearly\" to get the daily OHLCV value against\
        \ the same date every year.  \n\n**Implementation Tips**\n- If querying for\
        \ a specific OHLCV date your \"time_start\" should specify a timestamp of\
        \ 1 interval prior as \"time_start\" is an exclusive time parameter (as opposed\
        \ to \"time_end\" which is inclusive to the search). This means that when\
        \ you pass a \"time_start\" results will be returned for the *next* complete\
        \ \"time_period\". For example, if you are querying for a daily OHLCV datapoint\
        \ for 2018-11-30 your \"time_start\" should be \"2018-11-29\".   \n- If only\
        \ specifying a \"count\" parameter to return latest OHLCV periods, your \"\
        count\" should be 1 number higher than the number of results you expect to\
        \ receive. \"Count\" defines the number of \"time_period\" intervals queried,\
        \ *not* the number of results to return, and this includes the currently active\
        \ time period which is incomplete when working backwards from current time.\
        \ For example, if you want the last daily OHLCV value available simply pass\
        \ \"count=2\" to skip the incomplete active time period.\n- This endpoint\
        \ supports requesting multiple cryptocurrencies in the same call. Please note\
        \ the API response will be wrapped in an additional object in this case. \
        \ \n  \n**Interval Options**  \n  \nThere are 2 types of time interval formats\
        \ that may be used for \"time_period\" and \"interval\" parameters. For \"\
        time_period\" these return aggregate OHLCV data from the beginning to end\
        \ of each interval period. Apply these time intervals to \"interval\" to adjust\
        \ how frequently \"time_period\" is sampled.  \n  \nThe first are calendar\
        \ year and time constants in UTC time:  \n**\"hourly\"** - Hour intervals\
        \ in UTC.  \n**\"daily\"** - Calendar day intervals for each UTC day.  \n\
        **\"weekly\"** - Calendar week intervals for each calendar week.  \n**\"monthly\"\
        ** - Calendar month intervals for each calendar month.    \n**\"yearly\"**\
        \ - Calendar year intervals for each calendar year.  \n  \nThe second are\
        \ relative time intervals.  \n**\"h\"**: Get the first quote available every\
        \ \"h\" hours (3600 second intervals). Supported hour intervals are: \"1h\"\
        , \"2h\", \"3h\", \"4h\", \"6h\", \"12h\".  \n**\"d\"**: Time periods that\
        \ repeat every \"d\" days (86400 second intervals). Supported day intervals\
        \ are: \"1d\", \"2d\", \"3d\", \"7d\", \"14d\", \"15d\", \"30d\", \"60d\"\
        , \"90d\", \"365d\".  \n  \nPlease note that \"time_period\" currently supports\
        \ the \"daily\" and \"hourly\" options. \"interval\" supports all interval\
        \ options.  \n  \n**This endpoint is available on the following <a href=\"\
        https://coinmarketcap.com/api/features\" target=\"_blank\">API plans</a>:**\
        \  \n- ~~Basic~~\n- ~~Hobbyist~~\n- Startup (1 month)\n- Standard (3 months)\n\
        - Professional (12 months)\n- Enterprise (Up to 6 years)\n\n**Cache / Update\
        \ frequency:** Latest Daily OHLCV record is available ~5 to ~10 minutes after\
        \ each midnight UTC. The latest hourly OHLCV record is available 5 minutes\
        \ after each UTC hour.  \n**Plan credit use:** 1 call credit per 100 OHLCV\
        \ data points returned (rounded up) and 1 call credit per `convert` option\
        \ beyond the first.  \n**CMC equivalent pages:** Our historical cryptocurrency\
        \ data pages like [coinmarketcap.com/currencies/bitcoin/historical-data/](https://coinmarketcap.com/currencies/bitcoin/historical-data/)."
      operationId: "getV2CryptocurrencyOhlcvHistorical"
      parameters:
      - name: "id"
        in: "query"
        description: "One or more comma-separated CoinMarketCap cryptocurrency IDs.\
          \ Example: \"1,1027\""
        required: false
        type: "string"
        pattern: "^\\d+(?:,\\d+)*$"
        x-exportParamName: "Id"
        x-optionalDataType: "String"
      - name: "slug"
        in: "query"
        description: "Alternatively pass a comma-separated list of cryptocurrency\
          \ slugs. Example: \"bitcoin,ethereum\""
        required: false
        type: "string"
        pattern: "^[0-9a-z-]+(?:,[0-9a-z-]+)*$"
        x-convert:
          lowercase: true
        x-exportParamName: "Slug"
        x-optionalDataType: "String"
      - name: "symbol"
        in: "query"
        description: "Alternatively pass one or more comma-separated cryptocurrency\
          \ symbols. Example: \"BTC,ETH\". At least one \"id\" *or* \"slug\" *or*\
          \ \"symbol\" is required for this request."
        required: false
        type: "string"
        pattern: "^[0-9A-Za-z$@\\-,]+(?:,[0-9A-Za-z$@\\-]+)*$"
        x-exportParamName: "Symbol"
        x-optionalDataType: "String"
      - name: "time_period"
        in: "query"
        description: "Time period to return OHLCV data for. The default is \"daily\"\
          . See the main endpoint description for details."
        required: false
        type: "string"
        default: "daily"
        enum:
        - "daily"
        - "hourly"
        x-exportParamName: "TimePeriod"
        x-optionalDataType: "String"
      - name: "time_start"
        in: "query"
        description: "Timestamp (Unix or ISO 8601) to start returning OHLCV time periods\
          \ for. Only the date portion of the timestamp is used for daily OHLCV so\
          \ it's recommended to send an ISO date format like \"2018-09-19\" without\
          \ time."
        required: false
        type: "string"
        x-exportParamName: "TimeStart"
        x-optionalDataType: "String"
      - name: "time_end"
        in: "query"
        description: "Timestamp (Unix or ISO 8601) to stop returning OHLCV time periods\
          \ for (inclusive). Optional, if not passed we'll default to the current\
          \ time. Only the date portion of the timestamp is used for daily OHLCV so\
          \ it's recommended to send an ISO date format like \"2018-09-19\" without\
          \ time."
        required: false
        type: "string"
        x-exportParamName: "TimeEnd"
        x-optionalDataType: "String"
      - name: "count"
        in: "query"
        description: "Optionally limit the number of time periods to return results\
          \ for. The default is 10 items. The current query limit is 10000 items."
        required: false
        type: "number"
        default: 10.0
        maximum: 10000
        minimum: 1
        x-exportParamName: "Count"
        x-optionalDataType: "Float32"
      - name: "interval"
        in: "query"
        description: "Optionally adjust the interval that \"time_period\" is sampled.\
          \ See main endpoint description for available options."
        required: false
        type: "string"
        default: "daily"
        enum:
        - "hourly"
        - "daily"
        - "weekly"
        - "monthly"
        - "yearly"
        - "1h"
        - "2h"
        - "3h"
        - "4h"
        - "6h"
        - "12h"
        - "1d"
        - "2d"
        - "3d"
        - "7d"
        - "14d"
        - "15d"
        - "30d"
        - "60d"
        - "90d"
        - "365d"
        x-exportParamName: "Interval"
        x-optionalDataType: "String"
      - name: "convert"
        in: "query"
        description: "By default market quotes are returned in USD. Optionally calculate\
          \ market quotes in up to 3 fiat currencies or cryptocurrencies."
        required: false
        type: "string"
        pattern: "^[0-9A-Za-z$@\\-,]+(?:,[0-9A-Za-z$@\\-]+)*$"
        x-exportParamName: "Convert"
        x-optionalDataType: "String"
      - name: "convert_id"
        in: "query"
        description: "Optionally calculate market quotes by CoinMarketCap ID instead\
          \ of symbol. This option is identical to `convert` outside of ID format.\
          \ Ex: convert_id=1,2781 would replace convert=BTC,USD in your query. This\
          \ parameter cannot be used when `convert` is used."
        required: false
        type: "string"
        pattern: "^\\d+(?:,\\d+)*$"
        x-exportParamName: "ConvertId"
        x-optionalDataType: "String"
      - name: "skip_invalid"
        in: "query"
        description: "Pass `true` to relax request validation rules. When requesting\
          \ records on multiple cryptocurrencies an error is returned if any invalid\
          \ cryptocurrencies are requested or a cryptocurrency does not have matching\
          \ records in the requested timeframe. If set to true, invalid lookups will\
          \ be skipped allowing valid cryptocurrencies to still be returned."
        required: false
        type: "boolean"
        default: true
        x-exportParamName: "SkipInvalid"
        x-optionalDataType: "Bool"
      responses:
        "200":
          description: "Successful"
          schema:
            $ref: "#/definitions/Cryptocurrency OHLCV Historical - Response Model"
        "400":
          description: "Bad Request"
          schema:
            $ref: "#/definitions/HTTP Status 400 Error Object"
        "401":
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/HTTP Status 401 Error Object"
        "403":
          description: "Forbidden"
          schema:
            $ref: "#/definitions/HTTP Status 403 Error Object"
        "429":
          description: "Too Many Requests"
          schema:
            $ref: "#/definitions/HTTP Status 429 Error Object"
        "500":
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/HTTP Status 500 Error Object"
  /v2/cryptocurrency/ohlcv/latest:
    get:
      tags:
      - "cryptocurrency"
      summary: "OHLCV Latest v2"
      description: "Returns the latest OHLCV (Open, High, Low, Close, Volume) market\
        \ values for one or more cryptocurrencies for the current UTC day. Since the\
        \ current UTC day is still active these values are updated frequently. You\
        \ can find the final calculated OHLCV values for the last completed UTC day\
        \ along with all historic days using /cryptocurrency/ohlcv/historical. \n\n\
        **Please note**: This documentation relates to our updated V2 endpoint, which\
        \ may be incompatible with our V1 versions. Documentation for deprecated endpoints\
        \ can be found <a href=\"#tag/deprecated\">here</a>.<br><br>\n  **This endpoint\
        \ is available on the following <a href=\"https://coinmarketcap.com/api/features\"\
        \ target=\"_blank\">API plans</a>:**\n  - ~~Basic~~\n  - ~~Hobbyist~~\n  -\
        \ Startup\n  - Standard\n  - Professional\n  - Enterprise\n\n  **Cache / Update\
        \ frequency:** Every 10 minutes. Additional OHLCV intervals and 1 minute updates\
        \ will be available in the future.  \n  **Plan credit use:** 1 call credit\
        \ per 100 OHLCV values returned (rounded up) and 1 call credit per `convert`\
        \ option beyond the first.  \n  **CMC equivalent pages:** No equivalent, this\
        \ data is only available via API."
      operationId: "getV2CryptocurrencyOhlcvLatest"
      parameters:
      - name: "id"
        in: "query"
        description: "One or more comma-separated cryptocurrency CoinMarketCap IDs.\
          \ Example: 1,2"
        required: false
        type: "string"
        pattern: "^\\d+(?:,\\d+)*$"
        x-exportParamName: "Id"
        x-optionalDataType: "String"
      - name: "symbol"
        in: "query"
        description: "Alternatively pass one or more comma-separated cryptocurrency\
          \ symbols. Example: \"BTC,ETH\". At least one \"id\" *or* \"symbol\" is\
          \ required."
        required: false
        type: "string"
        pattern: "^[0-9A-Za-z$@\\-,]+(?:,[0-9A-Za-z$@\\-]+)*$"
        x-exportParamName: "Symbol"
        x-optionalDataType: "String"
      - name: "convert"
        in: "query"
        description: "Optionally calculate market quotes in up to 120 currencies at\
          \ once by passing a comma-separated list of cryptocurrency or fiat currency\
          \ symbols. Each additional convert option beyond the first requires an additional\
          \ call credit. A list of supported fiat options can be found [here](#section/Standards-and-Conventions).\
          \ Each conversion is returned in its own \"quote\" object."
        required: false
        type: "string"
        pattern: "^[0-9A-Za-z$@\\-,]+(?:,[0-9A-Za-z$@\\-]+)*$"
        x-exportParamName: "Convert"
        x-optionalDataType: "String"
      - name: "convert_id"
        in: "query"
        description: "Optionally calculate market quotes by CoinMarketCap ID instead\
          \ of symbol. This option is identical to `convert` outside of ID format.\
          \ Ex: convert_id=1,2781 would replace convert=BTC,USD in your query. This\
          \ parameter cannot be used when `convert` is used."
        required: false
        type: "string"
        pattern: "^\\d+(?:,\\d+)*$"
        x-exportParamName: "ConvertId"
        x-optionalDataType: "String"
      - name: "skip_invalid"
        in: "query"
        description: "Pass `true` to relax request validation rules. When requesting\
          \ records on multiple cryptocurrencies an error is returned if any invalid\
          \ cryptocurrencies are requested or a cryptocurrency does not have matching\
          \ records in the requested timeframe. If set to true, invalid lookups will\
          \ be skipped allowing valid cryptocurrencies to still be returned."
        required: false
        type: "boolean"
        default: true
        x-exportParamName: "SkipInvalid"
        x-optionalDataType: "Bool"
      responses:
        "200":
          description: "Successful"
          schema:
            $ref: "#/definitions/Cryptocurrency OHLCV Latest - Response Model"
        "400":
          description: "Bad Request"
          schema:
            $ref: "#/definitions/HTTP Status 400 Error Object"
        "401":
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/HTTP Status 401 Error Object"
        "403":
          description: "Forbidden"
          schema:
            $ref: "#/definitions/HTTP Status 403 Error Object"
        "429":
          description: "Too Many Requests"
          schema:
            $ref: "#/definitions/HTTP Status 429 Error Object"
        "500":
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/HTTP Status 500 Error Object"
  /v2/cryptocurrency/price-performance-stats/latest:
    get:
      tags:
      - "cryptocurrency"
      summary: "Price Performance Stats v2"
      description: "Returns price performance statistics for one or more cryptocurrencies\
        \ including launch price ROI and all-time high / all-time low. Stats are returned\
        \ for an `all_time` period by default. UTC `yesterday` and a number of *rolling\
        \ time periods* may be requested using the `time_period` parameter. Utilize\
        \ the `convert` parameter to translate values into multiple fiats or cryptocurrencies\
        \ using historical rates.\n\n\n**Please note**: This documentation relates\
        \ to our updated V2 endpoint, which may be incompatible with our V1 versions.\
        \ Documentation for deprecated endpoints can be found <a href=\"#tag/deprecated\"\
        >here</a>.<br><br>\n  **This endpoint is available on the following <a href=\"\
        https://coinmarketcap.com/api/features\" target=\"_blank\">API plans</a>:**\n\
        \  - ~~Basic~~\n  - ~~Hobbyist~~\n  - Startup\n  - Standard\n  - Professional\n\
        \  - Enterprise\n\n**Cache / Update frequency:** Every 60 seconds.  \n**Plan\
        \ credit use:** 1 call credit per 100 cryptocurrencies returned (rounded up)\
        \ and 1 call credit per `convert` option beyond the first.  \n**CMC equivalent\
        \ pages:** The statistics module displayed on cryptocurrency pages like [Bitcoin](https://coinmarketcap.com/currencies/bitcoin/).\
        \     \n  \n***NOTE:** You may also use [/cryptocurrency/ohlcv/historical](#operation/getV1CryptocurrencyOhlcvHistorical)\
        \ for traditional OHLCV data at historical daily and hourly intervals. You\
        \ may also use [/v1/cryptocurrency/ohlcv/latest](#operation/getV1CryptocurrencyOhlcvLatest)\
        \ for OHLCV data for the current UTC day.* "
      operationId: "getV2CryptocurrencyPriceperformancestatsLatest"
      parameters:
      - name: "id"
        in: "query"
        description: "One or more comma-separated cryptocurrency CoinMarketCap IDs.\
          \ Example: 1,2"
        required: false
        type: "string"
        pattern: "^\\d+(?:,\\d+)*$"
        x-exportParamName: "Id"
        x-optionalDataType: "String"
      - name: "slug"
        in: "query"
        description: "Alternatively pass a comma-separated list of cryptocurrency\
          \ slugs. Example: \"bitcoin,ethereum\""
        required: false
        type: "string"
        pattern: "^[0-9a-z-]+(?:,[0-9a-z-]+)*$"
        x-convert:
          lowercase: true
        x-exportParamName: "Slug"
        x-optionalDataType: "String"
      - name: "symbol"
        in: "query"
        description: "Alternatively pass one or more comma-separated cryptocurrency\
          \ symbols. Example: \"BTC,ETH\". At least one \"id\" *or* \"slug\" *or*\
          \ \"symbol\" is required for this request."
        required: false
        type: "string"
        pattern: "^[0-9A-Za-z$@\\-,]+(?:,[0-9A-Za-z$@\\-]+)*$"
        x-exportParamName: "Symbol"
        x-optionalDataType: "String"
      - name: "time_period"
        in: "query"
        description: "Specify one or more comma-delimited time periods to return stats\
          \ for. `all_time` is the default. Pass `all_time,yesterday,24h,7d,30d,90d,365d`\
          \ to return all supported time periods. All rolling periods have a rolling\
          \ close time of the current request time. For example `24h` would have a\
          \ close time of now and an open time of 24 hours before now. *Please note:\
          \ `yesterday` is a UTC period and currently does not currently support `high`\
          \ and `low` timestamps.*"
        required: false
        type: "string"
        default: "all_time"
        pattern: "^(all_time|yesterday|24h|7d|30d|90d|365d)+(?:,(all_time|yesterday|24h|7d|30d|90d|365d)+)*$"
        x-exportParamName: "TimePeriod"
        x-optionalDataType: "String"
      - name: "convert"
        in: "query"
        description: "Optionally calculate quotes in up to 120 currencies at once\
          \ by passing a comma-separated list of cryptocurrency or fiat currency symbols.\
          \ Each additional convert option beyond the first requires an additional\
          \ call credit. A list of supported fiat options can be found [here](#section/Standards-and-Conventions).\
          \ Each conversion is returned in its own \"quote\" object."
        required: false
        type: "string"
        pattern: "^[0-9A-Za-z$@\\-,]+(?:,[0-9A-Za-z$@\\-]+)*$"
        x-exportParamName: "Convert"
        x-optionalDataType: "String"
      - name: "convert_id"
        in: "query"
        description: "Optionally calculate quotes by CoinMarketCap ID instead of symbol.\
          \ This option is identical to `convert` outside of ID format. Ex: convert_id=1,2781\
          \ would replace convert=BTC,USD in your query. This parameter cannot be\
          \ used when `convert` is used."
        required: false
        type: "string"
        pattern: "^\\d+(?:,\\d+)*$"
        x-exportParamName: "ConvertId"
        x-optionalDataType: "String"
      - name: "skip_invalid"
        in: "query"
        description: "Pass `true` to relax request validation rules. When requesting\
          \ records on multiple cryptocurrencies an error is returned if no match\
          \ is found for 1 or more requested cryptocurrencies. If set to true, invalid\
          \ lookups will be skipped allowing valid cryptocurrencies to still be returned."
        required: false
        type: "boolean"
        default: true
        x-exportParamName: "SkipInvalid"
        x-optionalDataType: "Bool"
      responses:
        "200":
          description: "Successful"
          schema:
            $ref: "#/definitions/Cryptocurrency Price Performance Stats Latest - Response\
              \ Model"
        "400":
          description: "Bad Request"
          schema:
            $ref: "#/definitions/HTTP Status 400 Error Object"
        "401":
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/HTTP Status 401 Error Object"
        "403":
          description: "Forbidden"
          schema:
            $ref: "#/definitions/HTTP Status 403 Error Object"
        "429":
          description: "Too Many Requests"
          schema:
            $ref: "#/definitions/HTTP Status 429 Error Object"
        "500":
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/HTTP Status 500 Error Object"
  /v2/cryptocurrency/quotes/historical:
    get:
      tags:
      - "cryptocurrency"
      summary: "Quotes Historical v2"
      description: "Returns an interval of historic market quotes for any cryptocurrency\
        \ based on time and interval parameters.\n\n**Please note**: This documentation\
        \ relates to our updated V2 endpoint, which may be incompatible with our V1\
        \ versions. Documentation for deprecated endpoints can be found <a href=\"\
        #tag/deprecated\">here</a>.<br><br>\n**Technical Notes**  \n- A historic quote\
        \ for every \"interval\" period between your \"time_start\" and \"time_end\"\
        \ will be returned.  \n- If a \"time_start\" is not supplied, the \"interval\"\
        \ will be applied in reverse from \"time_end\".  \n- If \"time_end\" is not\
        \ supplied, it defaults to the current time.  \n- At each \"interval\" period,\
        \ the historic quote that is closest in time to the requested time will be\
        \ returned.  \n- If no historic quotes are available in a given \"interval\"\
        \ period up until the next interval period, it will be skipped.  \n\n**Implementation\
        \ Tips**\n- Want to get the last quote of each UTC day? Don't use \"interval=daily\"\
        \ as that returns the first quote. Instead use \"interval=24h\" to repeat\
        \ a specific timestamp search every 24 hours and pass ex. \"time_start=2019-01-04T23:59:00.000Z\"\
        \ to query for the last record of each UTC day.\n- This endpoint supports\
        \ requesting multiple cryptocurrencies in the same call. Please note the API\
        \ response will be wrapped in an additional object in this case.  \n  \n**Interval\
        \ Options**  \nThere are 2 types of time interval formats that may be used\
        \ for \"interval\".\n\nThe first are calendar year and time constants in UTC\
        \ time:  \n**\"hourly\"** - Get the first quote available at the beginning\
        \ of each calendar hour.  \n**\"daily\"** - Get the first quote available\
        \ at the beginning of each calendar day.  \n**\"weekly\"** - Get the first\
        \ quote available at the beginning of each calendar week.  \n**\"monthly\"\
        ** - Get the first quote available at the beginning of each calendar month.\
        \  \n**\"yearly\"** - Get the first quote available at the beginning of each\
        \ calendar year.  \n\nThe second are relative time intervals.  \n**\"m\"**:\
        \ Get the first quote available every \"m\" minutes (60 second intervals).\
        \ Supported minutes are: \"5m\", \"10m\", \"15m\", \"30m\", \"45m\".  \n**\"\
        h\"**: Get the first quote available every \"h\" hours (3600 second intervals).\
        \ Supported hour intervals are: \"1h\", \"2h\", \"3h\", \"4h\", \"6h\", \"\
        12h\".  \n**\"d\"**: Get the first quote available every \"d\" days (86400\
        \ second intervals). Supported day intervals are: \"1d\", \"2d\", \"3d\",\
        \ \"7d\", \"14d\", \"15d\", \"30d\", \"60d\", \"90d\", \"365d\".  \n\n**This\
        \ endpoint is available on the following <a href=\"https://coinmarketcap.com/api/features\"\
        \ target=\"_blank\">API plans</a>:**\n- ~~Basic~~\n- ~~Hobbyist~~\n- ~~Startup~~\n\
        - Standard (3 month)\n- Professional (12 months)\n- Enterprise (Up to 6 years)\n\
        \n**Cache / Update frequency:** Every 5 minutes.    \n**Plan credit use:**\
        \ 1 call credit per 100 historical data points returned (rounded up) and 1\
        \ call credit per `convert` option beyond the first.  \n**CMC equivalent pages:**\
        \ Our historical cryptocurrency charts like [coinmarketcap.com/currencies/bitcoin/#charts](https://coinmarketcap.com/currencies/bitcoin/#charts).\
        \  "
      operationId: "getV2CryptocurrencyQuotesHistorical"
      parameters:
      - name: "id"
        in: "query"
        description: "One or more comma-separated CoinMarketCap cryptocurrency IDs.\
          \ Example: \"1,2\""
        required: false
        type: "string"
        pattern: "^\\d+(?:,\\d+)*$"
        x-exportParamName: "Id"
        x-optionalDataType: "String"
      - name: "symbol"
        in: "query"
        description: "Alternatively pass one or more comma-separated cryptocurrency\
          \ symbols. Example: \"BTC,ETH\". At least one \"id\" *or* \"symbol\" is\
          \ required for this request."
        required: false
        type: "string"
        pattern: "^[0-9A-Za-z$@\\-,]+(?:,[0-9A-Za-z$@\\-]+)*$"
        x-exportParamName: "Symbol"
        x-optionalDataType: "String"
      - name: "time_start"
        in: "query"
        description: "Timestamp (Unix or ISO 8601) to start returning quotes for.\
          \ Optional, if not passed, we'll return quotes calculated in reverse from\
          \ \"time_end\"."
        required: false
        type: "string"
        x-exportParamName: "TimeStart"
        x-optionalDataType: "String"
      - name: "time_end"
        in: "query"
        description: "Timestamp (Unix or ISO 8601) to stop returning quotes for (inclusive).\
          \ Optional, if not passed, we'll default to the current time. If no \"time_start\"\
          \ is passed, we return quotes in reverse order starting from this time."
        required: false
        type: "string"
        x-exportParamName: "TimeEnd"
        x-optionalDataType: "String"
      - name: "count"
        in: "query"
        description: "The number of interval periods to return results for. Optional,\
          \ required if both \"time_start\" and \"time_end\" aren't supplied. The\
          \ default is 10 items. The current query limit is 10000."
        required: false
        type: "number"
        default: 10.0
        maximum: 10000
        minimum: 1
        x-exportParamName: "Count"
        x-optionalDataType: "Float32"
      - name: "interval"
        in: "query"
        description: "Interval of time to return data points for. See details in endpoint\
          \ description."
        required: false
        type: "string"
        default: "5m"
        enum:
        - "yearly"
        - "monthly"
        - "weekly"
        - "daily"
        - "hourly"
        - "5m"
        - "10m"
        - "15m"
        - "30m"
        - "45m"
        - "1h"
        - "2h"
        - "3h"
        - "4h"
        - "6h"
        - "12h"
        - "24h"
        - "1d"
        - "2d"
        - "3d"
        - "7d"
        - "14d"
        - "15d"
        - "30d"
        - "60d"
        - "90d"
        - "365d"
        x-exportParamName: "Interval"
        x-optionalDataType: "String"
      - name: "convert"
        in: "query"
        description: "By default market quotes are returned in USD. Optionally calculate\
          \ market quotes in up to 3 other fiat currencies or cryptocurrencies."
        required: false
        type: "string"
        pattern: "^[0-9A-Za-z$@\\-,]+(?:,[0-9A-Za-z$@\\-]+)*$"
        x-exportParamName: "Convert"
        x-optionalDataType: "String"
      - name: "convert_id"
        in: "query"
        description: "Optionally calculate market quotes by CoinMarketCap ID instead\
          \ of symbol. This option is identical to `convert` outside of ID format.\
          \ Ex: convert_id=1,2781 would replace convert=BTC,USD in your query. This\
          \ parameter cannot be used when `convert` is used."
        required: false
        type: "string"
        pattern: "(^\\d+(?:,\\d+)*$|(\\d,)*PLATFORM_ID+(?:,\\d+)*$)"
        x-exportParamName: "ConvertId"
        x-optionalDataType: "String"
      - name: "aux"
        in: "query"
        description: "Optionally specify a comma-separated list of supplemental data\
          \ fields to return. Pass `price,volume,market_cap,circulating_supply,total_supply,quote_timestamp,is_active,is_fiat,search_interval`\
          \ to include all auxiliary fields."
        required: false
        type: "string"
        default: "price,volume,market_cap,circulating_supply,total_supply,quote_timestamp,is_active,is_fiat"
        pattern: "^(price|volume|market_cap|circulating_supply|total_supply|quote_timestamp|is_active|is_fiat|search_interval)+(?:,(price|volume|market_cap|circulating_supply|total_supply|quote_timestamp|is_active|is_fiat|search_interval)+)*$"
        x-exportParamName: "Aux"
        x-optionalDataType: "String"
      - name: "skip_invalid"
        in: "query"
        description: "Pass `true` to relax request validation rules. When requesting\
          \ records on multiple cryptocurrencies an error is returned if no match\
          \ is found for 1 or more requested cryptocurrencies. If set to true, invalid\
          \ lookups will be skipped allowing valid cryptocurrencies to still be returned."
        required: false
        type: "boolean"
        default: true
        x-exportParamName: "SkipInvalid"
        x-optionalDataType: "Bool"
      responses:
        "200":
          description: "Successful"
          schema:
            $ref: "#/definitions/Cryptocurrency Quotes Historical - Response Model"
        "400":
          description: "Bad Request"
          schema:
            $ref: "#/definitions/HTTP Status 400 Error Object"
        "401":
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/HTTP Status 401 Error Object"
        "403":
          description: "Forbidden"
          schema:
            $ref: "#/definitions/HTTP Status 403 Error Object"
        "429":
          description: "Too Many Requests"
          schema:
            $ref: "#/definitions/HTTP Status 429 Error Object"
        "500":
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/HTTP Status 500 Error Object"
  /v2/cryptocurrency/quotes/latest:
    get:
      tags:
      - "cryptocurrency"
      summary: "Quotes Latest v2"
      description: "Returns the latest market quote for 1 or more cryptocurrencies.\
        \ Use the \"convert\" option to return market values in multiple fiat and\
        \ cryptocurrency conversions in the same call.\n\n**Please note**: This documentation\
        \ relates to our updated V2 endpoint, which may be incompatible with our V1\
        \ versions. Documentation for deprecated endpoints can be found <a href=\"\
        #tag/deprecated\">here</a>.<br><br>\n**This endpoint is available on the following\
        \ <a href=\"https://coinmarketcap.com/api/features\" target=\"_blank\">API\
        \ plans</a>:**\n- Basic\n- Startup\n- Hobbyist\n- Standard\n- Professional\n\
        - Enterprise\n\n**Cache / Update frequency:** Every 60 seconds.  \n**Plan\
        \ credit use:** 1 call credit per 100 cryptocurrencies returned (rounded up)\
        \ and 1 call credit per `convert` option beyond the first.  \n**CMC equivalent\
        \ pages:** Latest market data pages for specific cryptocurrencies like [coinmarketcap.com/currencies/bitcoin/](https://coinmarketcap.com/currencies/bitcoin/).\
        \  \n   \n***NOTE:** Use this endpoint to request the latest quote for specific\
        \ cryptocurrencies. If you need to request all cryptocurrencies use [/v1/cryptocurrency/listings/latest](#operation/getV1CryptocurrencyListingsLatest)\
        \ which is optimized for that purpose. The response data between these endpoints\
        \ is otherwise the same.*"
      operationId: "getV2CryptocurrencyQuotesLatest"
      parameters:
      - name: "id"
        in: "query"
        description: "One or more comma-separated cryptocurrency CoinMarketCap IDs.\
          \ Example: 1,2"
        required: false
        type: "string"
        pattern: "^\\d+(?:,\\d+)*$"
        x-exportParamName: "Id"
        x-optionalDataType: "String"
      - name: "slug"
        in: "query"
        description: "Alternatively pass a comma-separated list of cryptocurrency\
          \ slugs. Example: \"bitcoin,ethereum\""
        required: false
        type: "string"
        pattern: "^[0-9a-z-]+(?:,[0-9a-z-]+)*$"
        x-convert:
          lowercase: true
        x-exportParamName: "Slug"
        x-optionalDataType: "String"
      - name: "symbol"
        in: "query"
        description: "Alternatively pass one or more comma-separated cryptocurrency\
          \ symbols. Example: \"BTC,ETH\". At least one \"id\" *or* \"slug\" *or*\
          \ \"symbol\" is required for this request."
        required: false
        type: "string"
        pattern: "^[0-9A-Za-z$@\\-,]+(?:,[0-9A-Za-z$@\\-]+)*$"
        x-exportParamName: "Symbol"
        x-optionalDataType: "String"
      - name: "convert"
        in: "query"
        description: "Optionally calculate market quotes in up to 120 currencies at\
          \ once by passing a comma-separated list of cryptocurrency or fiat currency\
          \ symbols. Each additional convert option beyond the first requires an additional\
          \ call credit. A list of supported fiat options can be found [here](#section/Standards-and-Conventions).\
          \ Each conversion is returned in its own \"quote\" object."
        required: false
        type: "string"
        pattern: "^[0-9A-Za-z$@\\-,]+(?:,[0-9A-Za-z$@\\-]+)*$"
        x-exportParamName: "Convert"
        x-optionalDataType: "String"
      - name: "convert_id"
        in: "query"
        description: "Optionally calculate market quotes by CoinMarketCap ID instead\
          \ of symbol. This option is identical to `convert` outside of ID format.\
          \ Ex: convert_id=1,2781 would replace convert=BTC,USD in your query. This\
          \ parameter cannot be used when `convert` is used."
        required: false
        type: "string"
        pattern: "(^\\d+(?:,\\d+)*$|(\\d,)*PLATFORM_ID+(?:,\\d+)*$)"
        x-exportParamName: "ConvertId"
        x-optionalDataType: "String"
      - name: "aux"
        in: "query"
        description: "Optionally specify a comma-separated list of supplemental data\
          \ fields to return. Pass `num_market_pairs,cmc_rank,date_added,tags,platform,max_supply,circulating_supply,total_supply,market_cap_by_total_supply,volume_24h_reported,volume_7d,volume_7d_reported,volume_30d,volume_30d_reported,is_active,is_fiat`\
          \ to include all auxiliary fields."
        required: false
        type: "string"
        default: "num_market_pairs,cmc_rank,date_added,tags,platform,max_supply,circulating_supply,total_supply,is_active,is_fiat"
        pattern: "^(num_market_pairs|cmc_rank|date_added|tags|platform|max_supply|circulating_supply|total_supply|market_cap_by_total_supply|volume_24h_reported|volume_7d|volume_7d_reported|volume_30d|volume_30d_reported|is_active|is_fiat)+(?:,(num_market_pairs|cmc_rank|date_added|tags|platform|max_supply|circulating_supply|total_supply|market_cap_by_total_supply|volume_24h_reported|volume_7d|volume_7d_reported|volume_30d|volume_30d_reported|is_active|is_fiat)+)*$"
        x-exportParamName: "Aux"
        x-optionalDataType: "String"
      - name: "skip_invalid"
        in: "query"
        description: "Pass `true` to relax request validation rules. When requesting\
          \ records on multiple cryptocurrencies an error is returned if no match\
          \ is found for 1 or more requested cryptocurrencies. If set to true, invalid\
          \ lookups will be skipped allowing valid cryptocurrencies to still be returned."
        required: false
        type: "boolean"
        default: true
        x-exportParamName: "SkipInvalid"
        x-optionalDataType: "Bool"
      responses:
        "200":
          description: "Successful"
          schema:
            $ref: "#/definitions/Cryptocurrency Quotes Latest - Response Model"
        "400":
          description: "Bad Request"
          schema:
            $ref: "#/definitions/HTTP Status 400 Error Object"
        "401":
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/HTTP Status 401 Error Object"
        "403":
          description: "Forbidden"
          schema:
            $ref: "#/definitions/HTTP Status 403 Error Object"
        "429":
          description: "Too Many Requests"
          schema:
            $ref: "#/definitions/HTTP Status 429 Error Object"
        "500":
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/HTTP Status 500 Error Object"
  /v1/partners/flipside-crypto/fcas/listings/latest:
    get:
      tags:
      - "deprecated"
      summary: "FCAS Listings Latest (deprecated)"
      description: "Returns a paginated list of FCAS scores for all cryptocurrencies\
        \ currently supported by FCAS. FCAS ratings are on a 0-1000 point scale with\
        \ a corresponding letter grade and is updated once a day at UTC midnight.\
        \    \n\n\n   \nFCAS stands for Fundamental Crypto Asset Score, a single,\
        \ consistently comparable value for measuring cryptocurrency project health.\
        \ FCAS measures User Activity, Developer Behavior and Market Maturity and\
        \ is provided by <a rel=\"noopener noreferrer\" href=\"https://www.flipsidecrypto.com/\"\
        \ target=\"_blank\">FlipSide Crypto</a>. Find out more about <a rel=\"noopener\
        \ noreferrer\" href=\"https://www.flipsidecrypto.com/fcas-explained\" target=\"\
        _blank\">FCAS methodology</a>. Users interested in FCAS historical data including\
        \ sub-component scoring may inquire through our <a rel=\"noopener noreferrer\"\
        \ href=\"https://pro.coinmarketcap.com/contact-data/\" target=\"_blank\">CSV\
        \ Data Delivery</a> request form.  \n  \n*Disclaimer: Ratings that are calculated\
        \ by third party organizations and are not influenced or endorsed by CoinMarketCap\
        \ in any way.*  \n  \n  **This endpoint is available on the following <a href=\"\
        https://coinmarketcap.com/api/features\" target=\"_blank\">API plans</a>:**\n\
        \  - Basic\n  - Hobbyist\n  - Startup\n  - Standard\n  - Professional\n  -\
        \ Enterprise\n\n**Cache / Update frequency:** Once a day at UTC midnight.\
        \  \n**Plan credit use:** 1 call credit per 100 FCAS scores returned (rounded\
        \ up).  \n**CMC equivalent pages:** The FCAS ratings available under our cryptocurrency\
        \ ratings tab like [coinmarketcap.com/currencies/bitcoin/#ratings](https://coinmarketcap.com/currencies/bitcoin/#ratings).\
        \     \n  \n***NOTE:** Use this endpoint to request the latest FCAS score\
        \ for all supported cryptocurrencies at the same time. If you require FCAS\
        \ for only specific cryptocurrencies use [/v1/partners/flipside-crypto/fcas/quotes/latest](#operation/getV1PartnersFlipsidecryptoFcasQuotesLatest)\
        \ which is optimized for that purpose. The response data between these endpoints\
        \ is otherwise the same.* "
      operationId: "getV1PartnersFlipsidecryptoFcasListingsLatest"
      parameters:
      - name: "start"
        in: "query"
        description: "Optionally offset the start (1-based index) of the paginated\
          \ list of items to return."
        required: false
        type: "integer"
        default: 1
        minimum: 1
        x-exportParamName: "Start"
        x-optionalDataType: "Int32"
      - name: "limit"
        in: "query"
        description: "Optionally specify the number of results to return. Use this\
          \ parameter and the \"start\" parameter to determine your own pagination\
          \ size."
        required: false
        type: "integer"
        default: 100
        maximum: 5000
        minimum: 1
        x-exportParamName: "Limit"
        x-optionalDataType: "Int32"
      - name: "aux"
        in: "query"
        description: "Optionally specify a comma-separated list of supplemental data\
          \ fields to return. Pass `point_change_24h,percent_change_24h` to include\
          \ all auxiliary fields."
        required: false
        type: "string"
        default: "point_change_24h,percent_change_24h"
        pattern: "^(point_change_24h|percent_change_24h)+(?:,(point_change_24h|percent_change_24h)+)*$"
        x-exportParamName: "Aux"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Successful"
          schema:
            $ref: "#/definitions/FCAS Listings Latest - Response Model"
        "400":
          description: "Bad Request"
          schema:
            $ref: "#/definitions/HTTP Status 400 Error Object"
        "401":
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/HTTP Status 401 Error Object"
        "403":
          description: "Forbidden"
          schema:
            $ref: "#/definitions/HTTP Status 403 Error Object"
        "429":
          description: "Too Many Requests"
          schema:
            $ref: "#/definitions/HTTP Status 429 Error Object"
        "500":
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/HTTP Status 500 Error Object"
  /v1/partners/flipside-crypto/fcas/quotes/latest:
    get:
      tags:
      - "deprecated"
      summary: "FCAS Quotes Latest (deprecated)"
      description: "Returns the latest FCAS score for 1 or more cryptocurrencies.\
        \ FCAS ratings are on a 0-1000 point scale with a corresponding letter grade\
        \ and is updated once a day at UTC midnight.    \n\n\n   \nFCAS stands for\
        \ Fundamental Crypto Asset Score, a single, consistently comparable value\
        \ for measuring cryptocurrency project health. FCAS measures User Activity,\
        \ Developer Behavior and Market Maturity and is provided by <a rel=\"noopener\
        \ noreferrer\" href=\"https://www.flipsidecrypto.com/\" target=\"_blank\"\
        >FlipSide Crypto</a>. Find out more about <a rel=\"noopener noreferrer\" href=\"\
        https://www.flipsidecrypto.com/fcas-explained\" target=\"_blank\">FCAS methodology</a>.\
        \ Users interested in FCAS historical data including sub-component scoring\
        \ may inquire through our <a rel=\"noopener noreferrer\" href=\"https://pro.coinmarketcap.com/contact-data/\"\
        \ target=\"_blank\">CSV Data Delivery</a> request form.  \n\n*Disclaimer:\
        \ Ratings that are calculated by third party organizations and are not influenced\
        \ or endorsed by CoinMarketCap in any way.*  \n  \n  **This endpoint is available\
        \ on the following <a href=\"https://coinmarketcap.com/api/features\" target=\"\
        _blank\">API plans</a>:**\n  - Basic\n  - Hobbyist\n  - Startup\n  - Standard\n\
        \  - Professional\n  - Enterprise\n\n**Cache / Update frequency:** Once a\
        \ day at UTC midnight.  \n**Plan credit use:** 1 call credit per 100 FCAS\
        \ scores returned (rounded up).  \n**CMC equivalent pages:** The FCAS ratings\
        \ available under our cryptocurrency ratings tab like [coinmarketcap.com/currencies/bitcoin/#ratings](https://coinmarketcap.com/currencies/bitcoin/#ratings).\
        \     \n   \n***NOTE:** Use this endpoint to request the latest FCAS score\
        \ for specific cryptocurrencies. If you require FCAS for all supported cryptocurrencies\
        \ use [/v1/partners/flipside-crypto/fcas/listings/latest](#operation/getV1PartnersFlipsidecryptoFcasListingsLatest)\
        \ which is optimized for that purpose. The response data between these endpoints\
        \ is otherwise the same.*"
      operationId: "getV1PartnersFlipsidecryptoFcasQuotesLatest"
      parameters:
      - name: "id"
        in: "query"
        description: "One or more comma-separated cryptocurrency CoinMarketCap IDs.\
          \ Example: 1,2"
        required: false
        type: "string"
        pattern: "^\\d+(?:,\\d+)*$"
        x-exportParamName: "Id"
        x-optionalDataType: "String"
      - name: "slug"
        in: "query"
        description: "Alternatively pass a comma-separated list of cryptocurrency\
          \ slugs. Example: \"bitcoin,ethereum\""
        required: false
        type: "string"
        pattern: "^[0-9a-z-]+(?:,[0-9a-z-]+)*$"
        x-convert:
          lowercase: true
        x-exportParamName: "Slug"
        x-optionalDataType: "String"
      - name: "symbol"
        in: "query"
        description: "Alternatively pass one or more comma-separated cryptocurrency\
          \ symbols. Example: \"BTC,ETH\". At least one \"id\" *or* \"slug\" *or*\
          \ \"symbol\" is required for this request."
        required: false
        type: "string"
        pattern: "^[0-9A-Za-z$@\\-,]+(?:,[0-9A-Za-z$@\\-]+)*$"
        x-exportParamName: "Symbol"
        x-optionalDataType: "String"
      - name: "aux"
        in: "query"
        description: "Optionally specify a comma-separated list of supplemental data\
          \ fields to return. Pass `point_change_24h,percent_change_24h` to include\
          \ all auxiliary fields."
        required: false
        type: "string"
        default: "point_change_24h,percent_change_24h"
        pattern: "^(point_change_24h|percent_change_24h)+(?:,(point_change_24h|percent_change_24h)+)*$"
        x-exportParamName: "Aux"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Successful"
          schema:
            $ref: "#/definitions/FCAS Quote Latest - Response Model"
        "400":
          description: "Bad Request"
          schema:
            $ref: "#/definitions/HTTP Status 400 Error Object"
        "401":
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/HTTP Status 401 Error Object"
        "403":
          description: "Forbidden"
          schema:
            $ref: "#/definitions/HTTP Status 403 Error Object"
        "429":
          description: "Too Many Requests"
          schema:
            $ref: "#/definitions/HTTP Status 429 Error Object"
        "500":
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/HTTP Status 500 Error Object"
definitions:
  assets:
    type: "object"
    required:
    - "id"
    - "name"
    - "slug"
    - "symbol"
    properties:
      id:
        type: "integer"
        example: 1
        description: "The unique CoinMarketCap ID for this cryptocurrency."
      name:
        type: "string"
        example: "Bitcoin"
        description: "The name of this cryptocurrency."
      symbol:
        type: "string"
        example: "BTC"
        description: "The ticker symbol for this cryptocurrency."
      slug:
        type: "string"
        example: "bitcoin"
        description: "The web URL friendly shorthand version of this cryptocurrency\
          \ name."
  Model 1:
    type: "object"
    properties:
      cover:
        type: "string"
      title:
        type: "string"
      subtitle:
        type: "string"
      source_name:
        type: "string"
      source_url:
        type: "string"
      type:
        type: "string"
      assets:
        $ref: "#/definitions/assets"
      created_at:
        type: "string"
        format: "date"
        example: "2018-06-02T23:59:59.999Z"
        description: "Timestamp (ISO 8601) of the time this was created."
      released_at:
        type: "string"
        format: "date"
        example: "2018-06-02T23:59:59.999Z"
        description: "Timestamp (ISO 8601) of the time this was released."
  Content Latest - Results array:
    type: "array"
    description: "Array of content objects."
    items:
      $ref: "#/definitions/Model 1"
  API Status Object:
    type: "object"
    required:
    - "credit_count"
    - "elapsed"
    - "error_code"
    - "error_message"
    - "timestamp"
    properties:
      timestamp:
        type: "string"
        format: "date"
        example: "2022-09-16T12:55:54.015Z"
        description: "Current timestamp (ISO 8601) on the server."
      error_code:
        type: "integer"
        description: "An internal error code for the current error. If a unique platform\
          \ error code is not available the HTTP status code is returned. `null` is\
          \ returned if there is no error."
      error_message:
        type: "string"
        example: ""
        description: "An error message to go along with the error code."
      elapsed:
        type: "integer"
        example: 10
        description: "Number of milliseconds taken to generate this response."
      credit_count:
        type: "integer"
        example: 1
        description: "Number of API call credits that were used for this call."
    description: "Standardized status object for API calls."
    example:
      error_message: ""
      elapsed: 10
      credit_count: 1
      error_code: 0
      timestamp: "2022-09-16T12:55:54.015Z"
  Content Latest - Response Model:
    type: "object"
    required:
    - "data"
    - "status"
    properties:
      data:
        description: "Array of content objects."
        $ref: "#/definitions/Content Latest - Results array"
      status:
        description: "Standardized status object for API calls."
        $ref: "#/definitions/API Status Object"
    example:
      data:
      - cover: "https://academy-public.coinmarketcap.com/optimized-uploads/0aec0502868046419ceace229f92601f.gif"
        assets:
        - id: 1027
          name: "Ethereum"
          symbol: "ETH"
          slug: "ethereum"
        created_at: "2021-05-05T00:00:00Z"
        released_at: "2021-05-05T00:00:00Z"
        title: "Article Title"
        subtitle: "Article Subtitle"
        type: "alexandria"
        source_name: "Connor Sephton"
        source_url: "https://coinmarketcap.com/alexandria/article/coinmarketcap-news-august-9-u-s-comes-for-tornado-cash"
      status:
        timestamp: "2018-06-02T22:51:28.209Z"
        error_code: 0
        error_message: ""
        elapsed: 10
        credit_count: 1
  status:
    type: "object"
    required:
    - "credit_count"
    - "elapsed"
    - "error_code"
    - "error_message"
    - "timestamp"
    properties:
      timestamp:
        type: "string"
        format: "date"
        example: "2018-06-02T22:51:28.209Z"
        description: "Current ISO 8601 timestamp on the server."
      error_code:
        type: "integer"
        example: 400
        description: "An internal error code for the current error. If a unique platform\
          \ error code is not available the HTTP status code is returned."
      error_message:
        type: "string"
        example: "Invalid value for \\\"id\\\""
        description: "An error message to go along with the error code."
      elapsed:
        type: "integer"
        example: 10
        description: "Number of milliseconds taken to generate this response"
      credit_count:
        type: "integer"
        example: 0
        description: "Number of API call credits required for this call. Always 0\
          \ for errors."
  HTTP Status 400 Error Object:
    type: "object"
    properties:
      status:
        $ref: "#/definitions/status"
    description: "Bad Request"
  status 1:
    type: "object"
    required:
    - "credit_count"
    - "elapsed"
    - "error_code"
    - "error_message"
    - "timestamp"
    properties:
      timestamp:
        type: "string"
        format: "date"
        example: "2018-06-02T22:51:28.209Z"
        description: "Current ISO 8601 timestamp on the server."
      error_code:
        type: "integer"
        example: 1002
        description: "An internal error code for the current error. If a unique platform\
          \ error code is not available the HTTP status code is returned."
      error_message:
        type: "string"
        example: "API key missing."
        description: "An error message to go along with the error code."
      elapsed:
        type: "integer"
        example: 10
        description: "Number of milliseconds taken to generate this response"
      credit_count:
        type: "integer"
        example: 0
        description: "Number of API call credits required for this call. Always 0\
          \ for errors."
  HTTP Status 401 Error Object:
    type: "object"
    properties:
      status:
        $ref: "#/definitions/status 1"
    description: "Unauthorized"
  status 2:
    type: "object"
    required:
    - "credit_count"
    - "elapsed"
    - "error_code"
    - "error_message"
    - "timestamp"
    properties:
      timestamp:
        type: "string"
        format: "date"
        example: "2018-06-02T22:51:28.209Z"
        description: "Current ISO 8601 timestamp on the server."
      error_code:
        type: "integer"
        example: 1006
        description: "An internal error code for the current error. If a unique platform\
          \ error code is not available the HTTP status code is returned."
      error_message:
        type: "string"
        example: "Your API Key subscription plan doesn't support this endpoint."
        description: "An error message to go along with the error code."
      elapsed:
        type: "integer"
        example: 10
        description: "Number of milliseconds taken to generate this response"
      credit_count:
        type: "integer"
        example: 0
        description: "Number of API call credits required for this call. Always 0\
          \ for errors."
  HTTP Status 403 Error Object:
    type: "object"
    properties:
      status:
        $ref: "#/definitions/status 2"
    description: "Forbidden"
  status 3:
    type: "object"
    required:
    - "credit_count"
    - "elapsed"
    - "error_code"
    - "error_message"
    - "timestamp"
    properties:
      timestamp:
        type: "string"
        format: "date"
        example: "2018-06-02T22:51:28.209Z"
        description: "Current ISO 8601 timestamp on the server."
      error_code:
        type: "integer"
        example: 1008
        description: "An internal error code string for the current error. If a unique\
          \ platform error code is not available the HTTP status code is returned."
      error_message:
        type: "string"
        example: "You've exceeded your API Key's HTTP request rate limit. Rate limits\
          \ reset every minute."
        description: "An error message to go along with the error code."
      elapsed:
        type: "integer"
        example: 10
        description: "Number of milliseconds taken to generate this response"
      credit_count:
        type: "integer"
        example: 0
        description: "Number of API call credits required for this call. Always 0\
          \ for errors."
  HTTP Status 429 Error Object:
    type: "object"
    properties:
      status:
        $ref: "#/definitions/status 3"
    description: "Too Many Requests"
  status 4:
    type: "object"
    required:
    - "credit_count"
    - "elapsed"
    - "error_code"
    - "error_message"
    - "timestamp"
    properties:
      timestamp:
        type: "string"
        format: "date"
        example: "2018-06-02T22:51:28.209Z"
        description: "Current ISO 8601 timestamp on the server."
      error_code:
        type: "integer"
        description: "An internal error code string for the current error. If a unique\
          \ platform error code is not available the HTTP status code is returned."
      error_message:
        type: "string"
        example: "An internal server error occurred"
        description: "An error message to go along with the error code."
      elapsed:
        type: "integer"
        example: 10
        description: "Number of milliseconds taken to generate this response"
      credit_count:
        type: "integer"
        example: 0
        description: "Number of API call credits required for this call. Always 0\
          \ for errors."
  HTTP Status 500 Error Object:
    type: "object"
    properties:
      status:
        $ref: "#/definitions/status 4"
    description: "Internal Server Error"
  coin:
    type: "object"
    required:
    - "id"
    - "name"
    - "slug"
    - "symbol"
    properties:
      id:
        type: "integer"
        example: 2781
        description: "The unique CoinMarketCap ID for this asset."
      name:
        type: "string"
        example: "Bitcoin"
        description: "The name of this cryptocurrency."
      symbol:
        type: "string"
        example: "BTC"
        description: "The ticker symbol for this cryptocurrency."
      slug:
        type: "string"
        example: "bitcoin"
        description: "The web URL friendly shorthand version of this cryptocurrency\
          \ name."
  Airdrop - Airdrop object:
    type: "object"
    required:
    - "end_date"
    - "id"
    - "start_date"
    properties:
      id:
        type: "string"
        example: "60e59b99c8ca1d58514a2322"
        description: "The unique ID of the airdrop"
      project_name:
        type: "string"
        example: "DeRace Airdrop"
        description: "The project name"
      description:
        type: "string"
        example: "For 7 days starting from August 15, 2021, CoinMarketCap will host\
          \ an Airdrop event..."
        description: "The description of the airdrop."
      status:
        type: "string"
        example: "UPCOMING"
        description: "The current status of the airdrop."
      coin:
        $ref: "#/definitions/coin"
      start_date:
        type: "string"
        format: "date"
        example: "2013-04-28T00:00:00.000Z"
        description: "Timestamp (ISO 8601) of when this cryptocurrency was added to\
          \ CoinMarketCap."
      end_date:
        type: "string"
        format: "date"
        example: "2013-04-28T00:00:00.000Z"
        description: "Timestamp (ISO 8601) of when this cryptocurrency was added to\
          \ CoinMarketCap."
      total_prize:
        type: "integer"
        example: 10000
      winner_count:
        type: "integer"
        example: 55
      link:
        type: "string"
        example: "https://coinmarketcap.com/currencies/derace/airdrop"
        description: "A link to the airdrop information."
    description: "A results object for the airdrop requested."
  Airdrop - Results map:
    type: "object"
    required:
    - "$key"
    properties:
      $key:
        description: "A results object for the airdrop requested."
        $ref: "#/definitions/Airdrop - Airdrop object"
    description: "Results of your query returned as an object map."
    example:
      id: "60e59b99c8ca1d58514a2322"
      project_name: "DeRace Airdrop"
      description: "For 7 days starting from August 15, 2021, CoinMarketCap will host\
        \ an Airdrop event..."
      status: "UPCOMING"
      coin:
        id: 10744
        name: "DeRace"
        slug: "derace"
        symbol: "DERC"
      start_date: "2021-06-01T22:11:00.000Z"
      end_date: "2021-07-01T22:11:00.000Z"
      total_prize: 20000000000
      winner_count: 1000
      link: "https://coinmarketcap.com/currencies/derace/airdrop/"
  Airdrop - Response Model:
    type: "object"
    required:
    - "data"
    properties:
      data:
        description: "Results of your query returned as an object map."
        $ref: "#/definitions/Airdrop - Results map"
      status:
        description: "Standardized status object for API calls."
        $ref: "#/definitions/API Status Object"
    example:
      data:
        id: "60e59b99c8ca1d58514a2322"
        project_name: "DeRace Airdrop"
        description: "For 7 days starting from August 15, 2021, CoinMarketCap will\
          \ host an Airdrop event..."
        status: "UPCOMING"
        coin:
          id: 10744
          name: "DeRace"
          slug: "derace"
          symbol: "DERC"
        start_date: "2021-06-01T22:11:00.000Z"
        end_date: "2021-07-01T22:11:00.000Z"
        total_prize: 20000000000
        winner_count: 1000
        link: "https://coinmarketcap.com/currencies/derace/airdrop/"
      status:
        error_message: ""
        elapsed: 10
        credit_count: 1
        error_code: 0
        timestamp: "2022-09-16T12:55:54.015Z"
  Airdrops - Airdrop Object:
    type: "object"
    required:
    - "end_date"
    - "id"
    - "start_date"
    properties:
      id:
        type: "string"
        example: "60e59b99c8ca1d58514a2322"
        description: "The unique ID of the airdrop"
      project_name:
        type: "string"
        example: "DeRace Airdrop"
        description: "The project name"
      description:
        type: "string"
        example: "For 7 days starting from August 15, 2021, CoinMarketCap will host\
          \ an Airdrop event..."
        description: "The description of the airdrop."
      status:
        type: "string"
        example: "UPCOMING"
        description: "The current status of the airdrop."
      coin:
        $ref: "#/definitions/coin"
      start_date:
        type: "string"
        format: "date"
        example: "2013-04-28T00:00:00.000Z"
        description: "Timestamp (ISO 8601) of when this cryptocurrency was added to\
          \ CoinMarketCap."
      end_date:
        type: "string"
        format: "date"
        example: "2013-04-28T00:00:00.000Z"
        description: "Timestamp (ISO 8601) of when this cryptocurrency was added to\
          \ CoinMarketCap."
      total_prize:
        type: "integer"
        example: 10000
      winner_count:
        type: "integer"
        example: 55
      link:
        type: "string"
        example: "https://coinmarketcap.com/currencies/derace/airdrop"
        description: "A link to the airdrop information."
    description: "Airdrop object for each result"
  Airdrops - Airdrop Array:
    type: "array"
    description: "Array of airdrop object results."
    items:
      description: "Airdrop object for each result"
      $ref: "#/definitions/Airdrops - Airdrop Object"
  Airdrops - Response Model:
    type: "object"
    required:
    - "data"
    properties:
      data:
        description: "Array of airdrop object results."
        $ref: "#/definitions/Airdrops - Airdrop Array"
      status:
        description: "Standardized status object for API calls."
        $ref: "#/definitions/API Status Object"
    example:
      data:
      - id: "60e59b99c8ca1d58514a2322"
        project_name: "DeRace Airdrop"
        description: "For 7 days starting from August 15, 2021, CoinMarketCap will\
          \ host an Airdrop event..."
        status: "UPCOMING"
        coin:
          id: 10744
          name: "DeRace"
          slug: "derace"
          symbol: "DERC"
        start_date: "2021-06-01T22:11:00.000Z"
        end_date: "2021-07-01T22:11:00.000Z"
        total_prize: 20000000000
        winner_count: 1000
        link: "https://coinmarketcap.com/currencies/derace/airdrop/"
      status:
        timestamp: "2021-08-01T22:51:28.209Z"
        error_code: 0
        error_message: ""
        elapsed: 3
        credit_count: 1
  Categories - Category object:
    type: "object"
    required:
    - "avg_price_change"
    - "id"
    - "last_updated"
    - "market_cap"
    - "market_cap_change"
    - "volume"
    - "volume_change"
    properties:
      id:
        type: "integer"
        example: 2781
        description: "The unique ID of the category"
      name:
        type: "string"
        example: "A16Z Portfolio"
        description: "The name of the category"
      title:
        type: "string"
        example: "A16Z Portfolio"
        description: "The title of the category"
      description:
        type: "string"
        example: "A16Z Portfolio"
        description: "The description of the category"
      num_tokens:
        type: "integer"
        example: 12
      avg_price_change:
        type: "number"
        example: 0.03
        description: "Average price change of coins within this categry"
      market_cap:
        type: "number"
        example: 1.21020662982E11
        description: "Market cap of coins within this categry"
      market_cap_change:
        type: "number"
        example: 0.03
        description: "Market cap change of coins within this categry"
      volume:
        type: "number"
        example: 1.21020662982E11
        description: "Volume of coins within this categry"
      volume_change:
        type: "number"
        example: 0.03
        description: "Volume change of coins within this categry"
      last_updated:
        type: "string"
        format: "date"
        example: "2013-04-28T00:00:00.000Z"
        description: "Timestamp (ISO 8601) of when this was last updated."
    description: "A results object for each category requested. The map key being\
      \ the id used in the request."
  Categories - Results map:
    type: "array"
    description: "Results of your query returned as an object map."
    items:
      description: "A results object for each category requested. The map key being\
        \ the id used in the request."
      $ref: "#/definitions/Categories - Category object"
  Categories - Response Model:
    type: "object"
    required:
    - "data"
    properties:
      data:
        description: "Results of your query returned as an object map."
        $ref: "#/definitions/Categories - Results map"
      status:
        description: "Standardized status object for API calls."
        $ref: "#/definitions/API Status Object"
    example:
      data:
      - id: "605e2ce9d41eae1066535f7c"
        name: "A16Z Portfolio"
        title: "A16Z Portfolio"
        description: "A16Z Portfolio"
        num_tokens: 12
        avg_price_change: 0.61305157
        market_cap: 2.9429241867031097E10
        market_cap_change: 3.049044106496
        volume: 4.1037066000391645E9
        volume_change: -10.538325849854
        last_updated: 1616488708878
      status:
        timestamp: "2021-08-01T22:51:28.209Z"
        error_code: 0
        error_message: ""
        elapsed: 3
        credit_count: 1
  tags:
    type: "array"
    description: "Array of tags associated with this cryptocurrency. Currently only\
      \ a mineable tag will be returned if the cryptocurrency is mineable. Additional\
      \ tags will be returned in the future."
    items:
      type: "string"
    example:
    - "mineable"
  platform:
    type: "object"
    required:
    - "id"
    - "name"
    - "slug"
    - "symbol"
    - "token_address"
    properties:
      id:
        type: "integer"
        example: 1
        description: "The unique CoinMarketCap ID for the parent platform cryptocurrency."
      name:
        type: "string"
        example: "Ethereum"
        description: "The name of the parent platform cryptocurrency."
      symbol:
        type: "string"
        example: "ETH"
        description: "The ticker symbol for the parent platform cryptocurrency."
      slug:
        type: "string"
        example: "ethereum"
        description: "The web URL friendly shorthand version of the parent platform\
          \ cryptocurrency name."
      token_address:
        type: "string"
        example: "0xe41d2489571d322189246dafa5ebde1f4699f498"
        description: "The token address on the parent platform cryptocurrency."
    description: "Metadata about the parent cryptocurrency platform this cryptocurrency\
      \ belongs to if it is a token, otherwise null."
  Cryptocurrency - Quote object:
    type: "object"
    required:
    - "last_updated"
    - "market_cap"
    - "percent_change_1h"
    - "percent_change_24h"
    - "percent_change_7d"
    - "price"
    - "volume_24h"
    properties:
      price:
        type: "number"
        example: 7139.82
        description: "Price in the specified currency for this historical."
      volume_24h:
        type: "number"
        example: 4.88588E9
        description: "Rolling 24 hour adjusted volume in the specified currency."
      volume_24h_reported:
        type: "number"
        example: 4.88588E9
        description: "Rolling 24 hour reported volume in the specified currency. *This\
          \ field is only returned if requested through the `aux` request parameter.*"
      volume_7d:
        type: "number"
        example: 4.88588E9
        description: "Rolling 7 day adjusted volume in the specified currency. *This\
          \ field is only returned if requested through the `aux` request parameter.*"
      volume_7d_reported:
        type: "number"
        example: 4.88588E9
        description: "Rolling 7 day reported volume in the specified currency. *This\
          \ field is only returned if requested through the `aux` request parameter.*"
      volume_30d:
        type: "number"
        example: 4.88588E9
        description: "Rolling 30 day adjusted volume in the specified currency. *This\
          \ field is only returned if requested through the `aux` request parameter.*"
      volume_30d_reported:
        type: "number"
        example: 4.88588E9
        description: "Rolling 30 day reported volume in the specified currency. *This\
          \ field is only returned if requested through the `aux` request parameter.*"
      market_cap:
        type: "number"
        example: 1.21020662982E11
        description: "Market cap in the specified currency."
      percent_change_1h:
        type: "number"
        example: 0.03
        description: "1 hour change in the specified currency."
      percent_change_24h:
        type: "number"
        example: 5.75
        description: "24 hour change in the specified currency."
      percent_change_7d:
        type: "number"
        example: -19.64
        description: "7 day change in the specified currency."
      last_updated:
        type: "string"
        format: "date"
        example: "2018-06-02T23:59:59.999Z"
        description: "Timestamp (ISO 8601) of when the conversion currency's current\
          \ value was referenced."
    description: "A market quote in the currency conversion option."
  Cryptocurrency - Quote map:
    type: "object"
    required:
    - "$key"
    properties:
      $key:
        description: "A market quote in the currency conversion option."
        $ref: "#/definitions/Cryptocurrency - Quote object"
    description: "A map of market quotes in different currency conversions. The default\
      \ map included is USD."
    example:
      USD:
        price: 9283.92
        volume_24h: 7155680000
        percent_change_1h: -0.152774
        percent_change_24h: 0.518894
        percent_change_7d: 0.986573
        market_cap: 158055024432
        last_updated: "2018-08-09T22:53:32.000Z"
      BTC:
        price: 1
        volume_24h: 772012
        percent_change_1h: 0
        percent_change_24h: 0
        percent_change_7d: 0
        market_cap: 17024600
        last_updated: "2018-08-09T22:53:32.000Z"
  Cryptocurrency - Cryptocurrency object:
    type: "object"
    required:
    - "id"
    - "last_updated"
    - "name"
    - "quote"
    - "slug"
    - "symbol"
    properties:
      id:
        type: "integer"
        example: 1
        description: "The unique CoinMarketCap ID for this cryptocurrency."
      name:
        type: "string"
        example: "Bitcoin"
        description: "The name of this cryptocurrency."
      symbol:
        type: "string"
        example: "BTC"
        description: "The ticker symbol for this cryptocurrency."
      slug:
        type: "string"
        example: "bitcoin"
        description: "The web URL friendly shorthand version of this cryptocurrency\
          \ name."
      cmc_rank:
        type: "integer"
        example: 5
        description: "The cryptocurrency's CoinMarketCap rank by market cap."
      num_market_pairs:
        type: "integer"
        example: 500
        description: "The number of active trading pairs available for this cryptocurrency\
          \ across supported exchanges."
      circulating_supply:
        type: "number"
        example: 1.69501E7
        description: "The approximate number of coins circulating for this cryptocurrency."
      total_supply:
        type: "number"
        example: 1.69501E7
        description: "The approximate total amount of coins in existence right now\
          \ (minus any coins that have been verifiably burned)."
      market_cap_by_total_supply:
        type: "number"
        example: 1.58055024432E11
        description: "The market cap by total supply. *This field is only returned\
          \ if requested through the `aux` request parameter.*"
      max_supply:
        type: "number"
        example: 2.1E7
        description: "The expected maximum limit of coins ever to be available for\
          \ this cryptocurrency."
      last_updated:
        type: "string"
        format: "date"
        example: "2018-06-02T22:51:28.209Z"
        description: "Timestamp (ISO 8601) of the last time this cryptocurrency's\
          \ market data was updated."
      date_added:
        type: "string"
        format: "date"
        example: "2013-04-28T00:00:00.000Z"
        description: "Timestamp (ISO 8601) of when this cryptocurrency was added to\
          \ CoinMarketCap."
      tags:
        description: "Array of tags associated with this cryptocurrency. Currently\
          \ only a mineable tag will be returned if the cryptocurrency is mineable.\
          \ Additional tags will be returned in the future."
        $ref: "#/definitions/tags"
      platform:
        description: "Metadata about the parent cryptocurrency platform this cryptocurrency\
          \ belongs to if it is a token, otherwise null."
        $ref: "#/definitions/platform"
      quote:
        description: "A map of market quotes in different currency conversions. The\
          \ default map included is USD."
        $ref: "#/definitions/Cryptocurrency - Quote map"
    description: "A cryptocurrency object for every cryptocurrency that matched list\
      \ options."
  Cryptocurrency - Results array:
    type: "array"
    description: "Array of cryptocurrency objects matching the list options."
    items:
      description: "A cryptocurrency object for every cryptocurrency that matched\
        \ list options."
      $ref: "#/definitions/Cryptocurrency - Cryptocurrency object"
  Category - Cryptocurrency object:
    type: "object"
    required:
    - "avg_price_change"
    - "coins"
    - "id"
    - "last_updated"
    - "market_cap"
    - "market_cap_change"
    - "volume"
    - "volume_change"
    properties:
      id:
        type: "integer"
        example: 2781
        description: "The unique ID of the category"
      name:
        type: "string"
        example: "A16Z Portfolio"
        description: "The name of the category"
      title:
        type: "string"
        example: "A16Z Portfolio"
        description: "The title of the category"
      description:
        type: "string"
        example: "A16Z Portfolio"
        description: "The description of the category"
      num_tokens:
        type: "integer"
        example: 12
      avg_price_change:
        type: "number"
        example: 0.03
        description: "Average price change of coins within this categry"
      market_cap:
        type: "number"
        example: 1.21020662982E11
        description: "Market cap of coins within this categry"
      market_cap_change:
        type: "number"
        example: 0.03
        description: "Market cap change of coins within this categry"
      volume:
        type: "number"
        example: 1.21020662982E11
        description: "Volume of coins within this categry"
      volume_change:
        type: "number"
        example: 0.03
        description: "Volume change of coins within this categry"
      coins:
        description: "Array of cryptocurrency objects matching the list options."
        $ref: "#/definitions/Cryptocurrency - Results array"
      last_updated:
        type: "string"
        format: "date"
        example: "2013-04-28T00:00:00.000Z"
        description: "Timestamp (ISO 8601) of when this was last updated."
    description: "A results object for each cryptocurrency found in the category."
  Category - Results map:
    type: "object"
    required:
    - "$key"
    properties:
      $key:
        description: "A results object for each cryptocurrency found in the category."
        $ref: "#/definitions/Category - Cryptocurrency object"
    description: "Results of your query returned as an object map."
    example:
      id: "605e2ce9d41eae1066535f7c"
      name: "A16Z Portfolio"
      title: "A16Z Portfolio"
      description: "A16Z Portfolio"
      num_tokens: 12
      avg_price_change: 0.61305157
      market_cap: 2.9429241867031097E10
      market_cap_change: 3.049044106496
      volume: 4.1037066000391645E9
      volume_change: -10.538325849854
      coins:
      - id: 1
        name: "Bitcoin"
        symbol: "BTC"
        slug: "bitcoin"
        cmc_rank: 5
        num_market_pairs: 500
        circulating_supply: 16950100
        total_supply: 16950100
        max_supply: 21000000
        last_updated: "2018-06-02T22:51:28.209Z"
        date_added: "2013-04-28T00:00:00.000Z"
        tags:
        - "mineable"
        quote:
          USD:
            price: 9283.92
            volume_24h: 7155680000
            percent_change_1h: -0.152774
            percent_change_24h: 0.518894
            percent_change_7d: 0.986573
            market_cap: 158055024432
            last_updated: "2018-08-09T22:53:32.000Z"
          BTC:
            price: 1
            volume_24h: 772012
            percent_change_1h: 0
            percent_change_24h: 0
            percent_change_7d: 0
            market_cap: 17024600
            last_updated: "2018-08-09T22:53:32.000Z"
      - id: 1027
        name: "Ethereum"
        symbol: "ETH"
        slug: "ethereum"
        num_market_pairs: 6360
        circulating_supply: 16950100
        total_supply: 16950100
        max_supply: 21000000
        last_updated: "2018-06-02T22:51:28.209Z"
        date_added: "2013-04-28T00:00:00.000Z"
        tags:
        - "mineable"
        quote:
          USD:
            price: 1283.92
            volume_24h: 7155680000
            percent_change_1h: -0.152774
            percent_change_24h: 0.518894
            percent_change_7d: 0.986573
            market_cap: 158055024432
            last_updated: "2018-08-09T22:53:32.000Z"
          ETH:
            price: 1
            volume_24h: 772012
            percent_change_1h: 0
            percent_change_24h: 0
            percent_change_7d: 0
            market_cap: 17024600
            last_updated: "2018-08-09T22:53:32.000Z"
      last_updated: 1616488708878
  Category - Response Model:
    type: "object"
    required:
    - "data"
    properties:
      data:
        description: "Results of your query returned as an object map."
        $ref: "#/definitions/Category - Results map"
      status:
        description: "Standardized status object for API calls."
        $ref: "#/definitions/API Status Object"
    example:
      data:
        id: "605e2ce9d41eae1066535f7c"
        name: "A16Z Portfolio"
        title: "A16Z Portfolio"
        description: "A16Z Portfolio"
        num_tokens: 12
        avg_price_change: 0.61305157
        market_cap: 2.9429241867031097E10
        market_cap_change: 3.049044106496
        volume: 4.1037066000391645E9
        volume_change: -10.538325849854
        coins:
        - id: 1
          name: "Bitcoin"
          symbol: "BTC"
          slug: "bitcoin"
          cmc_rank: 5
          num_market_pairs: 500
          circulating_supply: 16950100
          total_supply: 16950100
          max_supply: 21000000
          last_updated: "2018-06-02T22:51:28.209Z"
          date_added: "2013-04-28T00:00:00.000Z"
          tags:
          - "mineable"
          quote:
            USD:
              price: 9283.92
              volume_24h: 7155680000
              percent_change_1h: -0.152774
              percent_change_24h: 0.518894
              percent_change_7d: 0.986573
              market_cap: 158055024432
              last_updated: "2018-08-09T22:53:32.000Z"
            BTC:
              price: 1
              volume_24h: 772012
              percent_change_1h: 0
              percent_change_24h: 0
              percent_change_7d: 0
              market_cap: 17024600
              last_updated: "2018-08-09T22:53:32.000Z"
        - id: 1027
          name: "Ethereum"
          symbol: "ETH"
          slug: "ethereum"
          num_market_pairs: 6360
          circulating_supply: 16950100
          total_supply: 16950100
          max_supply: 21000000
          last_updated: "2018-06-02T22:51:28.209Z"
          date_added: "2013-04-28T00:00:00.000Z"
          tags:
          - "mineable"
          quote:
            USD:
              price: 1283.92
              volume_24h: 7155680000
              percent_change_1h: -0.152774
              percent_change_24h: 0.518894
              percent_change_7d: 0.986573
              market_cap: 158055024432
              last_updated: "2018-08-09T22:53:32.000Z"
            ETH:
              price: 1
              volume_24h: 772012
              percent_change_1h: 0
              percent_change_24h: 0
              percent_change_7d: 0
              market_cap: 17024600
              last_updated: "2018-08-09T22:53:32.000Z"
        last_updated: 1616488708878
      status:
        error_message: ""
        elapsed: 10
        credit_count: 1
        error_code: 0
        timestamp: "2022-09-16T12:55:54.015Z"
  tags 1:
    type: "array"
    description: "Tags associated with this cryptocurrency."
    items:
      type: "string"
    example:
    - "mineable"
  self_reported_tags:
    type: "array"
    description: "Array of self reported tags associated with this cryptocurrency."
    items:
      type: "string"
    example:
    - "Store Of Value"
    - "Play To Earn"
  website:
    type: "array"
    description: "Array of website URLs."
    items:
      type: "string"
      x-format:
        uri: true
    example:
    - "https://bitcoin.org/"
  technical_doc:
    type: "array"
    description: "Array of white paper or technical documentation URLs."
    items:
      type: "string"
      x-format:
        uri: true
    example:
    - "https://bitcoin.org/bitcoin.pdf"
  explorer:
    type: "array"
    description: "Array of block explorer URLs."
    items:
      type: "string"
      x-format:
        uri: true
    example:
    - "https://blockchain.coinmarketcap.com/chain/bitcoin"
    - "https://blockchain.info/"
    - "https://live.blockcypher.com/btc/"
  source_code:
    type: "array"
    description: "Array of source code URLs."
    items:
      type: "string"
      x-format:
        uri: true
    example:
    - "https://github.com/bitcoin/"
  message_board:
    type: "array"
    description: "Array of message board URLs."
    items:
      type: "string"
      x-format:
        uri: true
    example:
    - "https://bitcointalk.org"
  chat:
    type: "array"
    description: "Array of chat service URLs."
    items:
      type: "string"
      x-format:
        uri: true
    example: []
  announcement:
    type: "array"
    description: "Array of announcement URLs."
    items:
      type: "string"
      x-format:
        uri: true
    example: []
  reddit:
    type: "array"
    description: "Array of Reddit community page URLs."
    items:
      type: "string"
      x-format:
        uri: true
    example:
    - "https://reddit.com/r/bitcoin"
  twitter:
    type: "array"
    description: "Array of official twitter profile URLs."
    items:
      type: "string"
      x-format:
        uri: true
    example:
    - "https://twitter.com/Bitcoin"
  Cryptocurrencies Info - URLs object:
    type: "object"
    required:
    - "announcement"
    - "chat"
    - "explorer"
    - "message_board"
    - "reddit"
    - "source_code"
    - "technical_doc"
    - "twitter"
    - "website"
    properties:
      website:
        description: "Array of website URLs."
        $ref: "#/definitions/website"
      technical_doc:
        description: "Array of white paper or technical documentation URLs."
        $ref: "#/definitions/technical_doc"
      explorer:
        description: "Array of block explorer URLs."
        $ref: "#/definitions/explorer"
      source_code:
        description: "Array of source code URLs."
        $ref: "#/definitions/source_code"
      message_board:
        description: "Array of message board URLs."
        $ref: "#/definitions/message_board"
      chat:
        description: "Array of chat service URLs."
        $ref: "#/definitions/chat"
      announcement:
        description: "Array of announcement URLs."
        $ref: "#/definitions/announcement"
      reddit:
        description: "Array of Reddit community page URLs."
        $ref: "#/definitions/reddit"
      twitter:
        description: "Array of official twitter profile URLs."
        $ref: "#/definitions/twitter"
    description: "An object containing various resource URLs for this cryptocurrency."
  Cryptocurrencies Info - Cryptocurrency object:
    type: "object"
    required:
    - "category"
    - "date_added"
    - "date_launched"
    - "description"
    - "id"
    - "logo"
    - "name"
    - "notice"
    - "platform"
    - "slug"
    - "symbol"
    - "tags"
    - "urls"
    properties:
      id:
        type: "integer"
        example: 1
        description: "The unique CoinMarketCap ID for this cryptocurrency."
      name:
        type: "string"
        example: "Bitcoin"
        description: "The name of this cryptocurrency."
      symbol:
        type: "string"
        example: "BTC"
        description: "The ticker symbol for this cryptocurrency."
      category:
        type: "string"
        example: "coin"
        description: "The category for this cryptocurrency."
        enum:
        - "coin"
        - "token"
      slug:
        type: "string"
        example: "bitcoin"
        description: "The web URL friendly shorthand version of this cryptocurrency\
          \ name."
      logo:
        type: "string"
        example: "https://s2.coinmarketcap.com/static/img/coins/64x64/1.png"
        description: "Link to a CoinMarketCap hosted logo png for this cryptocurrency.\
          \ 64px is default size returned. Replace \"64x64\" in the image path with\
          \ these alternative sizes: 16, 32, 64, 128, 200"
      description:
        type: "string"
        example: "Bitcoin (BTC) is a consensus network that enables a new payment\
          \ system and a completely digital currency. Powered by its users, it is\
          \ a peer to peer payment network that requires no central authority to operate."
        description: "A CoinMarketCap supplied brief description of this cryptocurrency.\
          \ This field will return null if a description is not available."
      date_added:
        type: "string"
        format: "date"
        example: "2013-04-28T00:00:00.000Z"
        description: "Timestamp (ISO 8601) of when this cryptocurrency was added to\
          \ CoinMarketCap."
      date_launched:
        type: "string"
        format: "date"
        example: "2013-04-28T00:00:00.000Z"
        description: "Timestamp (ISO 8601) of when this cryptocurrency was launched."
      notice:
        type: "string"
        description: "A [Markdown](https://commonmark.org/help/) formatted notice\
          \ that may highlight a significant event or condition that is impacting\
          \ the cryptocurrency or how it is displayed, otherwise null. A notice may\
          \ highlight a recent or upcoming mainnet swap, symbol change, exploit event,\
          \ or known issue with a particular exchange or market, for example. If present,\
          \ this notice is also displayed in an alert banner at the top of the cryptocurrency's\
          \ page on coinmarketcap.com."
      tags:
        description: "Tags associated with this cryptocurrency."
        $ref: "#/definitions/tags 1"
      platform:
        description: "Metadata about the parent cryptocurrency platform this cryptocurrency\
          \ belongs to if it is a token, otherwise null."
        $ref: "#/definitions/platform"
      self_reported_circulating_supply:
        type: "number"
        example: 1.69501E7
        description: "The self reported number of coins circulating for this cryptocurrency."
      self_reported_market_cap:
        type: "number"
        example: 1.69501E7
        description: "The self reported market cap for this cryptocurrency."
      self_reported_tags:
        description: "Array of self reported tags associated with this cryptocurrency."
        $ref: "#/definitions/self_reported_tags"
      urls:
        description: "An object containing various resource URLs for this cryptocurrency."
        $ref: "#/definitions/Cryptocurrencies Info - URLs object"
    description: "A results object for each cryptocurrency requested. The map key\
      \ being the id/symbol used in the request."
  Cryptocurrency Info - Results map:
    type: "object"
    required:
    - "$key"
    properties:
      $key:
        description: "A results object for each cryptocurrency requested. The map\
          \ key being the id/symbol used in the request."
        $ref: "#/definitions/Cryptocurrencies Info - Cryptocurrency object"
    description: "Results of your query returned as an object map."
    example:
      "1":
        urls:
          website:
          - "https://bitcoin.org/"
          technical_doc:
          - "https://bitcoin.org/bitcoin.pdf"
          twitter: []
          reddit:
          - "https://reddit.com/r/bitcoin"
          message_board:
          - "https://bitcointalk.org"
          announcement: []
          chat: []
          explorer:
          - "https://blockchain.coinmarketcap.com/chain/bitcoin"
          - "https://blockchain.info/"
          - "https://live.blockcypher.com/btc/"
          source_code:
          - "https://github.com/bitcoin/"
        logo: "https://s2.coinmarketcap.com/static/img/coins/64x64/1.png"
        id: 1
        name: "Bitcoin"
        symbol: "BTC"
        slug: "bitcoin"
        description: "Bitcoin (BTC) is a consensus network that enables a new payment\
          \ system and a completely digital currency. Powered by its users, it is\
          \ a peer to peer payment network that requires no central authority to operate.\
          \ On October 31st, 2008, an individual or group of individuals operating\
          \ under the pseudonym \"Satoshi Nakamoto\" published the Bitcoin Whitepaper\
          \ and described it as: \"a purely peer-to-peer version of electronic cash\
          \ would allow online payments to be sent directly from one party to another\
          \ without going through a financial institution.\""
        date_added: "2013-04-28T00:00:00.000Z"
        date_launched: "2013-04-28T00:00:00.000Z"
        tags:
        - "mineable"
        category: "coin"
      "1027":
        urls:
          website:
          - "https://www.ethereum.org/"
          technical_doc:
          - "https://github.com/ethereum/wiki/wiki/White-Paper"
          twitter:
          - "https://twitter.com/ethereum"
          reddit:
          - "https://reddit.com/r/ethereum"
          message_board:
          - "https://forum.ethereum.org/"
          announcement:
          - "https://bitcointalk.org/index.php?topic=428589.0"
          chat:
          - "https://gitter.im/orgs/ethereum/rooms"
          explorer:
          - "https://blockchain.coinmarketcap.com/chain/ethereum"
          - "https://etherscan.io/"
          - "https://ethplorer.io/"
          source_code:
          - "https://github.com/ethereum"
        logo: "https://s2.coinmarketcap.com/static/img/coins/64x64/1027.png"
        id: 1027
        name: "Ethereum"
        symbol: "ETH"
        slug: "ethereum"
        description: "Ethereum (ETH) is a smart contract platform that enables developers\
          \ to build decentralized applications (dapps) conceptualized by Vitalik\
          \ Buterin in 2013. ETH is the native currency for the Ethereum platform\
          \ and also works as the transaction fees to miners on the Ethereum network.\n\
          \nEthereum is the pioneer for blockchain based smart contracts. When running\
          \ on the blockchain a smart contract becomes like a self-operating computer\
          \ program that automatically executes when specific conditions are met.\
          \ On the blockchain, smart contracts allow for code to be run exactly as\
          \ programmed without any possibility of downtime, censorship, fraud or third-party\
          \ interference. It can facilitate the exchange of money, content, property,\
          \ shares, or anything of value. The Ethereum network went live on July 30th,\
          \ 2015 with 72 million Ethereum premined."
        date_added: "2015-08-07T00:00:00.000Z"
        date_launched: "2015-08-07T00:00:00.000Z"
        tags:
        - "mineable"
        category: "coin"
  Cryptocurrencies Info - Response Model:
    type: "object"
    required:
    - "data"
    properties:
      data:
        description: "Results of your query returned as an object map."
        $ref: "#/definitions/Cryptocurrency Info - Results map"
      status:
        description: "Standardized status object for API calls."
        $ref: "#/definitions/API Status Object"
    example:
      data:
        "1":
          urls:
            website:
            - "https://bitcoin.org/"
            technical_doc:
            - "https://bitcoin.org/bitcoin.pdf"
            twitter: []
            reddit:
            - "https://reddit.com/r/bitcoin"
            message_board:
            - "https://bitcointalk.org"
            announcement: []
            chat: []
            explorer:
            - "https://blockchain.coinmarketcap.com/chain/bitcoin"
            - "https://blockchain.info/"
            - "https://live.blockcypher.com/btc/"
            source_code:
            - "https://github.com/bitcoin/"
          logo: "https://s2.coinmarketcap.com/static/img/coins/64x64/1.png"
          id: 1
          name: "Bitcoin"
          symbol: "BTC"
          slug: "bitcoin"
          description: "Bitcoin (BTC) is a consensus network that enables a new payment\
            \ system and a completely digital currency. Powered by its users, it is\
            \ a peer to peer payment network that requires no central authority to\
            \ operate. On October 31st, 2008, an individual or group of individuals\
            \ operating under the pseudonym \"Satoshi Nakamoto\" published the Bitcoin\
            \ Whitepaper and described it as: \"a purely peer-to-peer version of electronic\
            \ cash would allow online payments to be sent directly from one party\
            \ to another without going through a financial institution.\""
          date_added: "2013-04-28T00:00:00.000Z"
          date_launched: "2013-04-28T00:00:00.000Z"
          tags:
          - "mineable"
          category: "coin"
        "1027":
          urls:
            website:
            - "https://www.ethereum.org/"
            technical_doc:
            - "https://github.com/ethereum/wiki/wiki/White-Paper"
            twitter:
            - "https://twitter.com/ethereum"
            reddit:
            - "https://reddit.com/r/ethereum"
            message_board:
            - "https://forum.ethereum.org/"
            announcement:
            - "https://bitcointalk.org/index.php?topic=428589.0"
            chat:
            - "https://gitter.im/orgs/ethereum/rooms"
            explorer:
            - "https://blockchain.coinmarketcap.com/chain/ethereum"
            - "https://etherscan.io/"
            - "https://ethplorer.io/"
            source_code:
            - "https://github.com/ethereum"
          logo: "https://s2.coinmarketcap.com/static/img/coins/64x64/1027.png"
          id: 1027
          name: "Ethereum"
          symbol: "ETH"
          slug: "ethereum"
          description: "Ethereum (ETH) is a smart contract platform that enables developers\
            \ to build decentralized applications (dapps) conceptualized by Vitalik\
            \ Buterin in 2013. ETH is the native currency for the Ethereum platform\
            \ and also works as the transaction fees to miners on the Ethereum network.\n\
            \nEthereum is the pioneer for blockchain based smart contracts. When running\
            \ on the blockchain a smart contract becomes like a self-operating computer\
            \ program that automatically executes when specific conditions are met.\
            \ On the blockchain, smart contracts allow for code to be run exactly\
            \ as programmed without any possibility of downtime, censorship, fraud\
            \ or third-party interference. It can facilitate the exchange of money,\
            \ content, property, shares, or anything of value. The Ethereum network\
            \ went live on July 30th, 2015 with 72 million Ethereum premined."
          date_added: "2015-08-07T00:00:00.000Z"
          date_launched: "2015-08-07T00:00:00.000Z"
          tags:
          - "mineable"
          category: "coin"
      status:
        error_message: ""
        elapsed: 10
        credit_count: 1
        error_code: 0
        timestamp: "2022-09-16T12:55:54.015Z"
  Cryptocurrency Map - Cryotocurrency Object:
    type: "object"
    required:
    - "id"
    - "name"
    - "slug"
    - "symbol"
    properties:
      id:
        type: "integer"
        example: 1
        description: "The unique cryptocurrency ID for this cryptocurrency."
      name:
        type: "string"
        example: "Bitcoin"
        description: "The name of this cryptocurrency."
      symbol:
        type: "string"
        example: "BTC"
        description: "The ticker symbol for this cryptocurrency, always in all caps."
      slug:
        type: "string"
        example: "bitcoin"
        description: "The web URL friendly shorthand version of this cryptocurrency\
          \ name."
      is_active:
        type: "integer"
        example: 1
        description: "1 if this cryptocurrency has at least 1 active market currently\
          \ being tracked by the platform, otherwise 0. A value of 1 is analogous\
          \ with `listing_status=active`."
        minimum: 0
        maximum: 1
      status:
        type: "string"
        example: "active"
        description: "The listing status of the cryptocurrency. *This field is only\
          \ returned if requested through the `aux` request parameter.*"
        enum:
        - "active"
        - "inactive"
        - "untracked"
      first_historical_data:
        type: "string"
        format: "date"
        example: "2013-04-28T18:47:21.000Z"
        description: "Timestamp (ISO 8601) of the date this cryptocurrency was first\
          \ available on the platform."
      last_historical_data:
        type: "string"
        format: "date"
        example: "2018-06-02T22:51:28.209Z"
        description: "Timestamp (ISO 8601) of the last time this cryptocurrency's\
          \ market data was updated."
      platform:
        description: "Metadata about the parent cryptocurrency platform this cryptocurrency\
          \ belongs to if it is a token, otherwise null."
        $ref: "#/definitions/platform"
    description: "Cryptocurrency object for each result"
  Cryptocurrency Map - Cryptocurrency Array:
    type: "array"
    description: "Array of cryptocurrency object results."
    items:
      description: "Cryptocurrency object for each result"
      $ref: "#/definitions/Cryptocurrency Map - Cryotocurrency Object"
  Cryptocurrency Map - Response Model:
    type: "object"
    required:
    - "data"
    properties:
      data:
        description: "Array of cryptocurrency object results."
        $ref: "#/definitions/Cryptocurrency Map - Cryptocurrency Array"
      status:
        description: "Standardized status object for API calls."
        $ref: "#/definitions/API Status Object"
    example:
      data:
      - id: 1
        rank: 1
        name: "Bitcoin"
        symbol: "BTC"
        slug: "bitcoin"
        is_active: 1
        first_historical_data: "2013-04-28T18:47:21.000Z"
        last_historical_data: "2020-05-05T20:44:01.000Z"
      - id: 1839
        rank: 3
        name: "Binance Coin"
        symbol: "BNB"
        slug: "binance-coin"
        is_active: 1
        first_historical_data: "2017-07-25T04:30:05.000Z"
        last_historical_data: "2020-05-05T20:44:02.000Z"
        platform:
          id: 1027
          name: "Ethereum"
          symbol: "ETH"
          slug: "ethereum"
          token_address: "0xB8c77482e45F1F44dE1745F52C74426C631bDD52"
      - id: 825
        rank: 5
        name: "Tether"
        symbol: "USDT"
        slug: "tether"
        is_active: 1
        first_historical_data: "2015-02-25T13:34:26.000Z"
        last_historical_data: "2020-05-05T20:44:01.000Z"
        platform:
          id: 1027
          name: "Ethereum"
          symbol: "ETH"
          slug: "ethereum"
          token_address: "0xdac17f958d2ee523a2206206994597c13d831ec7"
      status:
        timestamp: "2018-06-02T22:51:28.209Z"
        error_code: 0
        error_message: ""
        elapsed: 10
        credit_count: 1
  website 1:
    type: "array"
    description: "Official website URLs."
    items:
      type: "string"
      x-format:
        uri: true
    example:
    - "https://binance.com"
  blog:
    type: "array"
    description: "Official blog URLs."
    items:
      type: "string"
      x-format:
        uri: true
    example:
    - "https://blog.kraken.com/"
  chat 1:
    type: "array"
    description: "Official chat URLs."
    items:
      type: "string"
      x-format:
        uri: true
    example:
    - "https://t.me/coinbene"
  fee:
    type: "array"
    description: "Official web URLs covering exchange fees."
    items:
      type: "string"
      x-format:
        uri: true
    example:
    - "https://www.gdax.com/fees"
  twitter 1:
    type: "array"
    description: "Official twitter profile URLs."
    items:
      type: "string"
      x-format:
        uri: true
    example:
    - "https://twitter.com/Bitcoin"
  Exchanges Info - URLs object:
    type: "object"
    required:
    - "blog"
    - "chat"
    - "fee"
    - "twitter"
    - "website"
    properties:
      website:
        description: "Official website URLs."
        $ref: "#/definitions/website 1"
      blog:
        description: "Official blog URLs."
        $ref: "#/definitions/blog"
      chat:
        description: "Official chat URLs."
        $ref: "#/definitions/chat 1"
      fee:
        description: "Official web URLs covering exchange fees."
        $ref: "#/definitions/fee"
      twitter:
        description: "Official twitter profile URLs."
        $ref: "#/definitions/twitter 1"
    description: "An object containing various resource URLs for this exchange."
  Exchanges Info - Exchange Info object:
    type: "object"
    required:
    - "date_launched"
    - "description"
    - "id"
    - "logo"
    - "name"
    - "notice"
    - "slug"
    - "urls"
    properties:
      id:
        type: "integer"
        example: 1
        description: "The unique CoinMarketCap ID for this exchange."
      name:
        type: "string"
        example: "Binance"
        description: "The name of this exchange."
      slug:
        type: "string"
        example: "binance"
        description: "The web URL friendly shorthand version of the exchange name."
      logo:
        type: "string"
        example: "https://s2.coinmarketcap.com/static/img/exchanges/64x64/270.png"
        description: "Link to a CoinMarketCap hosted logo png for this exchange. 64px\
          \ is default size returned. Replace \"64x64\" in the image path with these\
          \ alternative sizes: 16, 32, 64, 128, 200"
        x-format:
          uri: true
      description:
        type: "string"
        example: "Launched in Jul-2017, Binance is a centralized exchange based in\
          \ Malta."
        description: "A CoinMarketCap supplied brief description of this cryptocurrency\
          \ exchange. This field will return null if a description is not available."
      date_launched:
        type: "string"
        format: "date"
        example: "2017-07-14T00:00:00.000Z"
        description: "Timestamp (ISO 8601) of the launch date for this exchange."
      notice:
        type: "string"
        description: "A [Markdown](https://commonmark.org/help/) formatted message\
          \ outlining a condition that is impacting the availability of the exchange's\
          \ market data or the secure use of the exchange, otherwise null. This may\
          \ include a maintenance event on the exchange's end or CoinMarketCap's end,\
          \ an alert about reported issues with withdrawls from this exchange, or\
          \ another condition that may be impacting the exchange and it's markets.\
          \ If present, this notice is also displayed in an alert banner at the top\
          \ of the exchange's page on coinmarketcap.com."
      weekly_visits:
        type: "number"
        example: 1000.0
        description: "The number of weekly visitors."
      spot_volume_usd:
        type: "number"
        example: 7.68478308529847E8
        description: "Reported all time spot volume in the specified currency."
      urls:
        description: "An object containing various resource URLs for this exchange."
        $ref: "#/definitions/Exchanges Info - URLs object"
    description: "A results object for each exchange requested. The map key being\
      \ the id or slug used in the request."
  Exchanges Info - Results map:
    type: "object"
    required:
    - "$key"
    properties:
      $key:
        description: "A results object for each exchange requested. The map key being\
          \ the id or slug used in the request."
        $ref: "#/definitions/Exchanges Info - Exchange Info object"
    description: "Results of your query returned as an object map."
    example:
      "270":
        id: 270
        name: "Binance"
        slug: "binance"
        logo: "https://s2.coinmarketcap.com/static/img/exchanges/64x64/270.png"
        description: "Launched in Jul-2017, Binance is a centralized exchange based\
          \ in Malta."
        date_launched: "2017-07-14T00:00:00.000Z"
        countries: []
        fiats:
        - "AED"
        - "USD"
        type: ""
        maker_fee: 0.02
        taker_fee: 0.04
        weekly_visits: 5123451
        spot_volume_usd: 6.692628349860113E10
        spot_volume_last_updated: "2021-05-06T01:20:15.451Z"
        urls:
          website:
          - "https://www.binance.com/"
          twitter:
          - "https://twitter.com/binance"
          blog: []
          chat:
          - "https://t.me/binanceexchange"
          fee:
          - "https://www.binance.com/fees.html"
  Exchanges Info - Response Model:
    type: "object"
    required:
    - "data"
    properties:
      data:
        description: "Results of your query returned as an object map."
        $ref: "#/definitions/Exchanges Info - Results map"
      status:
        description: "Standardized status object for API calls."
        $ref: "#/definitions/API Status Object"
    example:
      data:
        "270":
          id: 270
          name: "Binance"
          slug: "binance"
          logo: "https://s2.coinmarketcap.com/static/img/exchanges/64x64/270.png"
          description: "Launched in Jul-2017, Binance is a centralized exchange based\
            \ in Malta."
          date_launched: "2017-07-14T00:00:00.000Z"
          countries: []
          fiats:
          - "AED"
          - "USD"
          type: ""
          maker_fee: 0.02
          taker_fee: 0.04
          weekly_visits: 5123451
          spot_volume_usd: 6.692628349860113E10
          spot_volume_last_updated: "2021-05-06T01:20:15.451Z"
          urls:
            website:
            - "https://www.binance.com/"
            twitter:
            - "https://twitter.com/binance"
            blog: []
            chat:
            - "https://t.me/binanceexchange"
            fee:
            - "https://www.binance.com/fees.html"
      status:
        error_message: ""
        elapsed: 10
        credit_count: 1
        error_code: 0
        timestamp: "2022-09-16T12:55:54.015Z"
  Exchange Map - Exchange Object:
    type: "object"
    required:
    - "id"
    - "name"
    - "slug"
    properties:
      id:
        type: "integer"
        example: 270
        description: "The unique CoinMarketCap ID for this exchange."
      name:
        type: "string"
        example: "Binance"
        description: "The name of this exchange."
      slug:
        type: "string"
        example: "binance"
        description: "The web URL friendly shorthand version of this exchange name."
      is_active:
        type: "integer"
        example: 1
        description: "1 if this exchange is still being actively tracked and updated,\
          \ otherwise 0."
        minimum: 0
        maximum: 1
      status:
        type: "string"
        example: "active"
        description: "The listing status of the exchange. *This field is only returned\
          \ if requested through the `aux` request parameter.*"
        enum:
        - "active"
        - "inactive"
        - "untracked"
      first_historical_data:
        type: "string"
        format: "date"
        example: "2018-04-26T00:45:00.000Z"
        description: "Timestamp (ISO 8601) of the earliest market data record available\
          \ to query using our historical endpoints. `null` if there is no historical\
          \ data currently available for this exchange."
      last_historical_data:
        type: "string"
        format: "date"
        example: "2019-06-02T21:25:00.000Z"
        description: "Timestamp (ISO 8601) of the latest market data record available\
          \ to query using our historical endpoints. `null` if there is no historical\
          \ data currently available for this exchange."
    description: "Exchange object description"
  Exchange Map - Exchanges Array:
    type: "array"
    description: "Array of exchange object results."
    items:
      description: "Exchange object description"
      $ref: "#/definitions/Exchange Map - Exchange Object"
  Exchange Map - Response Model:
    type: "object"
    required:
    - "data"
    properties:
      data:
        description: "Array of exchange object results."
        $ref: "#/definitions/Exchange Map - Exchanges Array"
      status:
        description: "Standardized status object for API calls."
        $ref: "#/definitions/API Status Object"
    example:
      data: ""
      status:
        error_message: ""
        elapsed: 10
        credit_count: 1
        error_code: 0
        timestamp: "2022-09-16T12:55:54.015Z"
  Fiat Map - Fiat Object:
    type: "object"
    required:
    - "id"
    - "name"
    - "sign"
    - "symbol"
    properties:
      id:
        type: "integer"
        example: 2781
        description: "The unique CoinMarketCap ID for this asset."
      name:
        type: "string"
        example: "United States Dollar"
        description: "The name of this asset."
      sign:
        type: "string"
        example: "$"
        description: "The currency sign for this asset."
      symbol:
        type: "string"
        example: "USD"
        description: "The ticker symbol for this asset, always in all caps."
    description: "Fiat object for each result"
  Fiat Map - Fiat Array:
    type: "array"
    description: "Array of fiat object results."
    items:
      description: "Fiat object for each result"
      $ref: "#/definitions/Fiat Map - Fiat Object"
  Fiat Map - Response Model:
    type: "object"
    required:
    - "data"
    properties:
      data:
        description: "Array of fiat object results."
        $ref: "#/definitions/Fiat Map - Fiat Array"
      status:
        description: "Standardized status object for API calls."
        $ref: "#/definitions/API Status Object"
    example:
      data:
      - id: 2781
        name: "United States Dollar"
        sign: "$"
        symbol: "USD"
      - id: 2787
        name: "Chinese Yuan"
        sign: "¥"
        symbol: "CNY"
      - id: 2781
        name: "South Korean Won"
        sign: "₩"
        symbol: "KRW"
      status:
        timestamp: "2020-01-07T22:51:28.209Z"
        error_code: 0
        error_message: ""
        elapsed: 3
        credit_count: 1
  plan:
    type: "object"
    required:
    - "credit_limit_daily"
    - "credit_limit_daily_reset"
    - "credit_limit_daily_reset_timestamp"
    - "credit_limit_monthly"
    - "credit_limit_monthly_reset"
    - "credit_limit_monthly_reset_timestamp"
    - "rate_limit_minute"
    properties:
      credit_limit_daily:
        type: "number"
        example: 4000.0
        description: "The number of API credits that can be used each daily period\
          \ before receiving a HTTP 429 rate limit error. This limit is based on the\
          \ API plan tier."
      credit_limit_daily_reset:
        type: "string"
        example: "In 19 hours, 56 minutes"
        description: "A human readable countdown of when the API key daily credit\
          \ limit will reset back to 0."
      credit_limit_daily_reset_timestamp:
        type: "string"
        format: "date"
        example: "2019-08-29T00:00:00.000Z"
        description: "Timestamp (ISO 8601) of when the daily credit limit will reset.\
          \ This is based on your billing plan activation date for premium subscription\
          \ based keys or UTC midnight for free Basic plan keys."
      credit_limit_monthly:
        type: "number"
        example: 120000.0
        description: "The number of API credits that can be used each monthly period\
          \ before receiving a HTTP 429 rate limit error. This limit is based on the\
          \ API plan tier."
      credit_limit_monthly_reset:
        type: "string"
        example: "In 3 days, 19 hours, 56 minutes"
        description: "A human readable countdown of when the API key monthly credit\
          \ limit will reset back to 0."
      credit_limit_monthly_reset_timestamp:
        type: "string"
        format: "date"
        example: "2019-09-01T00:00:00.000Z"
        description: "Timestamp (ISO 8601) of when the monthly credit limit will reset.\
          \ This is based on your billing plan activation date for premium subscription\
          \ based keys or calendar month UTC midnight for free Basic plan keys."
      rate_limit_minute:
        type: "number"
        example: 60.0
        description: "The number of API calls that can be made within the same UTC\
          \ minute before receiving a HTTP 429 rate limit error. This limit is based\
          \ on the API plan tier."
    description: "Object containing rate limit and daily/monthly credit limit details\
      \ for your API Key."
    example:
      credit_limit_daily: 4000.0
      credit_limit_monthly_reset: "In 3 days, 19 hours, 56 minutes"
      credit_limit_monthly: 120000.0
      rate_limit_minute: 60.0
      credit_limit_daily_reset: "In 19 hours, 56 minutes"
      credit_limit_daily_reset_timestamp: "2019-08-29T00:00:00.000Z"
      credit_limit_monthly_reset_timestamp: "2019-09-01T00:00:00.000Z"
  current_minute:
    type: "object"
    required:
    - "requests_left"
    - "requests_made"
    properties:
      requests_made:
        type: "number"
        example: 1.0
        description: "The number of API calls that have been made in the current UTC\
          \ minute."
      requests_left:
        type: "number"
        example: 59.0
        description: "The number of remaining API calls that can be made in the current\
          \ UTC minute before receiving a HTTP 429 rate limit error. This limit resets\
          \ each UTC minute."
    description: "Usage stats around the minute based rate limit."
    example:
      requests_left: 59.0
      requests_made: 1.0
  current_day:
    type: "object"
    required:
    - "credits_left"
    - "credits_used"
    properties:
      credits_used:
        type: "number"
        example: 1.0
        description: "The number of API credits used during the current daily period."
      credits_left:
        type: "number"
        example: 3999.0
        description: "The number of remaining API credits that can be used during\
          \ the current daily period before receiving a HTTP 429 rate limit error.\
          \ This limit resets at the end of each daily period."
    description: "Usage stats around the daily API credit limit."
    example:
      credits_left: 3999.0
      credits_used: 1.0
  current_month:
    type: "object"
    required:
    - "credits_left"
    - "credits_used"
    properties:
      credits_used:
        type: "number"
        example: 1.0
        description: "The number of API credits used during the current monthly period."
      credits_left:
        type: "number"
        example: 119999.0
        description: "The number of remaining API credits that can be used during\
          \ the current monthly period before receiving a HTTP 429 rate limit error.\
          \ This limit resets at the end of each monthly period."
    description: "Usage stats around the monthly API credit limit."
    example:
      credits_left: 119999.0
      credits_used: 1.0
  usage:
    type: "object"
    required:
    - "current_day"
    - "current_minute"
    - "current_month"
    properties:
      current_minute:
        description: "Usage stats around the minute based rate limit."
        $ref: "#/definitions/current_minute"
      current_day:
        description: "Usage stats around the daily API credit limit."
        $ref: "#/definitions/current_day"
      current_month:
        description: "Usage stats around the monthly API credit limit."
        $ref: "#/definitions/current_month"
    description: "Object containing live usage details about your API Key."
    example:
      current_minute:
        requests_left: 59.0
        requests_made: 1.0
      current_month:
        credits_left: 119999.0
        credits_used: 1.0
      current_day:
        credits_left: 3999.0
        credits_used: 1.0
  Account Info - Response Object:
    type: "object"
    required:
    - "plan"
    - "usage"
    properties:
      plan:
        description: "Object containing rate limit and daily/monthly credit limit\
          \ details for your API Key."
        $ref: "#/definitions/plan"
      usage:
        description: "Object containing live usage details about your API Key."
        $ref: "#/definitions/usage"
    description: "Details about your API key are returned in this object."
    example:
      usage:
        current_minute:
          requests_left: 59.0
          requests_made: 1.0
        current_month:
          credits_left: 119999.0
          credits_used: 1.0
        current_day:
          credits_left: 3999.0
          credits_used: 1.0
      plan:
        credit_limit_daily: 4000.0
        credit_limit_monthly_reset: "In 3 days, 19 hours, 56 minutes"
        credit_limit_monthly: 120000.0
        rate_limit_minute: 60.0
        credit_limit_daily_reset: "In 19 hours, 56 minutes"
        credit_limit_daily_reset_timestamp: "2019-08-29T00:00:00.000Z"
        credit_limit_monthly_reset_timestamp: "2019-09-01T00:00:00.000Z"
  Account Info - Response Model:
    type: "object"
    required:
    - "data"
    properties:
      data:
        description: "Details about your API key are returned in this object."
        $ref: "#/definitions/Account Info - Response Object"
      status:
        description: "Standardized status object for API calls."
        $ref: "#/definitions/API Status Object"
    example:
      data:
        usage:
          current_minute:
            requests_left: 59.0
            requests_made: 1.0
          current_month:
            credits_left: 119999.0
            credits_used: 1.0
          current_day:
            credits_left: 3999.0
            credits_used: 1.0
        plan:
          credit_limit_daily: 4000.0
          credit_limit_monthly_reset: "In 3 days, 19 hours, 56 minutes"
          credit_limit_monthly: 120000.0
          rate_limit_minute: 60.0
          credit_limit_daily_reset: "In 19 hours, 56 minutes"
          credit_limit_daily_reset_timestamp: "2019-08-29T00:00:00.000Z"
          credit_limit_monthly_reset_timestamp: "2019-09-01T00:00:00.000Z"
      status:
        error_message: ""
        elapsed: 10
        credit_count: 1
        error_code: 0
        timestamp: "2022-09-16T12:55:54.015Z"
  Tools Price Conversion - Quote object:
    type: "object"
    required:
    - "last_updated"
    - "price"
    properties:
      price:
        type: "number"
        example: 1235000.0
        description: "Converted price in terms of the quoted currency and historic\
          \ time (if supplied)."
      last_updated:
        type: "string"
        format: "date"
        example: "2018-06-02T00:00:00.000Z"
        description: "Timestamp (ISO 8601) of when the destination currency's market\
          \ value was recorded."
    description: "A quote object for each conversion requested. The map key being\
      \ the id/symbol used in the request."
  Tools Price Conversion - Quotes map:
    type: "object"
    required:
    - "$key"
    properties:
      $key:
        description: "A quote object for each conversion requested. The map key being\
          \ the id/symbol used in the request."
        $ref: "#/definitions/Tools Price Conversion - Quote object"
    description: "An object map of price conversions."
  Tools Price Conversion - Results Object:
    type: "object"
    required:
    - "amount"
    - "id"
    - "last_updated"
    - "name"
    - "quote"
    - "symbol"
    properties:
      id:
        type: "integer"
        example: 1
        description: "The unique CoinMarketCap ID for your base currency."
      name:
        type: "string"
        example: "Bitcoin"
        description: "The name of your base currency."
      symbol:
        type: "string"
        example: "BTC"
        description: "The symbol for your base currency."
      amount:
        type: "number"
        example: 50.0
        description: "Amount of base currency to convert from."
      last_updated:
        type: "string"
        format: "date"
        example: "2018-06-02T00:00:00.000Z"
        description: "Timestamp (ISO 8601) of when the referenced market value of\
          \ the base currency was recorded."
      quote:
        description: "An object map of price conversions."
        $ref: "#/definitions/Tools Price Conversion - Quotes map"
    description: "Results object for your API call."
    example:
      symbol: "BTC"
      id: "1"
      name: "Bitcoin"
      amount: 50
      last_updated: "2018-06-06T08:04:36.000Z"
      quote:
        GBP:
          price: 284656.08465608465
          last_updated: "2018-06-06T06:00:00.000Z"
        LTC:
          price: 3128.7279766396537
          last_updated: "2018-06-06T08:04:02.000Z"
        USD:
          price: 381442
          last_updated: "2018-06-06T08:06:51.968Z"
  Tools Price Conversion - Response Model:
    type: "object"
    required:
    - "data"
    properties:
      data:
        description: "Results object for your API call."
        $ref: "#/definitions/Tools Price Conversion - Results Object"
      status:
        description: "Standardized status object for API calls."
        $ref: "#/definitions/API Status Object"
    example:
      data:
        symbol: "BTC"
        id: "1"
        name: "Bitcoin"
        amount: 50
        last_updated: "2018-06-06T08:04:36.000Z"
        quote:
          GBP:
            price: 284656.08465608465
            last_updated: "2018-06-06T06:00:00.000Z"
          LTC:
            price: 3128.7279766396537
            last_updated: "2018-06-06T08:04:02.000Z"
          USD:
            price: 381442
            last_updated: "2018-06-06T08:06:51.968Z"
      status:
        error_message: ""
        elapsed: 10
        credit_count: 1
        error_code: 0
        timestamp: "2022-09-16T12:55:54.015Z"
  Blockchain Statistics Latest - Blockchain object:
    type: "object"
    required:
    - "block_reward_static"
    - "consensus_mechanism"
    - "difficulty"
    - "first_block_timestamp"
    - "hashrate_24h"
    - "id"
    - "pending_transactions"
    - "reduction_rate"
    - "slug"
    - "symbol"
    - "total_blocks"
    - "total_transactions"
    - "tps_24h"
    properties:
      id:
        type: "integer"
        example: 1
        description: "The unique CoinMarketCap ID for this blockchain's cryptocurrency."
      slug:
        type: "string"
        example: "bitcoin"
        description: "The web URL friendly shorthand version of the cryptocurrency's\
          \ name."
      symbol:
        type: "string"
        example: "BTC"
        description: "The ticker symbol for the cryptocurrency."
      block_reward_static:
        type: "number"
        example: 12.5
        description: "The reward assigned to the miner of a block excluding fees."
      consensus_mechanism:
        type: "string"
        example: "proof-of-work"
        description: "The consensus mechanism used by the blockchain, for example,\
          \ \"proof-of-work\" or \"proof-of-stake\"."
      difficulty:
        type: "string"
        example: "2264398029247833"
        description: "The global block difficulty determining how hard to find a hash\
          \ on this blockchain. *Note: This integer is returned as a string to use\
          \ with BigInt libraries as it may exceed the max safe integer size for many\
          \ programming languages.*"
      hashrate_24h:
        type: "string"
        example: "169267882822616"
        description: "The average hashrate over the past 24 hours. *Note: This integer\
          \ is returned as a string to use with BigInt libraries as it may exceed\
          \ the max safe integer size for many programming languages.*"
      pending_transactions:
        type: "integer"
        example: 5120
        description: "The number of pending transactions."
      reduction_rate:
        type: "string"
        example: "50%"
        description: "The rate the block reward is adjusted at a specified interval."
      total_blocks:
        type: "integer"
        example: 8385036
        description: "The total number of blocks."
      total_transactions:
        type: "string"
        example: "523059480"
        description: "The total number of transactions. *Note: This integer is returned\
          \ as a string to use with BigInt libraries as it may exceed the max safe\
          \ integer size for many programming languages.*"
      tps_24h:
        type: "number"
        example: 8.463935185185186
        description: "The average transactions per second over the past 24 hours."
      first_block_timestamp:
        type: "string"
        format: "date"
        example: "2009-01-09T02:54:25.000Z"
        description: "Timestamp (ISO 8601) of the time the first block was mined on\
          \ this chain."
    description: "A blockchain object for every blockchain that matched list options."
  Blockchain Statistics Latest - Results map:
    type: "object"
    required:
    - "$key"
    properties:
      $key:
        description: "A blockchain object for every blockchain that matched list options."
        $ref: "#/definitions/Blockchain Statistics Latest - Blockchain object"
    description: "A map of blockchain objects by ID, symbol, or slug (as used in query\
      \ parameters)."
    example:
      BTC:
        id: 1
        slug: "bitcoin"
        symbol: "BTC"
        block_reward_static: 12.5
        consensus_mechanism: "proof-of-work"
        difficulty: "11890594958796"
        hashrate_24h: "85116194130018810000"
        pending_transactions: 1177
        reduction_rate: "50%"
        total_blocks: 595165
        total_transactions: "455738994"
        tps_24h: 3.808090277777778
        first_block_timestamp: "2009-01-09T02:54:25.000Z"
  Blockchain Statistics Latest - Response Model:
    type: "object"
    required:
    - "data"
    properties:
      data:
        description: "A map of blockchain objects by ID, symbol, or slug (as used\
          \ in query parameters)."
        $ref: "#/definitions/Blockchain Statistics Latest - Results map"
      status:
        description: "Standardized status object for API calls."
        $ref: "#/definitions/API Status Object"
    example:
      data:
        BTC:
          id: 1
          slug: "bitcoin"
          symbol: "BTC"
          block_reward_static: 12.5
          consensus_mechanism: "proof-of-work"
          difficulty: "11890594958796"
          hashrate_24h: "85116194130018810000"
          pending_transactions: 1177
          reduction_rate: "50%"
          total_blocks: 595165
          total_transactions: "455738994"
          tps_24h: 3.808090277777778
          first_block_timestamp: "2009-01-09T02:54:25.000Z"
      status:
        error_message: ""
        elapsed: 10
        credit_count: 1
        error_code: 0
        timestamp: "2022-09-16T12:55:54.015Z"
  owner:
    type: "object"
    properties:
      nickname:
        type: "string"
      avatar_url:
        type: "string"
  photos:
    type: "array"
    items:
      type: "string"
  Model 2:
    type: "object"
    required:
    - "owner"
    properties:
      post_id:
        type: "string"
      owner:
        $ref: "#/definitions/owner"
      text_content:
        type: "string"
      photos:
        $ref: "#/definitions/photos"
      comment_count:
        type: "string"
      like_count:
        type: "string"
      post_time:
        type: "string"
      language_code:
        type: "string"
      comments_url:
        type: "string"
        description: "Returns comments of the current post/comment"
  Content Post Comments - Results array:
    type: "array"
    description: "Array of content objects."
    items:
      $ref: "#/definitions/Model 2"
  Content Post Comments - Response Model:
    type: "object"
    required:
    - "data"
    properties:
      data:
        description: "Array of content objects."
        $ref: "#/definitions/Content Post Comments - Results array"
      status:
        description: "Standardized status object for API calls."
        $ref: "#/definitions/API Status Object"
    example:
      data:
      - post_id: "317807035"
        owner:
          nickname: "Amy"
          avatar_url: "https://s3.coinmarketcap.com/static/img/portraits/61359449293ccc2c4bcf07c7.png"
        text_content: "Someone's working on it!!"
        photos: []
        comment_count: "0"
        like_count: "0"
        post_time: "1662640110429"
        language_code: "en"
      - post_id: "317807862"
        owner:
          nickname: "Wanda"
          avatar_url: "https://s3.coinmarketcap.com/static/img/portraits/6136cf1015b8f3308e283073.png"
        text_content: "yes sir!!"
        photos: []
        comment_count: "0"
        like_count: "0"
        post_time: "1662635039889"
        language_code: "en"
      status:
        timestamp: "2022-09-08T16:07:30.033Z"
        error_code: "0"
        error_message: "SUCCESS"
        elapsed: "0"
        credit_count: 0
  Model 3:
    type: "object"
    properties:
      id:
        type: "number"
      symbol:
        type: "string"
      slug:
        type: "string"
  currencies:
    type: "array"
    items:
      $ref: "#/definitions/Model 3"
  Model 4:
    type: "object"
    required:
    - "owner"
    properties:
      post_id:
        type: "string"
      owner:
        $ref: "#/definitions/owner"
      text_content:
        type: "string"
      photos:
        $ref: "#/definitions/photos"
      comment_count:
        type: "string"
      like_count:
        type: "string"
      post_time:
        type: "string"
      currencies:
        $ref: "#/definitions/currencies"
      language_code:
        type: "string"
      comments_url:
        type: "string"
        description: "Returns comments of the current post/comment"
  list:
    type: "array"
    items:
      $ref: "#/definitions/Model 4"
  Content Top Posts - Results:
    type: "object"
    properties:
      list:
        $ref: "#/definitions/list"
      last_score:
        type: "number"
    description: "Cntent objects."
  Content Latest Posts - Response Model:
    type: "object"
    required:
    - "data"
    properties:
      data:
        description: "Cntent objects."
        $ref: "#/definitions/Content Top Posts - Results"
    example:
      data:
        list:
        - post_id: "123456789"
          comments_url: "{{baseUrl}}/v1/content/posts/comments?post_id=123456789"
          owner:
            nickname: "CoinMarketCap"
            avatar_url: "https://s3.coinmarketcap.com/static/img/portraits/621c22097aafe46422aa1161.png"
          text_content: "$ETH regardless of merging or not merging..."
          photos:
          - "https://s3.coinmarketcap.com/static/img/portraits/621c22097aafe46422aa1161.png"
          comment_count: "5"
          like_count: "5"
          post_time: "1662643031298"
          currencies:
          - id: 1027
            symbol: "ETH"
            slug: "ethereum"
          language_code: "en"
        - post_id: "123456790"
          comments_url: "{{baseUrl}}/v1/content/posts/comments?post_id=123456790"
          owner:
            nickname: "John"
            avatar_url: "https://s3.coinmarketcap.com/static/img/portraits/61b9aaca1d79d0637758fdeb.png"
          text_content: "$ETH The success and the failure are almost..."
          photos:
          - "https://s3.coinmarketcap.com/static/img/portraits/621c22097aafe46422aa1161.png"
          comment_count: "6"
          like_count: "60"
          post_time: "1662612816768"
          currencies:
          - id: 1027
            symbol: "ETH"
            slug: "ethereum"
          repost_count: "0"
          language_code: "en"
        last_score: "1662903634322"
      status:
        timestamp: "2022-09-08T16:08:52.641Z"
        error_code: "0"
        error_message: "SUCCESS"
        elapsed: "0"
        credit_count: 0
  Content Top Posts - Response Model:
    type: "object"
    required:
    - "data"
    properties:
      data:
        description: "Cntent objects."
        $ref: "#/definitions/Content Top Posts - Results"
      status:
        description: "Standardized status object for API calls."
        $ref: "#/definitions/API Status Object"
    example:
      data:
        list:
        - post_id: "123456789"
          comments_url: "{{baseUrl}}/v1/content/posts/comments?post_id=123456789"
          owner:
            nickname: "CoinMarketCap"
            avatar_url: "https://s3.coinmarketcap.com/static/img/portraits/621c22097aafe46422aa1161.png"
          text_content: "$ETH regardless of merging or not merging..."
          photos:
          - "https://s3.coinmarketcap.com/static/img/portraits/621c22097aafe46422aa1161.png"
          comment_count: "5"
          like_count: "5"
          post_time: "1662643031298"
          currencies:
          - id: 1027
            symbol: "ETH"
            slug: "ethereum"
          language_code: "en"
        - post_id: "123456790"
          comments_url: "{{baseUrl}}/v1/content/posts/comments?post_id=123456790"
          owner:
            nickname: "John"
            avatar_url: "https://s3.coinmarketcap.com/static/img/portraits/61b9aaca1d79d0637758fdeb.png"
          text_content: "$ETH The success and the failure are almost..."
          photos:
          - "https://s3.coinmarketcap.com/static/img/portraits/621c22097aafe46422aa1161.png"
          comment_count: "6"
          like_count: "60"
          post_time: "1662612816768"
          currencies:
          - id: 1027
            symbol: "ETH"
            slug: "ethereum"
          repost_count: "0"
          language_code: "en"
        last_score: "38507.8865"
      status:
        timestamp: "2022-09-08T16:08:52.641Z"
        error_code: "0"
        error_message: "SUCCESS"
        elapsed: "0"
        credit_count: 0
  Cryptocurrency Listings Latest - Quote object:
    type: "object"
    required:
    - "last_updated"
    - "market_cap"
    - "percent_change_1h"
    - "percent_change_24h"
    - "percent_change_7d"
    - "price"
    - "volume_24h"
    properties:
      price:
        type: "number"
        example: 7139.82
        description: "Price in the specified currency at the end of the requested\
          \ UTC day."
      volume_24h:
        type: "number"
        example: 4.88588E9
        description: "24 hour adjusted volume in the specified currency at the end\
          \ of the requested UTC day."
      market_cap:
        type: "number"
        example: 1.21020662982E11
        description: "Market cap in the specified currency at the end of the requested\
          \ UTC day."
      percent_change_1h:
        type: "number"
        example: 0.03
        description: "1 hour change in the specified currency at the end of the requested\
          \ UTC day."
      percent_change_24h:
        type: "number"
        example: 5.75
        description: "24 hour change in the specified currency at the end of the requested\
          \ UTC day."
      percent_change_7d:
        type: "number"
        example: -19.64
        description: "7 day change in the specified currency at the end of the requested\
          \ UTC day."
      last_updated:
        type: "string"
        format: "date"
        example: "2018-06-02T23:59:59.999Z"
        description: "Timestamp (ISO 8601) of when the conversion currency's current\
          \ value was referenced."
    description: "A market quote in the currency conversion option."
  Cryptocurrency Listings Latest - Quote map:
    type: "object"
    required:
    - "$key"
    properties:
      $key:
        description: "A market quote in the currency conversion option."
        $ref: "#/definitions/Cryptocurrency Listings Latest - Quote object"
    description: "A map of market quotes in different currency conversions. The default\
      \ map included is USD."
    example:
      USD:
        price: 9283.92
        volume_24h: 7155680000
        percent_change_1h: -0.152774
        percent_change_24h: 0.518894
        percent_change_7d: 0.986573
        market_cap: 158055024432
      BTC:
        price: 1
        volume_24h: 772012
        percent_change_1h: 0
        percent_change_24h: 0
        percent_change_7d: 0
        market_cap: 17024600
  Cryptocurrency Listings Latest - Cryptocurrency object:
    type: "object"
    required:
    - "circulating_supply"
    - "cmc_rank"
    - "date_added"
    - "id"
    - "last_updated"
    - "max_supply"
    - "name"
    - "platform"
    - "quote"
    - "slug"
    - "symbol"
    - "tags"
    - "total_supply"
    properties:
      id:
        type: "integer"
        example: 1
        description: "The unique CoinMarketCap ID for this cryptocurrency."
      name:
        type: "string"
        example: "Bitcoin"
        description: "The name of this cryptocurrency."
      symbol:
        type: "string"
        example: "BTC"
        description: "The ticker symbol for this cryptocurrency."
      slug:
        type: "string"
        example: "bitcoin"
        description: "The web URL friendly shorthand version of this cryptocurrency\
          \ name."
      cmc_rank:
        type: "integer"
        example: 5
        description: "The cryptocurrency's historic CoinMarketCap rank at the end\
          \ of the requested UTC day."
      num_market_pairs:
        type: "integer"
        example: 500
        description: "The number of active trading pairs available for this cryptocurrency\
          \ across supported exchanges."
      circulating_supply:
        type: "number"
        example: 1.69501E7
        description: "The approximate number of coins circulating for this cryptocurrency\
          \ at the end of the requested UTC day."
      total_supply:
        type: "number"
        example: 1.69501E7
        description: "The approximate total amount of coins in existence right now\
          \ (minus any coins that have been verifiably burned) at the end of the requested\
          \ UTC day."
      max_supply:
        type: "number"
        example: 2.1E7
        description: "The expected maximum limit of coins ever to be available for\
          \ this cryptocurrency."
      last_updated:
        type: "string"
        format: "date"
        example: "2018-06-02T22:51:28.209Z"
        description: "Timestamp (ISO 8601) of when this cryptocurrency's market data\
          \ was referenced for this UTC date snapshot. This is always the last update\
          \ available during the UTC date requested."
      date_added:
        type: "string"
        format: "date"
        example: "2013-04-28T00:00:00.000Z"
        description: "Timestamp (ISO 8601) of when this cryptocurrency was added to\
          \ CoinMarketCap."
      tags:
        description: "Array of tags associated with this cryptocurrency. Currently\
          \ only a mineable tag will be returned if the cryptocurrency is mineable.\
          \ Additional tags will be returned in the future."
        $ref: "#/definitions/tags"
      platform:
        description: "Metadata about the parent cryptocurrency platform this cryptocurrency\
          \ belongs to if it is a token, otherwise null."
        $ref: "#/definitions/platform"
      quote:
        description: "A map of market quotes in different currency conversions. The\
          \ default map included is USD."
        $ref: "#/definitions/Cryptocurrency Listings Latest - Quote map"
    description: "A cryptocurrency object for every cryptocurrency that matched list\
      \ options."
  Cryptocurrency Listings Latest - Results array:
    type: "array"
    description: "Array of cryptocurrency objects matching the list options."
    items:
      description: "A cryptocurrency object for every cryptocurrency that matched\
        \ list options."
      $ref: "#/definitions/Cryptocurrency Listings Latest - Cryptocurrency object"
  Cryptocurrency Listings Latest - Response Model:
    type: "object"
    required:
    - "data"
    properties:
      data:
        description: "Array of cryptocurrency objects matching the list options."
        $ref: "#/definitions/Cryptocurrency Listings Latest - Results array"
      status:
        description: "Standardized status object for API calls."
        $ref: "#/definitions/API Status Object"
    example:
      data:
      - id: 1
        name: "Bitcoin"
        symbol: "BTC"
        slug: "bitcoin"
        cmc_rank: 1
        num_market_pairs: 500
        circulating_supply: 17200062
        total_supply: 17200062
        max_supply: 21000000
        last_updated: "2018-06-02T22:51:28.209Z"
        date_added: "2013-04-28T00:00:00.000Z"
        tags:
        - "mineable"
        quote:
          USD:
            price: 9283.92
            volume_24h: 7155680000
            percent_change_1h: -0.152774
            percent_change_24h: 0.518894
            percent_change_7d: 0.986573
            market_cap: 158055024432
            last_updated: "2018-08-09T22:53:32.000Z"
          BTC:
            price: 1
            volume_24h: 772012
            percent_change_1h: 0
            percent_change_24h: 0
            percent_change_7d: 0
            market_cap: 17024600
            last_updated: "2018-08-09T22:53:32.000Z"
      - id: 1027
        name: "Ethereum"
        symbol: "ETH"
        slug: "ethereum"
        num_market_pairs: 6089
        circulating_supply: 17200062
        total_supply: 17200062
        max_supply: 21000000
        last_updated: "2018-06-02T22:51:28.209Z"
        date_added: "2013-04-28T00:00:00.000Z"
        tags:
        - "mineable"
        quote:
          USD:
            price: 1678.6501384942708
            volume_24h: 7155680000
            percent_change_1h: -0.152774
            percent_change_24h: 0.518894
            percent_change_7d: 0.986573
            market_cap: 158055024432
            last_updated: "2018-08-09T22:53:32.000Z"
          ETH:
            price: 1
            volume_24h: 772012
            percent_change_1h: 0
            percent_change_24h: 0
            percent_change_7d: 0
            market_cap: 17024600
            last_updated: "2018-08-09T22:53:32.000Z"
      status:
        timestamp: "2019-04-02T22:44:24.200Z"
        error_code: 0
        error_message: ""
        elapsed: 10
        credit_count: 1
  Cryptocurrency Listings Latest - Quote object 1:
    type: "object"
    required:
    - "fully_diluted_market_cap"
    - "last_updated"
    - "market_cap"
    - "market_cap_dominance"
    - "percent_change_1h"
    - "percent_change_24h"
    - "percent_change_7d"
    - "price"
    - "volume_24h"
    properties:
      price:
        type: "number"
        example: 7139.82
        description: "Price in the specified currency for this historical."
      volume_24h:
        type: "number"
        example: 4.88588E9
        description: "Rolling 24 hour adjusted volume in the specified currency."
      volume_change_24h:
        type: "number"
        example: 5.75
        description: "24 hour change in the specified currencies volume."
      volume_24h_reported:
        type: "number"
        example: 4.88588E9
        description: "Rolling 24 hour reported volume in the specified currency. *This\
          \ field is only returned if requested through the `aux` request parameter.*"
      volume_7d:
        type: "number"
        example: 4.88588E9
        description: "Rolling 7 day adjusted volume in the specified currency. *This\
          \ field is only returned if requested through the `aux` request parameter.*"
      volume_7d_reported:
        type: "number"
        example: 4.88588E9
        description: "Rolling 7 day reported volume in the specified currency. *This\
          \ field is only returned if requested through the `aux` request parameter.*"
      volume_30d:
        type: "number"
        example: 4.88588E9
        description: "Rolling 30 day adjusted volume in the specified currency. *This\
          \ field is only returned if requested through the `aux` request parameter.*"
      volume_30d_reported:
        type: "number"
        example: 4.88588E9
        description: "Rolling 30 day reported volume in the specified currency. *This\
          \ field is only returned if requested through the `aux` request parameter.*"
      market_cap:
        type: "number"
        example: 1.21020662982E11
        description: "Market cap in the specified currency."
      market_cap_dominance:
        type: "number"
        example: 1.21020662982E11
        description: "Market cap dominance in the specified currency."
      fully_diluted_market_cap:
        type: "number"
        example: 1.21020662982E11
        description: "Fully diluted market cap in the specified currency."
      tvl:
        type: "number"
        example: 0.0
        description: "Total Value Locked"
      percent_change_1h:
        type: "number"
        example: 0.03
        description: "1 hour change in the specified currency."
      percent_change_24h:
        type: "number"
        example: 5.75
        description: "24 hour change in the specified currency."
      percent_change_7d:
        type: "number"
        example: -19.64
        description: "7 day change in the specified currency."
      last_updated:
        type: "string"
        format: "date"
        example: "2018-06-02T23:59:59.999Z"
        description: "Timestamp (ISO 8601) of when the conversion currency's current\
          \ value was referenced."
    description: "A market quote in the currency conversion option."
  Cryptocurrency Listings Latest - Quote map 1:
    type: "object"
    required:
    - "$key"
    properties:
      $key:
        description: "A market quote in the currency conversion option."
        $ref: "#/definitions/Cryptocurrency Listings Latest - Quote object 1"
    description: "A map of market quotes in different currency conversions. The default\
      \ map included is USD."
    example:
      USD:
        price: 9283.92
        volume_24h: 7155680000
        volume_change_24h: -0.152774
        percent_change_1h: -0.152774
        percent_change_24h: 0.518894
        percent_change_7d: 0.986573
        market_cap: 158055024432
        market_cap_dominance: 51
        fully_diluted_market_cap: 9.5283508943114E11
        last_updated: "2018-08-09T22:53:32.000Z"
      BTC:
        price: 1
        volume_24h: 772012
        volume_change_24h: -0.152774
        percent_change_1h: 0
        percent_change_24h: 0
        percent_change_7d: 0
        market_cap: 17024600
        market_cap_dominance: 12
        fully_diluted_market_cap: 9.5283508943114E11
        last_updated: "2018-08-09T22:53:32.000Z"
  Cryptocurrency Listings Latest - Cryptocurrency object 1:
    type: "object"
    required:
    - "id"
    - "last_updated"
    - "name"
    - "quote"
    - "slug"
    - "symbol"
    properties:
      id:
        type: "integer"
        example: 1
        description: "The unique CoinMarketCap ID for this cryptocurrency."
      name:
        type: "string"
        example: "Bitcoin"
        description: "The name of this cryptocurrency."
      symbol:
        type: "string"
        example: "BTC"
        description: "The ticker symbol for this cryptocurrency."
      slug:
        type: "string"
        example: "bitcoin"
        description: "The web URL friendly shorthand version of this cryptocurrency\
          \ name."
      cmc_rank:
        type: "integer"
        example: 5
        description: "The cryptocurrency's CoinMarketCap rank by market cap."
      num_market_pairs:
        type: "integer"
        example: 500
        description: "The number of active trading pairs available for this cryptocurrency\
          \ across supported exchanges."
      circulating_supply:
        type: "number"
        example: 1.69501E7
        description: "The approximate number of coins circulating for this cryptocurrency."
      total_supply:
        type: "number"
        example: 1.69501E7
        description: "The approximate total amount of coins in existence right now\
          \ (minus any coins that have been verifiably burned)."
      market_cap_by_total_supply:
        type: "number"
        example: 1.58055024432E11
        description: "The market cap by total supply. *This field is only returned\
          \ if requested through the `aux` request parameter.*"
      max_supply:
        type: "number"
        example: 2.1E7
        description: "The expected maximum limit of coins ever to be available for\
          \ this cryptocurrency."
      last_updated:
        type: "string"
        format: "date"
        example: "2018-06-02T22:51:28.209Z"
        description: "Timestamp (ISO 8601) of the last time this cryptocurrency's\
          \ market data was updated."
      date_added:
        type: "string"
        format: "date"
        example: "2013-04-28T00:00:00.000Z"
        description: "Timestamp (ISO 8601) of when this cryptocurrency was added to\
          \ CoinMarketCap."
      tags:
        description: "Array of tags associated with this cryptocurrency. Currently\
          \ only a mineable tag will be returned if the cryptocurrency is mineable.\
          \ Additional tags will be returned in the future."
        $ref: "#/definitions/tags"
      self_reported_circulating_supply:
        type: "number"
        example: 1.69501E7
        description: "The self reported number of coins circulating for this cryptocurrency."
      self_reported_market_cap:
        type: "number"
        example: 1.69501E7
        description: "The self reported market cap for this cryptocurrency."
      tvl_ratio:
        type: "number"
        example: 0.0
        description: "Percentage of Total Value Locked"
      platform:
        description: "Metadata about the parent cryptocurrency platform this cryptocurrency\
          \ belongs to if it is a token, otherwise null."
        $ref: "#/definitions/platform"
      quote:
        description: "A map of market quotes in different currency conversions. The\
          \ default map included is USD."
        $ref: "#/definitions/Cryptocurrency Listings Latest - Quote map 1"
    description: "A cryptocurrency object for every cryptocurrency that matched list\
      \ options."
  Cryptocurrency Listings Latest - Results array 1:
    type: "array"
    description: "Array of cryptocurrency objects matching the list options."
    items:
      description: "A cryptocurrency object for every cryptocurrency that matched\
        \ list options."
      $ref: "#/definitions/Cryptocurrency Listings Latest - Cryptocurrency object\
        \ 1"
  Cryptocurrency Listings Latest - Response Model 1:
    type: "object"
    required:
    - "data"
    properties:
      data:
        description: "Array of cryptocurrency objects matching the list options."
        $ref: "#/definitions/Cryptocurrency Listings Latest - Results array 1"
      status:
        description: "Standardized status object for API calls."
        $ref: "#/definitions/API Status Object"
    example:
      data:
      - id: 1
        name: "Bitcoin"
        symbol: "BTC"
        slug: "bitcoin"
        cmc_rank: 5
        num_market_pairs: 500
        circulating_supply: 16950100
        total_supply: 16950100
        max_supply: 21000000
        last_updated: "2018-06-02T22:51:28.209Z"
        date_added: "2013-04-28T00:00:00.000Z"
        tags:
        - "mineable"
        quote:
          USD:
            price: 9283.92
            volume_24h: 7155680000
            volume_change_24h: -0.152774
            percent_change_1h: -0.152774
            percent_change_24h: 0.518894
            percent_change_7d: 0.986573
            market_cap: 8.521646592502758E11
            market_cap_dominance: 51
            fully_diluted_market_cap: 9.5283508943114E11
            last_updated: "2018-08-09T22:53:32.000Z"
          BTC:
            price: 1
            volume_24h: 772012
            volume_change_24h: 0
            percent_change_1h: 0
            percent_change_24h: 0
            percent_change_7d: 0
            market_cap: 17024600
            market_cap_dominance: 12
            fully_diluted_market_cap: 9.5283508943114E11
            last_updated: "2018-08-09T22:53:32.000Z"
      - id: 1027
        name: "Ethereum"
        symbol: "ETH"
        slug: "ethereum"
        num_market_pairs: 6360
        circulating_supply: 16950100
        total_supply: 16950100
        max_supply: 21000000
        last_updated: "2018-06-02T22:51:28.209Z"
        date_added: "2013-04-28T00:00:00.000Z"
        tags:
        - "mineable"
        quote:
          USD:
            price: 1283.92
            volume_24h: 7155680000
            volume_change_24h: -0.152774
            percent_change_1h: -0.152774
            percent_change_24h: 0.518894
            percent_change_7d: 0.986573
            market_cap: 158055024432
            market_cap_dominance: 51
            fully_diluted_market_cap: 9.5283508943114E11
            last_updated: "2018-08-09T22:53:32.000Z"
          ETH:
            price: 1
            volume_24h: 772012
            volume_change_24h: -0.152774
            percent_change_1h: 0
            percent_change_24h: 0
            percent_change_7d: 0
            market_cap: 17024600
            market_cap_dominance: 12
            fully_diluted_market_cap: 9.5283508943114E11
            last_updated: "2018-08-09T22:53:32.000Z"
      status:
        timestamp: "2018-06-02T22:51:28.209Z"
        error_code: 0
        error_message: ""
        elapsed: 10
        credit_count: 1
  Cryptocurrency Listings Latest - Quote object 2:
    type: "object"
    required:
    - "fully_diluted_market_cap"
    - "last_updated"
    - "market_cap"
    - "market_cap_dominance"
    - "percent_change_1h"
    - "percent_change_24h"
    - "percent_change_7d"
    - "price"
    - "volume_24h"
    properties:
      price:
        type: "number"
        example: 7139.82
        description: "Price in the specified currency for this historical."
      volume_24h:
        type: "number"
        example: 4.88588E9
        description: "Rolling 24 hour adjusted volume in the specified currency."
      volume_change_24h:
        type: "number"
        example: 5.75
        description: "24 hour change in the specified currencies volume."
      volume_24h_reported:
        type: "number"
        example: 4.88588E9
        description: "Rolling 24 hour reported volume in the specified currency. *This\
          \ field is only returned if requested through the `aux` request parameter.*"
      volume_7d:
        type: "number"
        example: 4.88588E9
        description: "Rolling 7 day adjusted volume in the specified currency. *This\
          \ field is only returned if requested through the `aux` request parameter.*"
      volume_7d_reported:
        type: "number"
        example: 4.88588E9
        description: "Rolling 7 day reported volume in the specified currency. *This\
          \ field is only returned if requested through the `aux` request parameter.*"
      volume_30d:
        type: "number"
        example: 4.88588E9
        description: "Rolling 30 day adjusted volume in the specified currency. *This\
          \ field is only returned if requested through the `aux` request parameter.*"
      volume_30d_reported:
        type: "number"
        example: 4.88588E9
        description: "Rolling 30 day reported volume in the specified currency. *This\
          \ field is only returned if requested through the `aux` request parameter.*"
      market_cap:
        type: "number"
        example: 1.21020662982E11
        description: "Market cap in the specified currency."
      market_cap_dominance:
        type: "number"
        example: 1.21020662982E11
        description: "Market cap dominance in the specified currency."
      fully_diluted_market_cap:
        type: "number"
        example: 1.21020662982E11
        description: "Fully diluted market cap in the specified currency."
      percent_change_1h:
        type: "number"
        example: 0.03
        description: "1 hour change in the specified currency."
      percent_change_24h:
        type: "number"
        example: 5.75
        description: "24 hour change in the specified currency."
      percent_change_7d:
        type: "number"
        example: -19.64
        description: "7 day change in the specified currency."
      last_updated:
        type: "string"
        format: "date"
        example: "2018-06-02T23:59:59.999Z"
        description: "Timestamp (ISO 8601) of when the conversion currency's current\
          \ value was referenced."
    description: "A market quote in the currency conversion option."
  Cryptocurrency Listings Latest - Quote map 2:
    type: "object"
    required:
    - "$key"
    properties:
      $key:
        description: "A market quote in the currency conversion option."
        $ref: "#/definitions/Cryptocurrency Listings Latest - Quote object 2"
    description: "A map of market quotes in different currency conversions. The default\
      \ map included is USD."
    example:
      USD:
        price: 9283.92
        volume_24h: 7155680000
        volume_change_24h: -0.152774
        percent_change_1h: -0.152774
        percent_change_24h: 0.518894
        percent_change_7d: 0.986573
        market_cap: 158055024432
        market_cap_dominance: 51
        fully_diluted_market_cap: 9.5283508943114E11
        last_updated: "2018-08-09T22:53:32.000Z"
      BTC:
        price: 1
        volume_24h: 772012
        volume_change_24h: -0.152774
        percent_change_1h: 0
        percent_change_24h: 0
        percent_change_7d: 0
        market_cap: 17024600
        market_cap_dominance: 12
        fully_diluted_market_cap: 9.5283508943114E11
        last_updated: "2018-08-09T22:53:32.000Z"
  Cryptocurrency Listings Latest - Cryptocurrency object 2:
    type: "object"
    required:
    - "id"
    - "last_updated"
    - "name"
    - "quote"
    - "slug"
    - "symbol"
    properties:
      id:
        type: "integer"
        example: 1
        description: "The unique CoinMarketCap ID for this cryptocurrency."
      name:
        type: "string"
        example: "Bitcoin"
        description: "The name of this cryptocurrency."
      symbol:
        type: "string"
        example: "BTC"
        description: "The ticker symbol for this cryptocurrency."
      slug:
        type: "string"
        example: "bitcoin"
        description: "The web URL friendly shorthand version of this cryptocurrency\
          \ name."
      cmc_rank:
        type: "integer"
        example: 5
        description: "The cryptocurrency's CoinMarketCap rank by market cap."
      num_market_pairs:
        type: "integer"
        example: 500
        description: "The number of active trading pairs available for this cryptocurrency\
          \ across supported exchanges."
      circulating_supply:
        type: "number"
        example: 1.69501E7
        description: "The approximate number of coins circulating for this cryptocurrency."
      total_supply:
        type: "number"
        example: 1.69501E7
        description: "The approximate total amount of coins in existence right now\
          \ (minus any coins that have been verifiably burned)."
      market_cap_by_total_supply:
        type: "number"
        example: 1.58055024432E11
        description: "The market cap by total supply. *This field is only returned\
          \ if requested through the `aux` request parameter.*"
      max_supply:
        type: "number"
        example: 2.1E7
        description: "The expected maximum limit of coins ever to be available for\
          \ this cryptocurrency."
      last_updated:
        type: "string"
        format: "date"
        example: "2018-06-02T22:51:28.209Z"
        description: "Timestamp (ISO 8601) of the last time this cryptocurrency's\
          \ market data was updated."
      date_added:
        type: "string"
        format: "date"
        example: "2013-04-28T00:00:00.000Z"
        description: "Timestamp (ISO 8601) of when this cryptocurrency was added to\
          \ CoinMarketCap."
      tags:
        description: "Array of tags associated with this cryptocurrency. Currently\
          \ only a mineable tag will be returned if the cryptocurrency is mineable.\
          \ Additional tags will be returned in the future."
        $ref: "#/definitions/tags"
      platform:
        description: "Metadata about the parent cryptocurrency platform this cryptocurrency\
          \ belongs to if it is a token, otherwise null."
        $ref: "#/definitions/platform"
      quote:
        description: "A map of market quotes in different currency conversions. The\
          \ default map included is USD."
        $ref: "#/definitions/Cryptocurrency Listings Latest - Quote map 2"
    description: "A cryptocurrency object for every cryptocurrency that matched list\
      \ options."
  Cryptocurrency Listings New - Results array:
    type: "array"
    description: "Array of cryptocurrency objects matching the list options."
    items:
      description: "A cryptocurrency object for every cryptocurrency that matched\
        \ list options."
      $ref: "#/definitions/Cryptocurrency Listings Latest - Cryptocurrency object\
        \ 2"
  Cryptocurrency Listings New - Response Model:
    type: "object"
    required:
    - "data"
    properties:
      data:
        description: "Array of cryptocurrency objects matching the list options."
        $ref: "#/definitions/Cryptocurrency Listings New - Results array"
      status:
        description: "Standardized status object for API calls."
        $ref: "#/definitions/API Status Object"
    example:
      data:
      - id: 1
        name: "Bitcoin"
        symbol: "BTC"
        slug: "bitcoin"
        cmc_rank: 5
        num_market_pairs: 500
        circulating_supply: 16950100
        total_supply: 16950100
        max_supply: 21000000
        last_updated: "2018-06-02T22:51:28.209Z"
        date_added: "2013-04-28T00:00:00.000Z"
        tags:
        - "mineable"
        quote:
          USD:
            price: 9283.92
            volume_24h: 7155680000
            volume_change_24h: -0.152774
            percent_change_1h: -0.152774
            percent_change_24h: 0.518894
            percent_change_7d: 0.986573
            market_cap: 8.521646592502758E11
            market_cap_dominance: 51
            fully_diluted_market_cap: 9.5283508943114E11
            last_updated: "2018-08-09T22:53:32.000Z"
          BTC:
            price: 1
            volume_24h: 772012
            volume_change_24h: 0
            percent_change_1h: 0
            percent_change_24h: 0
            percent_change_7d: 0
            market_cap: 17024600
            market_cap_dominance: 12
            fully_diluted_market_cap: 9.5283508943114E11
            last_updated: "2018-08-09T22:53:32.000Z"
      - id: 1027
        name: "Ethereum"
        symbol: "ETH"
        slug: "ethereum"
        num_market_pairs: 6360
        circulating_supply: 16950100
        total_supply: 16950100
        max_supply: 21000000
        last_updated: "2018-06-02T22:51:28.209Z"
        date_added: "2013-04-28T00:00:00.000Z"
        tags:
        - "mineable"
        quote:
          USD:
            price: 1283.92
            volume_24h: 7155680000
            volume_change_24h: -0.152774
            percent_change_1h: -0.152774
            percent_change_24h: 0.518894
            percent_change_7d: 0.986573
            market_cap: 158055024432
            market_cap_dominance: 51
            fully_diluted_market_cap: 9.5283508943114E11
            last_updated: "2018-08-09T22:53:32.000Z"
          ETH:
            price: 1
            volume_24h: 772012
            volume_change_24h: -0.152774
            percent_change_1h: 0
            percent_change_24h: 0
            percent_change_7d: 0
            market_cap: 17024600
            market_cap_dominance: 12
            fully_diluted_market_cap: 9.5283508943114E11
            last_updated: "2018-08-09T22:53:32.000Z"
      status:
        timestamp: "2018-06-02T22:51:28.209Z"
        error_code: 0
        error_message: ""
        elapsed: 10
        credit_count: 1
  Cryptocurrency Market Pairs Latest - Exchange Info object:
    type: "object"
    required:
    - "id"
    - "name"
    - "slug"
    properties:
      id:
        type: "integer"
        example: 1
        description: "The id of the exchange this market pair is under."
      slug:
        type: "string"
        example: "binance"
        description: "The slug of the exchange this market pair is under."
      name:
        type: "string"
        example: "binance"
        description: "The name of the exchange this market pair is under."
      notice:
        type: "string"
        example: "The BTC/USD market on BitMEX is a derivatives market NOT actually\
          \ spot trading Bitcoin. As a result, it has been excluded from the price\
          \ and volume averages of Bitcoin."
        description: "A [Markdown](https://commonmark.org/help/) formatted message\
          \ outlining a condition that is impacting the availability of this exchange's\
          \ market data or the secure use of the exchange, otherwise null. This may\
          \ include a maintenance event on the exchange's end or CoinMarketCap's end,\
          \ an alert about reported issues with withdrawls from this exchange, or\
          \ another condition that may be impacting this exchange and it's markets.\
          \ If present, this notice is also displayed in an alert banner at the top\
          \ of the exchange's page on coinmarketcap.com. *This field is only returned\
          \ if requested through the `aux` request parameter.*"
    description: "Exchange details for this market pair."
  Cryptocurrency Market Pairs Latest - Pair Base Currency Info object:
    type: "object"
    required:
    - "currency_id"
    - "currency_symbol"
    - "currency_type"
    - "exchange_symbol"
    properties:
      currency_id:
        type: "integer"
        example: 1
        description: "The CoinMarketCap ID for the base currency in this market pair."
      currency_name:
        type: "string"
        example: "Bitcoin"
        description: "The name of this cryptocurrency. *This field is only returned\
          \ if requested through the `aux` request parameter.*"
      currency_symbol:
        type: "string"
        example: "BTC"
        description: "The CoinMarketCap identified symbol for the base currency in\
          \ this market pair."
      currency_slug:
        type: "string"
        example: "bitcoin"
        description: "The web URL friendly shorthand version of this cryptocurrency\
          \ name. *This field is only returned if requested through the `aux` request\
          \ parameter.*"
      exchange_symbol:
        type: "string"
        example: "BTC"
        description: "The exchange reported symbol for the base currency in this market\
          \ pair. In most cases this is identical to CoinMarketCap's symbol but it\
          \ may differ if the exchange uses an outdated or contentious symbol that\
          \ contrasts with the majority of other markets."
      currency_type:
        type: "string"
        example: "cryptocurrency"
        description: "The currency type for the base currency in this market pair."
        enum:
        - "cryptocurrency"
        - "fiat"
    description: "Base currency details object for this market pair."
  Cryptocurrency Market Pairs Latest - Pair Base Currency Info object 1:
    type: "object"
    required:
    - "currency_id"
    - "currency_symbol"
    - "currency_type"
    - "exchange_symbol"
    properties:
      currency_id:
        type: "integer"
        example: 2781
        description: "The CoinMarketCap ID for the quote (secondary) currency in this\
          \ market pair."
      currency_name:
        type: "string"
        example: "Bitcoin"
        description: "The name of this cryptocurrency. *This field is only returned\
          \ if requested through the `aux` request parameter.*"
      currency_symbol:
        type: "string"
        example: "USD"
        description: "The symbol for the quote (secondary) currency in this market\
          \ pair."
      currency_slug:
        type: "string"
        example: "bitcoin"
        description: "The web URL friendly shorthand version of this cryptocurrency\
          \ name. *This field is only returned if requested through the `aux` request\
          \ parameter.*"
      exchange_symbol:
        type: "string"
        example: "USD"
        description: "The exchange reported symbol for the quote (secondary) currency\
          \ in this market pair. In most cases this is identical to CoinMarketCap's\
          \ symbol but it may differ if the exchange uses an outdated or contentious\
          \ symbol that contrasts with the majority of other markets."
      currency_type:
        type: "string"
        example: "fiat"
        description: "The currency type for the quote (secondary) currency in this\
          \ market pair."
        enum:
        - "cryptocurrency"
        - "fiat"
    description: "Quote (secondary) currency details object for this market pair."
  Cryptocurrency Market Pairs Latest - Market Pair Exchange Reported Quote:
    type: "object"
    required:
    - "last_updated"
    - "price"
    - "volume_24h_base"
    - "volume_24h_quote"
    properties:
      price:
        type: "number"
        example: 8000.23
        description: "The lastest exchange reported price for this market pair in\
          \ quote currency units."
      volume_24h_base:
        type: "number"
        example: 30768.0
        description: "The latest exchange reported 24 hour rolling volume for this\
          \ market pair in base cryptocurrency units."
      volume_24h_quote:
        type: "number"
        example: 2.504484432E8
        description: "The latest exchange reported 24 hour rolling volume for this\
          \ market pair in quote cryptocurrency units."
      last_updated:
        type: "string"
        format: "date"
        example: "2018-06-02T23:59:59.999Z"
        description: "Timestamp (ISO 8601) of the last time this market data was updated."
    description: "A default exchange reported quote containing raw exchange reported\
      \ values."
  Cryptocurrency Market Pairs Latest - Market Pair Quote:
    type: "object"
    required:
    - "last_updated"
    - "price"
    - "volume_24h"
    properties:
      price:
        type: "number"
        example: 8000.23
        description: "The lastest exchange reported price for this market pair converted\
          \ into the requested convert currency."
      price_quote:
        type: "number"
        example: 8000.23
        description: "The latest exchange reported price in base units converted into\
          \ the requested convert currency. *This field is only returned if requested\
          \ through the `aux` request parameter.*"
      volume_24h:
        type: "number"
        example: 1600000.0
        description: "The latest exchange reported 24 hour rolling volume in quote\
          \ units for this market pair converted into the requested convert currency."
      last_updated:
        type: "string"
        format: "date"
        example: "2018-06-02T23:59:59.999Z"
        description: "Timestamp (ISO 8601) of when the conversion currency's current\
          \ value was referenced for this conversion."
    description: "One or more market quotes where $key is the conversion currency\
      \ requested, ex. USD"
  Cryptocurrency Market Pairs Latest - Market Pair Quote object:
    type: "object"
    required:
    - "$key"
    - "exchange_reported"
    properties:
      exchange_reported:
        description: "A default exchange reported quote containing raw exchange reported\
          \ values."
        $ref: "#/definitions/Cryptocurrency Market Pairs Latest - Market Pair Exchange\
          \ Reported Quote"
      $key:
        description: "One or more market quotes where $key is the conversion currency\
          \ requested, ex. USD"
        $ref: "#/definitions/Cryptocurrency Market Pairs Latest - Market Pair Quote"
    description: "Market Pair quotes object containing key->quote objects for each\
      \ convert option requested. USD and \"exchange_reported\" are defaults."
  Cryptocurrency Market Pairs Latest - Market Pair Info object:
    type: "object"
    required:
    - "exchange"
    - "mark_pair_base"
    - "mark_pair_quote"
    - "quote"
    properties:
      exchange:
        description: "Exchange details for this market pair."
        $ref: "#/definitions/Cryptocurrency Market Pairs Latest - Exchange Info object"
      market_id:
        type: "integer"
        example: 9933
        description: "The CoinMarketCap ID for this market pair. This ID can reliably\
          \ be used to identify this unique market as the ID never changes."
      market_pair:
        type: "string"
        example: "BTC/USD"
        description: "The name of this market pair.  Example: \"BTC/USD\""
      category:
        type: "string"
        example: "spot"
        description: "The category of trading this market falls under. Spot markets\
          \ are the most common but options include derivatives and OTC."
        enum:
        - "spot"
        - "derivatives"
        - "otc"
      fee_type:
        type: "string"
        example: "percentage"
        description: "The fee type the exchange enforces for this market."
        enum:
        - "percentage"
        - "no-fees"
        - "transactional-mining"
        - "unknown"
      market_url:
        type: "string"
        example: "https://www.binance.com/en/trade/BTC_USDT"
        description: "The URL to this market's trading page on the exchange if available.\
          \ If not available the exchange's homepage URL is returned. *This field\
          \ is only returned if requested through the `aux` request parameter.*"
      mark_pair_base:
        description: "Base currency details object for this market pair."
        $ref: "#/definitions/Cryptocurrency Market Pairs Latest - Pair Base Currency\
          \ Info object"
      mark_pair_quote:
        description: "Quote (secondary) currency details object for this market pair."
        $ref: "#/definitions/Cryptocurrency Market Pairs Latest - Pair Base Currency\
          \ Info object 1"
      quote:
        description: "Market Pair quotes object containing key->quote objects for\
          \ each convert option requested. USD and \"exchange_reported\" are defaults."
        $ref: "#/definitions/Cryptocurrency Market Pairs Latest - Market Pair Quote\
          \ object"
    description: "Market Pair info object."
  Cryptocurrency Market Pairs Latest - Market Pairs array:
    type: "array"
    description: "Array of all market pairs for this cryptocurrency."
    items:
      description: "Market Pair info object."
      $ref: "#/definitions/Cryptocurrency Market Pairs Latest - Market Pair Info object"
  Cryptocurrency Market Pairs Latest - Results object:
    type: "object"
    required:
    - "id"
    - "market_pairs"
    - "name"
    - "symbol"
    properties:
      id:
        type: "integer"
        example: 1
        description: "The CoinMarketCap ID for this cryptocurrency."
        minimum: 1
      name:
        type: "string"
        example: "Bitcoin"
        description: "The name of this cryptocurrency."
      symbol:
        type: "string"
        example: "BTC"
        description: "The symbol for this cryptocurrency."
      num_market_pairs:
        type: "integer"
        example: 303
        description: "The number of active market pairs listed for this cryptocurrency.\
          \ This number is filtered down to only matching markets if a `matched` parameter\
          \ is used."
      market_pairs:
        description: "Array of all market pairs for this cryptocurrency."
        $ref: "#/definitions/Cryptocurrency Market Pairs Latest - Market Pairs array"
    description: "Results of your query returned as an object."
    example:
      id: 1
      name: "Bitcoin"
      symbol: "BTC"
      num_market_pairs: 7526
      market_pairs:
      - exchange:
          id: 157
          name: "BitMEX"
          slug: "bitmex"
        market_id: 4902
        market_pair: "BTC/USD"
        category: "derivatives"
        fee_type: "no-fees"
        market_pair_base:
          currency_id: 1
          currency_symbol: "BTC"
          exchange_symbol: "XBT"
          currency_type: "cryptocurrency"
        market_pair_quote:
          currency_id: 2781
          currency_symbol: "USD"
          exchange_symbol: "USD"
          currency_type: "fiat"
        quote:
          exchange_reported:
            price: 7839
            volume_24h_base: 434215.85308502
            volume_24h_quote: 3.40381807233347E9
            last_updated: "2019-05-24T02:39:00.000Z"
          USD:
            price: 7839
            volume_24h: 3.40381807233347E9
            last_updated: "2019-05-24T02:39:00.000Z"
      - exchange:
          id: 108
          name: "Negocie Coins"
          slug: "negocie-coins"
        market_id: 3377
        market_pair: "BTC/BRL"
        category: "spot"
        fee_type: "percentage"
        market_pair_base:
          currency_id: 1
          currency_symbol: "BTC"
          exchange_symbol: "BTC"
          currency_type: "cryptocurrency"
        market_pair_quote:
          currency_id: 2783
          currency_symbol: "BRL"
          exchange_symbol: "BRL"
          currency_type: "fiat"
        quote:
          exchange_reported:
            price: 33002.11
            volume_24h_base: 336699.03559957
            volume_24h_quote: 1.11117786097509E10
            last_updated: "2019-05-24T02:39:00.000Z"
          USD:
            price: 8165.02539531659
            volume_24h: 2.7491561762491E9
            last_updated: "2019-05-24T02:39:00.000Z"
  Cryptocurrency Market Pairs Latest - Response Model:
    type: "object"
    required:
    - "data"
    properties:
      data:
        description: "Results of your query returned as an object."
        $ref: "#/definitions/Cryptocurrency Market Pairs Latest - Results object"
      status:
        description: "Standardized status object for API calls."
        $ref: "#/definitions/API Status Object"
    example:
      data:
        id: 1
        name: "Bitcoin"
        symbol: "BTC"
        num_market_pairs: 7526
        market_pairs:
        - exchange:
            id: 157
            name: "BitMEX"
            slug: "bitmex"
          market_id: 4902
          market_pair: "BTC/USD"
          category: "derivatives"
          fee_type: "no-fees"
          market_pair_base:
            currency_id: 1
            currency_symbol: "BTC"
            exchange_symbol: "XBT"
            currency_type: "cryptocurrency"
          market_pair_quote:
            currency_id: 2781
            currency_symbol: "USD"
            exchange_symbol: "USD"
            currency_type: "fiat"
          quote:
            exchange_reported:
              price: 7839
              volume_24h_base: 434215.85308502
              volume_24h_quote: 3.40381807233347E9
              last_updated: "2019-05-24T02:39:00.000Z"
            USD:
              price: 7839
              volume_24h: 3.40381807233347E9
              last_updated: "2019-05-24T02:39:00.000Z"
        - exchange:
            id: 108
            name: "Negocie Coins"
            slug: "negocie-coins"
          market_id: 3377
          market_pair: "BTC/BRL"
          category: "spot"
          fee_type: "percentage"
          market_pair_base:
            currency_id: 1
            currency_symbol: "BTC"
            exchange_symbol: "BTC"
            currency_type: "cryptocurrency"
          market_pair_quote:
            currency_id: 2783
            currency_symbol: "BRL"
            exchange_symbol: "BRL"
            currency_type: "fiat"
          quote:
            exchange_reported:
              price: 33002.11
              volume_24h_base: 336699.03559957
              volume_24h_quote: 1.11117786097509E10
              last_updated: "2019-05-24T02:39:00.000Z"
            USD:
              price: 8165.02539531659
              volume_24h: 2.7491561762491E9
              last_updated: "2019-05-24T02:39:00.000Z"
      status:
        error_message: ""
        elapsed: 10
        credit_count: 1
        error_code: 0
        timestamp: "2022-09-16T12:55:54.015Z"
  Cryptocurrency OHLCV Historical - Quote object:
    type: "object"
    required:
    - "close"
    - "high"
    - "low"
    - "market_cap"
    - "open"
    - "timestamp"
    - "volume"
    properties:
      open:
        type: "number"
        example: 3849.21640853
        description: "Opening price for time series interval."
      high:
        type: "number"
        example: 3947.9812729
        description: "Highest price during this time series interval."
      low:
        type: "number"
        example: 3817.40949569
        description: "Lowest price during this time series interval."
      close:
        type: "number"
        example: 3943.40933686
        description: "Closing price for this time series interval."
      volume:
        type: "number"
        example: 5.24485683570851E9
        description: "Adjusted volume for this time series interval. Volume is not\
          \ currently supported for hourly OHLCV intervals before 2020-09-22."
      market_cap:
        type: "number"
        example: 6.88498567316738E10
        description: "Market cap by circulating supply for this time series interval."
      timestamp:
        type: "string"
        format: "date"
        example: "2019-01-02T23:59:59.999Z"
        description: "Timestamp (ISO 8601) of when the conversion currency's current\
          \ value was referenced for this conversion."
    description: "A market quote in each currency conversion option."
  Cryptocurrency OHLCV Historical - Quote map:
    type: "object"
    required:
    - "$key"
    properties:
      $key:
        description: "A market quote in each currency conversion option."
        $ref: "#/definitions/Cryptocurrency OHLCV Historical - Quote object"
    description: "A map of market quotes in different currency conversions. The default\
      \ map included is USD."
  Cryptocurrency OHLCV Historical - Interval Quote object:
    type: "object"
    required:
    - "quote"
    - "time_close"
    - "time_high"
    - "time_low"
    - "time_open"
    properties:
      time_open:
        type: "string"
        format: "date"
        example: "2018-06-02T00:00:00.000Z"
        description: "Timestamp (ISO 8601) of the start of this time series interval."
      time_close:
        type: "string"
        format: "date"
        example: "2018-06-02T23:59:59.999Z"
        description: "Timestamp (ISO 8601) of the end of this time series interval."
      time_high:
        type: "string"
        format: "date"
        example: "2018-06-02T22:59:59.999Z"
        description: "Timestamp (ISO 8601) of the high of this time series interval."
      time_low:
        type: "string"
        format: "date"
        example: "2018-06-02T21:59:59.999Z"
        description: "Timestamp (ISO 8601) of the low of this time series interval."
      quote:
        description: "A map of market quotes in different currency conversions. The\
          \ default map included is USD."
        $ref: "#/definitions/Cryptocurrency OHLCV Historical - Quote map"
    description: "An OHLCV quote for the supplied interval."
  Cryptocurrency OHLCV Historical - Interval Quotes array:
    type: "array"
    description: "An array of OHLCV quotes for the supplied interval."
    items:
      description: "An OHLCV quote for the supplied interval."
      $ref: "#/definitions/Cryptocurrency OHLCV Historical - Interval Quote object"
  Cryptocurrency OHLCV Historical - Results object:
    type: "object"
    required:
    - "id"
    - "name"
    - "quotes"
    - "symbol"
    properties:
      id:
        type: "integer"
        example: 1
        description: "The CoinMarketCap cryptocurrency ID."
      name:
        type: "string"
        example: "Bitcoin"
        description: "The cryptocurrency name."
      symbol:
        type: "string"
        example: "BTC"
        description: "The cryptocurrency symbol."
      quotes:
        description: "An array of OHLCV quotes for the supplied interval."
        $ref: "#/definitions/Cryptocurrency OHLCV Historical - Interval Quotes array"
    description: "Results of your query returned as an object."
    example:
      id: 1
      name: "Bitcoin"
      symbol: "BTC"
      quotes:
      - time_open: "2019-01-02T00:00:00.000Z"
        time_close: "2019-01-02T23:59:59.999Z"
        time_high: "2019-01-02T03:53:00.000Z"
        time_low: "2019-01-02T02:43:00.000Z"
        quote:
          USD:
            open: 3849.21640853
            high: 3947.9812729
            low: 3817.40949569
            close: 3943.40933686
            volume: 5.24485683570851E9
            market_cap: 6.88498567316738E10
            timestamp: "2019-01-02T23:59:59.999Z"
      - time_open: "2019-01-03T00:00:00.000Z"
        time_close: "2019-01-03T23:59:59.999Z"
        time_high: "2019-01-02T03:53:00.000Z"
        time_low: "2019-01-02T02:43:00.000Z"
        quote:
          USD:
            open: 3931.04863841
            high: 3935.68513083
            low: 3826.22287069
            close: 3836.74131867
            volume: 4.53021521884018E9
            market_cap: 6.69949209027202E10
            timestamp: "2019-01-03T23:59:59.999Z"
  Cryptocurrency OHLCV Historical - Response Model:
    type: "object"
    required:
    - "data"
    properties:
      data:
        description: "Results of your query returned as an object."
        $ref: "#/definitions/Cryptocurrency OHLCV Historical - Results object"
      status:
        description: "Standardized status object for API calls."
        $ref: "#/definitions/API Status Object"
    example:
      data:
        id: 1
        name: "Bitcoin"
        symbol: "BTC"
        quotes:
        - time_open: "2019-01-02T00:00:00.000Z"
          time_close: "2019-01-02T23:59:59.999Z"
          time_high: "2019-01-02T03:53:00.000Z"
          time_low: "2019-01-02T02:43:00.000Z"
          quote:
            USD:
              open: 3849.21640853
              high: 3947.9812729
              low: 3817.40949569
              close: 3943.40933686
              volume: 5.24485683570851E9
              market_cap: 6.88498567316738E10
              timestamp: "2019-01-02T23:59:59.999Z"
        - time_open: "2019-01-03T00:00:00.000Z"
          time_close: "2019-01-03T23:59:59.999Z"
          time_high: "2019-01-02T03:53:00.000Z"
          time_low: "2019-01-02T02:43:00.000Z"
          quote:
            USD:
              open: 3931.04863841
              high: 3935.68513083
              low: 3826.22287069
              close: 3836.74131867
              volume: 4.53021521884018E9
              market_cap: 6.69949209027202E10
              timestamp: "2019-01-03T23:59:59.999Z"
      status:
        error_message: ""
        elapsed: 10
        credit_count: 1
        error_code: 0
        timestamp: "2022-09-16T12:55:54.015Z"
  Cryptocurrency OHLCV Latest - Quote object:
    type: "object"
    required:
    - "close"
    - "high"
    - "last_updated"
    - "low"
    - "open"
    - "volume"
    properties:
      open:
        type: "number"
        example: 966.34
        description: "Price from first datapoint of today in UTC time for the convert\
          \ option requested."
      high:
        type: "number"
        example: 1005.0
        description: "Highest price so far today in UTC time for the convert option\
          \ requested."
      low:
        type: "number"
        example: 960.53
        description: "Lowest price today in UTC time for the convert option requested."
      close:
        type: "number"
        example: 997.75
        description: "Latest price today in UTC time for the convert option requested.\
          \ This is not the final price during close as the current day period is\
          \ not over."
      volume:
        type: "number"
        example: 6850.59330859
        description: "Aggregate 24 hour adjusted volume for the convert option requested.\
          \ Please note, this is a rolling 24 hours back from the current time."
      last_updated:
        type: "string"
        format: "date"
        example: "2018-06-02T00:00:00.000Z"
        description: "Timestamp (ISO 8601) of when the conversion currency's current\
          \ value was last updated when referenced for this conversion."
    description: "A market quote in each currency conversion option."
  Cryptocurrency OHLCV Latest - Quote map:
    type: "object"
    required:
    - "$key"
    properties:
      $key:
        description: "A market quote in each currency conversion option."
        $ref: "#/definitions/Cryptocurrency OHLCV Latest - Quote object"
    description: "A map of market quotes in different currency conversions. The default\
      \ map included is USD."
  Cryptocurrency OHLCV Latest - Cryptocurrency object:
    type: "object"
    required:
    - "id"
    - "last_updated"
    - "name"
    - "quote"
    - "symbol"
    - "time_close"
    - "time_high"
    - "time_low"
    - "time_open"
    properties:
      id:
        type: "integer"
        example: 1
        description: "The unique CoinMarketCap ID for this cryptocurrency."
      name:
        type: "string"
        example: "Bitcoin"
        description: "The name of this cryptocurrency."
      symbol:
        type: "string"
        example: "BTC"
        description: "The ticker symbol for this cryptocurrency."
      last_updated:
        type: "string"
        format: "date"
        example: "2018-06-02T23:59:59.999Z"
        description: "Timestamp (ISO 8601) of the lastest market value record included\
          \ to generate the latest active day OHLCV values."
      time_open:
        type: "string"
        format: "date"
        example: "2018-06-02T00:00:00.000Z"
        description: "Timestamp (ISO 8601) of the start of this OHLCV period."
      time_high:
        type: "string"
        format: "date"
        example: "2018-06-02T00:00:00.000Z"
        description: "Timestamp (ISO 8601) of the high of this OHLCV period."
      time_low:
        type: "string"
        format: "date"
        example: "2018-06-02T00:00:00.000Z"
        description: "Timestamp (ISO 8601) of the low of this OHLCV period."
      time_close:
        type: "string"
        format: "date"
        example: "null"
        description: "Timestamp (ISO 8601) of the end of this OHLCV period. Always\
          \ `null` as the current day is incomplete. See `last_updated` for the last\
          \ UTC time included in the current OHLCV calculation."
      quote:
        description: "A map of market quotes in different currency conversions. The\
          \ default map included is USD."
        $ref: "#/definitions/Cryptocurrency OHLCV Latest - Quote map"
    description: "A cryptocurrency object for each requested."
  Cryptocurrency OHLCV Latest - Cryptocurrency Results map:
    type: "object"
    required:
    - "$key"
    properties:
      $key:
        description: "A cryptocurrency object for each requested."
        $ref: "#/definitions/Cryptocurrency OHLCV Latest - Cryptocurrency object"
    description: "A map of cryptocurrency objects by ID or symbol (as passed in query\
      \ parameters)."
    example:
      "1":
        id: 1
        name: "Bitcoin"
        symbol: "BTC"
        last_updated: "2018-09-10T18:54:00.000Z"
        time_open: "2018-09-10T00:00:00.000Z"
        time_high: "2018-09-10T00:00:00.000Z"
        time_low: "2018-09-10T00:00:00.000Z"
        quote:
          USD:
            open: 6301.57
            high: 6374.98
            low: 6292.76
            close: 6308.76
            volume: 3786450000
            last_updated: "2018-09-10T18:54:00.000Z"
  Cryptocurrency OHLCV Latest - Response Model:
    type: "object"
    required:
    - "data"
    properties:
      data:
        description: "A map of cryptocurrency objects by ID or symbol (as passed in\
          \ query parameters)."
        $ref: "#/definitions/Cryptocurrency OHLCV Latest - Cryptocurrency Results\
          \ map"
      status:
        description: "Standardized status object for API calls."
        $ref: "#/definitions/API Status Object"
    example:
      data:
        "1":
          id: 1
          name: "Bitcoin"
          symbol: "BTC"
          last_updated: "2018-09-10T18:54:00.000Z"
          time_open: "2018-09-10T00:00:00.000Z"
          time_high: "2018-09-10T00:00:00.000Z"
          time_low: "2018-09-10T00:00:00.000Z"
          quote:
            USD:
              open: 6301.57
              high: 6374.98
              low: 6292.76
              close: 6308.76
              volume: 3786450000
              last_updated: "2018-09-10T18:54:00.000Z"
      status:
        error_message: ""
        elapsed: 10
        credit_count: 1
        error_code: 0
        timestamp: "2022-09-16T12:55:54.015Z"
  Cryptocurrency Price Performance Stats Latest - Quote object:
    type: "object"
    required:
    - "close"
    - "close_timestamp"
    - "high"
    - "high_timestamp"
    - "low"
    - "low_timestamp"
    - "open"
    - "open_timestamp"
    - "percent_change"
    - "price_change"
    properties:
      open:
        type: "number"
        example: 135.3000030517578
        description: "Cryptocurrency price at the start of the requested time period\
          \ historically converted into units of the convert currency."
      open_timestamp:
        type: "string"
        format: "date"
        example: "2013-04-28T00:00:00.000Z"
        description: "Timestamp (ISO 8601) of the closest convert currency reference\
          \ price used during `open` price conversion."
      high:
        type: "number"
        example: 20088.99609375
        description: "Highest USD price achieved within the requested time period\
          \ historically converted into units of the convert currency."
      high_timestamp:
        type: "string"
        format: "date"
        example: "2017-12-17T12:19:14.000Z"
        description: "Timestamp (ISO 8601) of the closest convert currency reference\
          \ price used during `high` price conversion. *For `yesterday` UTC close\
          \ will be used.*"
      low:
        type: "number"
        example: 65.5260009765625
        description: "Lowest USD price achieved within the requested time period historically\
          \ converted into units of the convert currency."
      low_timestamp:
        type: "string"
        format: "date"
        example: "2013-07-05T18:56:01.000Z"
        description: "Timestamp (ISO 8601) of the closest convert currency reference\
          \ price used during `low` price conversion. *For `yesterday` UTC close will\
          \ be used.*"
      close:
        type: "number"
        example: 9908.99193585
        description: "Cryptocurrency price at the end of the requested time period\
          \ historically converted into units of the convert currency."
      close_timestamp:
        type: "string"
        format: "date"
        example: "2019-08-22T01:52:18.618Z"
        description: "Timestamp (ISO 8601) of the closest convert currency reference\
          \ price used during `close` price conversion."
      percent_change:
        type: "number"
        example: 7223.718930042746
        description: "The approximate percentage change (ROI) if purchased at the\
          \ start of the time period. This is the time of launch or earliest known\
          \ price for the `all_time` period. This value includes historical change\
          \ in market rate for the specified convert currency."
      price_change:
        type: "number"
        example: 9773.691932798241
        description: "The actual price change between the start of the time period\
          \ and end. This is the time of launch or earliest known price for the `all_time`\
          \ period. This value includes historical change in market rate for the specified\
          \ convert currency."
    description: "A time period quote in the currency conversion option."
  Cryptocurrency Price Performance Stats Latest - Quote map:
    type: "object"
    required:
    - "$key"
    properties:
      $key:
        description: "A time period quote in the currency conversion option."
        $ref: "#/definitions/Cryptocurrency Price Performance Stats Latest - Quote\
          \ object"
    description: "An object map of time period quotes for each convert option requested.\
      \ The default map included is USD."
  Cryptocurrency Price Performance Stats Latest - Period object:
    type: "object"
    required:
    - "close_timestamp"
    - "high_timestamp"
    - "low_timestamp"
    - "open_timestamp"
    - "quote"
    properties:
      open_timestamp:
        type: "string"
        format: "date"
        example: "2013-04-28T00:00:00.000Z"
        description: "Timestamp (ISO 8601) of the start of this time period. Please\
          \ note that this is a rolling period back from current time for time periods\
          \ outside of `yesterday`."
      high_timestamp:
        type: "string"
        format: "date"
        example: "2017-12-17T12:19:14.000Z"
        description: "Timestamp (ISO 8601) of when this cryptocurrency achieved it's\
          \ highest USD price during the requested time period. *Note: The `yesterday`\
          \ period currently doesn't support this field and will return `null`.*"
      low_timestamp:
        type: "string"
        format: "date"
        example: "2013-07-05T18:56:01.000Z"
        description: "Timestamp (ISO 8601) of when this cryptocurrency achieved it's\
          \ lowest USD price during the requested time period. *Note: The `yesterday`\
          \ period currently doesn't support this field and will return `null`.*"
      close_timestamp:
        type: "string"
        format: "date"
        example: "2019-08-22T01:52:18.613Z"
        description: "Timestamp (ISO 8601) of the end of this time period. Please\
          \ note that this is a rolling period back from current time for time periods\
          \ outside of `yesterday`."
      quote:
        description: "An object map of time period quotes for each convert option\
          \ requested. The default map included is USD."
        $ref: "#/definitions/Cryptocurrency Price Performance Stats Latest - Quote\
          \ map"
    description: "A time period data object. `all_time` is the default."
  Cryptocurrency Price Performance Stats Latest - Period object map:
    type: "object"
    required:
    - "$key"
    properties:
      $key:
        description: "A time period data object. `all_time` is the default."
        $ref: "#/definitions/Cryptocurrency Price Performance Stats Latest - Period\
          \ object"
    description: "An object map of time periods by period requested."
  Cryptocurrency Price Performance Stats Latest - Cryptocurrency object:
    type: "object"
    required:
    - "id"
    - "last_updated"
    - "name"
    - "periods"
    - "slug"
    - "symbol"
    properties:
      id:
        type: "integer"
        example: 1
        description: "The unique CoinMarketCap ID for this cryptocurrency."
      name:
        type: "string"
        example: "Bitcoin"
        description: "The name of this cryptocurrency."
      symbol:
        type: "string"
        example: "BTC"
        description: "The ticker symbol for this cryptocurrency."
      slug:
        type: "string"
        example: "bitcoin"
        description: "The web URL friendly shorthand version of this cryptocurrency\
          \ name."
      last_updated:
        type: "string"
        format: "date"
        example: "2019-08-22T01:51:32.000Z"
        description: "Timestamp (ISO 8601) of the last time this cryptocurrency's\
          \ market data was updated."
      periods:
        description: "An object map of time periods by period requested."
        $ref: "#/definitions/Cryptocurrency Price Performance Stats Latest - Period\
          \ object map"
    description: "A cryptocurrency object for each requested."
  Cryptocurrency Price Performance Stats Latest - Cryptocurrency Results map:
    type: "object"
    required:
    - "$key"
    properties:
      $key:
        description: "A cryptocurrency object for each requested."
        $ref: "#/definitions/Cryptocurrency Price Performance Stats Latest - Cryptocurrency\
          \ object"
    description: "An object map of cryptocurrency objects by ID, slug, or symbol (as\
      \ used in query parameters)."
    example:
      "1":
        id: 1
        name: "Bitcoin"
        symbol: "BTC"
        slug: "bitcoin"
        last_updated: "2019-08-22T01:51:32.000Z"
        periods:
          all_time:
            open_timestamp: "2013-04-28T00:00:00.000Z"
            high_timestamp: "2017-12-17T12:19:14.000Z"
            low_timestamp: "2013-07-05T18:56:01.000Z"
            close_timestamp: "2019-08-22T01:52:18.613Z"
            quote:
              USD:
                open: 135.3000030517578
                open_timestamp: "2013-04-28T00:00:00.000Z"
                high: 20088.99609375
                high_timestamp: "2017-12-17T12:19:14.000Z"
                low: 65.5260009765625
                low_timestamp: "2013-07-05T18:56:01.000Z"
                close: 65.5260009765625
                close_timestamp: "2019-08-22T01:52:18.618Z"
                percent_change: 7223.718930042746
                price_change: 9773.691932798241
  Cryptocurrency Price Performance Stats Latest - Response Model:
    type: "object"
    required:
    - "data"
    properties:
      data:
        description: "An object map of cryptocurrency objects by ID, slug, or symbol\
          \ (as used in query parameters)."
        $ref: "#/definitions/Cryptocurrency Price Performance Stats Latest - Cryptocurrency\
          \ Results map"
      status:
        description: "Standardized status object for API calls."
        $ref: "#/definitions/API Status Object"
    example:
      data:
        "1":
          id: 1
          name: "Bitcoin"
          symbol: "BTC"
          slug: "bitcoin"
          last_updated: "2019-08-22T01:51:32.000Z"
          periods:
            all_time:
              open_timestamp: "2013-04-28T00:00:00.000Z"
              high_timestamp: "2017-12-17T12:19:14.000Z"
              low_timestamp: "2013-07-05T18:56:01.000Z"
              close_timestamp: "2019-08-22T01:52:18.613Z"
              quote:
                USD:
                  open: 135.3000030517578
                  open_timestamp: "2013-04-28T00:00:00.000Z"
                  high: 20088.99609375
                  high_timestamp: "2017-12-17T12:19:14.000Z"
                  low: 65.5260009765625
                  low_timestamp: "2013-07-05T18:56:01.000Z"
                  close: 65.5260009765625
                  close_timestamp: "2019-08-22T01:52:18.618Z"
                  percent_change: 7223.718930042746
                  price_change: 9773.691932798241
      status:
        error_message: ""
        elapsed: 10
        credit_count: 1
        error_code: 0
        timestamp: "2022-09-16T12:55:54.015Z"
  Cryptocurrency Quotes Historical - Currency Quote object:
    type: "object"
    required:
    - "market_cap"
    - "price"
    - "timestamp"
    - "volume_24hr"
    properties:
      price:
        type: "number"
        example: 1235000.0
        description: "Price at this interval quote."
      volume_24hr:
        type: "number"
        example: 1235000.0
        description: "Aggregate 24 hour adjusted volume for all market pairs tracked\
          \ for this cryptocurrency at the current historical interval."
      market_cap:
        type: "number"
        example: 1.23456789E8
        description: "Number of market pairs available at the current historical interval."
      timestamp:
        type: "string"
        format: "date"
        example: "2018-06-02T22:51:28.209Z"
        description: "Timestamp (ISO 8601) of when the conversion currency's current\
          \ value was referenced for this conversion."
    description: "The market details for the current interval and currency conversion\
      \ option. The map key being the curency symbol."
  Cryptocurrency Quotes Historical - Quote currency map:
    type: "object"
    required:
    - "$key"
    properties:
      $key:
        description: "The market details for the current interval and currency conversion\
          \ option. The map key being the curency symbol."
        $ref: "#/definitions/Cryptocurrency Quotes Historical - Currency Quote object"
    description: "A map of market details for this quote in different currency conversions.\
      \ The default map included is USD."
  Cryptocurrency Quotes Historical - Interval Quote object:
    type: "object"
    required:
    - "quote"
    - "timestamp"
    properties:
      timestamp:
        type: "string"
        format: "date"
        example: "2018-06-02T23:59:59.999Z"
        description: "Timestamp of when this historical quote was recorded."
      search_interval:
        type: "string"
        format: "date"
        example: "2018-06-02T00:00:00.000Z"
        description: "The interval timestamp for the search period that this historical\
          \ quote was located against. *This field is only returned if requested through\
          \ the `aux` request parameter.*"
      quote:
        description: "A map of market details for this quote in different currency\
          \ conversions. The default map included is USD."
        $ref: "#/definitions/Cryptocurrency Quotes Historical - Quote currency map"
    description: "An object containing details for the current interval quote."
  Cryptocurrency Quotes Historical - Interval Quotes array:
    type: "array"
    description: "An array of quotes for each interval for this cryptocurrency."
    items:
      description: "An object containing details for the current interval quote."
      $ref: "#/definitions/Cryptocurrency Quotes Historical - Interval Quote object"
  Cryptocurrency Quotes Historical - Result object:
    type: "object"
    required:
    - "id"
    - "name"
    - "quotes"
    - "symbol"
    properties:
      id:
        type: "integer"
        example: 1
        description: "The CoinMarketCap cryptocurrency ID."
      name:
        type: "string"
        example: "Bitcoin"
        description: "The cryptocurrency name."
      symbol:
        type: "string"
        example: "BTC"
        description: "The cryptocurrency symbol."
      is_active:
        type: "integer"
        example: 1
        description: "1 if this cryptocurrency has at least 1 active market currently\
          \ being tracked by the platform, otherwise 0. A value of 1 is analogous\
          \ with `listing_status=active`."
        minimum: 0
        maximum: 1
      is_fiat:
        type: "integer"
        example: 1
        description: "1 if this is a fiat"
        minimum: 0
        maximum: 1
      quotes:
        description: "An array of quotes for each interval for this cryptocurrency."
        $ref: "#/definitions/Cryptocurrency Quotes Historical - Interval Quotes array"
    description: "A results object for each cryptocurrency requested. The map key\
      \ being the id/symbol used in the request."
  Cryptocurrency Quotes Historical - Results map:
    type: "object"
    required:
    - "$key"
    properties:
      $key:
        description: "A results object for each cryptocurrency requested. The map\
          \ key being the id/symbol used in the request."
        $ref: "#/definitions/Cryptocurrency Quotes Historical - Result object"
    description: "Results of your query returned as an object map."
    example:
      id: 1
      name: "Bitcoin"
      symbol: "BTC"
      is_active: 1
      is_fiat: 0
      quotes:
      - timestamp: "2018-06-22T19:29:37.000Z"
        quote:
          USD:
            price: 6242.29
            volume_24h: 4681670000
            market_cap: 1.0680003874648E11
            circulating_supply: 4681670000
            total_supply: 4681670000
            timestamp: "2018-06-22T19:29:37.000Z"
      - timestamp: "2018-06-22T19:34:33.000Z"
        quote:
          USD:
            price: 6242.82
            volume_24h: 4682330000
            market_cap: 1.0680910657584E11
            circulating_supply: 4681670000
            total_supply: 4681670000
            timestamp: "2018-06-22T19:34:33.000Z"
  Cryptocurrency Quotes Historical - Response Model:
    type: "object"
    required:
    - "data"
    properties:
      data:
        description: "Results of your query returned as an object map."
        $ref: "#/definitions/Cryptocurrency Quotes Historical - Results map"
      status:
        description: "Standardized status object for API calls."
        $ref: "#/definitions/API Status Object"
    example:
      data:
        id: 1
        name: "Bitcoin"
        symbol: "BTC"
        is_active: 1
        is_fiat: 0
        quotes:
        - timestamp: "2018-06-22T19:29:37.000Z"
          quote:
            USD:
              price: 6242.29
              volume_24h: 4681670000
              market_cap: 1.0680003874648E11
              circulating_supply: 4681670000
              total_supply: 4681670000
              timestamp: "2018-06-22T19:29:37.000Z"
        - timestamp: "2018-06-22T19:34:33.000Z"
          quote:
            USD:
              price: 6242.82
              volume_24h: 4682330000
              market_cap: 1.0680910657584E11
              circulating_supply: 4681670000
              total_supply: 4681670000
              timestamp: "2018-06-22T19:34:33.000Z"
      status:
        error_message: ""
        elapsed: 10
        credit_count: 1
        error_code: 0
        timestamp: "2022-09-16T12:55:54.015Z"
  Cryptocurrency Quotes Latest - Quote object:
    type: "object"
    required:
    - "fully_diluted_market_cap"
    - "last_updated"
    - "market_cap"
    - "market_cap_dominance"
    - "percent_change_1h"
    - "percent_change_24h"
    - "percent_change_30d"
    - "percent_change_7d"
    - "price"
    - "volume_24h"
    properties:
      price:
        type: "number"
        example: 7139.82
        description: "Price in the specified currency."
      volume_24h:
        type: "number"
        example: 4.88588E9
        description: "Rolling 24 hour adjusted volume in the specified currency."
      volume_change_24h:
        type: "number"
        example: 5.75
        description: "24 hour change in the specified currencies volume."
      volume_24h_reported:
        type: "number"
        example: 4.88588E9
        description: "Rolling 24 hour reported volume in the specified currency. *This\
          \ field is only returned if requested through the `aux` request parameter.*"
      volume_7d:
        type: "number"
        example: 4.88588E9
        description: "Rolling 7 day adjusted volume in the specified currency. *This\
          \ field is only returned if requested through the `aux` request parameter.*"
      volume_7d_reported:
        type: "number"
        example: 4.88588E9
        description: "Rolling 7 day reported volume in the specified currency. *This\
          \ field is only returned if requested through the `aux` request parameter.*"
      volume_30d:
        type: "number"
        example: 4.88588E9
        description: "Rolling 30 day adjusted volume in the specified currency. *This\
          \ field is only returned if requested through the `aux` request parameter.*"
      volume_30d_reported:
        type: "number"
        example: 4.88588E9
        description: "Rolling 30 day reported volume in the specified currency. *This\
          \ field is only returned if requested through the `aux` request parameter.*"
      market_cap:
        type: "number"
        example: 1.21020662982E11
        description: "Market cap in the specified currency."
      market_cap_dominance:
        type: "number"
        example: 1.21020662982E11
        description: "Market cap dominance in the specified currency."
      fully_diluted_market_cap:
        type: "number"
        example: 1.21020662982E11
        description: "Fully diluted market cap in the specified currency."
      percent_change_1h:
        type: "number"
        example: 0.03
        description: "1 hour change in the specified currency."
      percent_change_24h:
        type: "number"
        example: 5.75
        description: "24 hour change in the specified currency."
      percent_change_7d:
        type: "number"
        example: -19.64
        description: "7 day change in the specified currency."
      percent_change_30d:
        type: "number"
        example: -19.64
        description: "30 day change in the specified currency."
      last_updated:
        type: "string"
        format: "date"
        example: "2018-06-02T23:59:59.999Z"
        description: "Timestamp (ISO 8601) of when the conversion currency's current\
          \ value was referenced."
    description: "A market quote in the currency conversion option."
  Cryptocurrency Quotes Latest - Quote map:
    type: "object"
    required:
    - "$key"
    properties:
      $key:
        description: "A market quote in the currency conversion option."
        $ref: "#/definitions/Cryptocurrency Quotes Latest - Quote object"
    description: "A map of market quotes in different currency conversions. The default\
      \ map included is USD."
  Cryptocurrency Quotes Latest - Cryptocurrency object:
    type: "object"
    required:
    - "id"
    - "last_updated"
    - "name"
    - "quote"
    - "slug"
    - "symbol"
    properties:
      id:
        type: "integer"
        example: 1
        description: "The unique CoinMarketCap ID for this cryptocurrency."
      name:
        type: "string"
        example: "Bitcoin"
        description: "The name of this cryptocurrency."
      symbol:
        type: "string"
        example: "BTC"
        description: "The ticker symbol for this cryptocurrency."
      slug:
        type: "string"
        example: "bitcoin"
        description: "The web URL friendly shorthand version of this cryptocurrency\
          \ name."
      is_active:
        type: "integer"
        example: 1
        description: "1 if this cryptocurrency has at least 1 active market currently\
          \ being tracked by the platform, otherwise 0. A value of 1 is analogous\
          \ with `listing_status=active`."
        minimum: 0
        maximum: 1
      is_fiat:
        type: "integer"
        example: 1
        description: "1 if this is a fiat"
        minimum: 0
        maximum: 1
      cmc_rank:
        type: "integer"
        example: 5
        description: "The cryptocurrency's CoinMarketCap rank by market cap."
      num_market_pairs:
        type: "integer"
        example: 500
        description: "The number of active trading pairs available for this cryptocurrency\
          \ across supported exchanges."
      circulating_supply:
        type: "number"
        example: 1.69501E7
        description: "The approximate number of coins circulating for this cryptocurrency."
      total_supply:
        type: "number"
        example: 1.69501E7
        description: "The approximate total amount of coins in existence right now\
          \ (minus any coins that have been verifiably burned)."
      market_cap_by_total_supply:
        type: "number"
        example: 1.58055024432E11
        description: "The market cap by total supply. *This field is only returned\
          \ if requested through the `aux` request parameter.*"
      max_supply:
        type: "number"
        example: 2.1E7
        description: "The expected maximum limit of coins ever to be available for\
          \ this cryptocurrency."
      date_added:
        type: "string"
        format: "date"
        example: "2013-04-28T00:00:00.000Z"
        description: "Timestamp (ISO 8601) of when this cryptocurrency was added to\
          \ CoinMarketCap."
      tags:
        description: "Array of tags associated with this cryptocurrency. Currently\
          \ only a mineable tag will be returned if the cryptocurrency is mineable.\
          \ Additional tags will be returned in the future."
        $ref: "#/definitions/tags"
      platform:
        description: "Metadata about the parent cryptocurrency platform this cryptocurrency\
          \ belongs to if it is a token, otherwise null."
        $ref: "#/definitions/platform"
      last_updated:
        type: "string"
        format: "date"
        example: "2018-06-02T23:59:59.999Z"
        description: "Timestamp (ISO 8601) of the last time this cryptocurrency's\
          \ market data was updated."
      self_reported_circulating_supply:
        type: "number"
        example: 1.69501E7
        description: "The self reported number of coins circulating for this cryptocurrency."
      self_reported_market_cap:
        type: "number"
        example: 1.69501E7
        description: "The self reported market cap for this cryptocurrency."
      quote:
        description: "A map of market quotes in different currency conversions. The\
          \ default map included is USD."
        $ref: "#/definitions/Cryptocurrency Quotes Latest - Quote map"
    description: "A cryptocurrency object for each requested."
  Cryptocurrency Quotes Latest - Cryptocurrency Results map:
    type: "object"
    required:
    - "$key"
    properties:
      $key:
        description: "A cryptocurrency object for each requested."
        $ref: "#/definitions/Cryptocurrency Quotes Latest - Cryptocurrency object"
    description: "A map of cryptocurrency objects by ID, symbol, or slug (as used\
      \ in query parameters)."
    example:
      "1":
        id: 1
        name: "Bitcoin"
        symbol: "BTC"
        slug: "bitcoin"
        is_active: 1
        is_fiat: 0
        circulating_supply: 17199862
        total_supply: 17199862
        max_supply: 21000000
        date_added: "2013-04-28T00:00:00.000Z"
        num_market_pairs: 331
        cmc_rank: 1
        last_updated: "2018-08-09T21:56:28.000Z"
        tags:
        - "mineable"
        quote:
          USD:
            price: 6602.60701122
            volume_24h: 4.3144446875194E9
            volume_change_24h: -0.152774
            percent_change_1h: 0.988615
            percent_change_24h: 4.37185
            percent_change_7d: -12.1352
            percent_change_30d: -12.1352
            market_cap: 8.521646592502758E11
            market_cap_dominance: 51
            fully_diluted_market_cap: 9.5283508943114E11
            last_updated: "2018-08-09T21:56:28.000Z"
  Cryptocurrency Quotes Latest - Response Model:
    type: "object"
    required:
    - "data"
    properties:
      data:
        description: "A map of cryptocurrency objects by ID, symbol, or slug (as used\
          \ in query parameters)."
        $ref: "#/definitions/Cryptocurrency Quotes Latest - Cryptocurrency Results\
          \ map"
      status:
        description: "Standardized status object for API calls."
        $ref: "#/definitions/API Status Object"
    example:
      data:
        "1":
          id: 1
          name: "Bitcoin"
          symbol: "BTC"
          slug: "bitcoin"
          is_active: 1
          is_fiat: 0
          circulating_supply: 17199862
          total_supply: 17199862
          max_supply: 21000000
          date_added: "2013-04-28T00:00:00.000Z"
          num_market_pairs: 331
          cmc_rank: 1
          last_updated: "2018-08-09T21:56:28.000Z"
          tags:
          - "mineable"
          quote:
            USD:
              price: 6602.60701122
              volume_24h: 4.3144446875194E9
              volume_change_24h: -0.152774
              percent_change_1h: 0.988615
              percent_change_24h: 4.37185
              percent_change_7d: -12.1352
              percent_change_30d: -12.1352
              market_cap: 8.521646592502758E11
              market_cap_dominance: 51
              fully_diluted_market_cap: 9.5283508943114E11
              last_updated: "2018-08-09T21:56:28.000Z"
      status:
        error_message: ""
        elapsed: 10
        credit_count: 1
        error_code: 0
        timestamp: "2022-09-16T12:55:54.015Z"
  Cryptocurrency Trending Gainers & Losers - Results array:
    type: "array"
    description: "Array of cryptocurrency objects matching the list options."
    items:
      description: "A cryptocurrency object for every cryptocurrency that matched\
        \ list options."
      $ref: "#/definitions/Cryptocurrency - Cryptocurrency object"
  Cryptocurrency Trending Gainers & Losers - Response Model:
    type: "object"
    required:
    - "data"
    properties:
      data:
        description: "Array of cryptocurrency objects matching the list options."
        $ref: "#/definitions/Cryptocurrency Trending Gainers & Losers - Results array"
      status:
        description: "Standardized status object for API calls."
        $ref: "#/definitions/API Status Object"
    example:
      data:
      - id: 1
        name: "Bitcoin"
        symbol: "BTC"
        slug: "bitcoin"
        cmc_rank: 5
        num_market_pairs: 500
        circulating_supply: 16950100
        total_supply: 16950100
        max_supply: 21000000
        last_updated: "2018-06-02T22:51:28.209Z"
        date_added: "2013-04-28T00:00:00.000Z"
        tags:
        - "mineable"
        quote:
          USD:
            price: 9283.92
            volume_24h: 7155680000
            percent_change_1h: -0.152774
            percent_change_24h: 0.518894
            percent_change_7d: 0.986573
            market_cap: 158055024432
            last_updated: "2018-08-09T22:53:32.000Z"
          BTC:
            price: 1
            volume_24h: 772012
            percent_change_1h: 0
            percent_change_24h: 0
            percent_change_7d: 0
            market_cap: 17024600
            last_updated: "2018-08-09T22:53:32.000Z"
      - id: 1027
        name: "Ethereum"
        symbol: "ETH"
        slug: "ethereum"
        num_market_pairs: 6360
        circulating_supply: 16950100
        total_supply: 16950100
        max_supply: 21000000
        last_updated: "2018-06-02T22:51:28.209Z"
        date_added: "2013-04-28T00:00:00.000Z"
        tags:
        - "mineable"
        quote:
          USD:
            price: 1283.92
            volume_24h: 7155680000
            percent_change_1h: -0.152774
            percent_change_24h: 0.518894
            percent_change_7d: 0.986573
            market_cap: 158055024432
            last_updated: "2018-08-09T22:53:32.000Z"
          ETH:
            price: 1
            volume_24h: 772012
            percent_change_1h: 0
            percent_change_24h: 0
            percent_change_7d: 0
            market_cap: 17024600
            last_updated: "2018-08-09T22:53:32.000Z"
      status:
        timestamp: "2018-06-02T22:51:28.209Z"
        error_code: 0
        error_message: ""
        elapsed: 10
        credit_count: 1
  Cryptocurrency Trending Latest - Cryptocurrency object:
    type: "object"
    required:
    - "id"
    - "last_updated"
    - "name"
    - "quote"
    - "slug"
    - "symbol"
    properties:
      id:
        type: "integer"
        example: 1
        description: "The unique CoinMarketCap ID for this cryptocurrency."
      name:
        type: "string"
        example: "Bitcoin"
        description: "The name of this cryptocurrency."
      symbol:
        type: "string"
        example: "BTC"
        description: "The ticker symbol for this cryptocurrency."
      slug:
        type: "string"
        example: "bitcoin"
        description: "The web URL friendly shorthand version of this cryptocurrency\
          \ name."
      cmc_rank:
        type: "integer"
        example: 5
        description: "The cryptocurrency's CoinMarketCap rank by market cap."
      is_fiat:
        type: "integer"
        example: 1
        description: "1 if this is a fiat"
        minimum: 0
        maximum: 1
      self_reported_circulating_supply:
        type: "number"
        example: 1.69501E7
        description: "The self reported number of coins circulating for this cryptocurrency."
      self_reported_market_cap:
        type: "number"
        example: 1.69501E7
        description: "The self reported market cap for this cryptocurrency."
      is_active:
        type: "integer"
        example: 1
        description: "1 if this cryptocurrency has at least 1 active market currently\
          \ being tracked by the platform, otherwise 0. A value of 1 is analogous\
          \ with `listing_status=active`."
        minimum: 0
        maximum: 1
      num_market_pairs:
        type: "integer"
        example: 500
        description: "The number of active trading pairs available for this cryptocurrency\
          \ across supported exchanges."
      circulating_supply:
        type: "number"
        example: 1.69501E7
        description: "The approximate number of coins circulating for this cryptocurrency."
      total_supply:
        type: "number"
        example: 1.69501E7
        description: "The approximate total amount of coins in existence right now\
          \ (minus any coins that have been verifiably burned)."
      market_cap_by_total_supply:
        type: "number"
        example: 1.58055024432E11
        description: "The market cap by total supply. *This field is only returned\
          \ if requested through the `aux` request parameter.*"
      max_supply:
        type: "number"
        example: 2.1E7
        description: "The expected maximum limit of coins ever to be available for\
          \ this cryptocurrency."
      last_updated:
        type: "string"
        format: "date"
        example: "2018-06-02T22:51:28.209Z"
        description: "Timestamp (ISO 8601) of the last time this cryptocurrency's\
          \ market data was updated."
      date_added:
        type: "string"
        format: "date"
        example: "2013-04-28T00:00:00.000Z"
        description: "Timestamp (ISO 8601) of when this cryptocurrency was added to\
          \ CoinMarketCap."
      tags:
        description: "Array of tags associated with this cryptocurrency. Currently\
          \ only a mineable tag will be returned if the cryptocurrency is mineable.\
          \ Additional tags will be returned in the future."
        $ref: "#/definitions/tags"
      platform:
        description: "Metadata about the parent cryptocurrency platform this cryptocurrency\
          \ belongs to if it is a token, otherwise null."
        $ref: "#/definitions/platform"
      quote:
        description: "A map of market quotes in different currency conversions. The\
          \ default map included is USD."
        $ref: "#/definitions/Cryptocurrency - Quote map"
    description: "A cryptocurrency object for every cryptocurrency that matched list\
      \ options."
  Cryptocurrency Trending Latest - Results array:
    type: "array"
    description: "Array of cryptocurrency objects matching the list options."
    items:
      description: "A cryptocurrency object for every cryptocurrency that matched\
        \ list options."
      $ref: "#/definitions/Cryptocurrency Trending Latest - Cryptocurrency object"
  Cryptocurrency Trending Latest - Response Model:
    type: "object"
    required:
    - "data"
    properties:
      data:
        description: "Array of cryptocurrency objects matching the list options."
        $ref: "#/definitions/Cryptocurrency Trending Latest - Results array"
      status:
        description: "Standardized status object for API calls."
        $ref: "#/definitions/API Status Object"
    example:
      data:
      - id: 1
        name: "Bitcoin"
        symbol: "BTC"
        slug: "bitcoin"
        cmc_rank: 5
        is_active: true
        is_fiat: 0
        num_market_pairs: 500
        circulating_supply: 16950100
        total_supply: 16950100
        max_supply: 21000000
        last_updated: "2018-06-02T22:51:28.209Z"
        date_added: "2013-04-28T00:00:00.000Z"
        tags:
        - "mineable"
        quote:
          USD:
            price: 9283.92
            volume_24h: 7155680000
            percent_change_1h: -0.152774
            percent_change_24h: 0.518894
            percent_change_7d: 0.986573
            market_cap: 158055024432
            last_updated: "2018-08-09T22:53:32.000Z"
          BTC:
            price: 1
            volume_24h: 772012
            percent_change_1h: 0
            percent_change_24h: 0
            percent_change_7d: 0
            market_cap: 17024600
            last_updated: "2018-08-09T22:53:32.000Z"
      - id: 1027
        name: "Ethereum"
        symbol: "ETH"
        slug: "ethereum"
        num_market_pairs: 6360
        circulating_supply: 16950100
        total_supply: 16950100
        max_supply: 21000000
        last_updated: "2018-06-02T22:51:28.209Z"
        date_added: "2013-04-28T00:00:00.000Z"
        tags:
        - "mineable"
        quote:
          USD:
            price: 1283.92
            volume_24h: 7155680000
            percent_change_1h: -0.152774
            percent_change_24h: 0.518894
            percent_change_7d: 0.986573
            market_cap: 158055024432
            last_updated: "2018-08-09T22:53:32.000Z"
          ETH:
            price: 1
            volume_24h: 772012
            percent_change_1h: 0
            percent_change_24h: 0
            percent_change_7d: 0
            market_cap: 17024600
            last_updated: "2018-08-09T22:53:32.000Z"
      status:
        timestamp: "2018-06-02T22:51:28.209Z"
        error_code: 0
        error_message: ""
        elapsed: 10
        credit_count: 1
  Cryptocurrency Trending Most Visited - Results array:
    type: "array"
    description: "Array of cryptocurrency objects matching the list options."
    items:
      description: "A cryptocurrency object for every cryptocurrency that matched\
        \ list options."
      $ref: "#/definitions/Cryptocurrency - Cryptocurrency object"
  Cryptocurrency Trending Most Visited - Response Model:
    type: "object"
    required:
    - "data"
    properties:
      data:
        description: "Array of cryptocurrency objects matching the list options."
        $ref: "#/definitions/Cryptocurrency Trending Most Visited - Results array"
      status:
        description: "Standardized status object for API calls."
        $ref: "#/definitions/API Status Object"
    example:
      data:
      - id: 1
        name: "Bitcoin"
        symbol: "BTC"
        slug: "bitcoin"
        cmc_rank: 5
        num_market_pairs: 500
        circulating_supply: 16950100
        total_supply: 16950100
        max_supply: 21000000
        last_updated: "2018-06-02T22:51:28.209Z"
        date_added: "2013-04-28T00:00:00.000Z"
        tags:
        - "mineable"
        quote:
          USD:
            price: 9283.92
            volume_24h: 7155680000
            percent_change_1h: -0.152774
            percent_change_24h: 0.518894
            percent_change_7d: 0.986573
            market_cap: 158055024432
            last_updated: "2018-08-09T22:53:32.000Z"
          BTC:
            price: 1
            volume_24h: 772012
            percent_change_1h: 0
            percent_change_24h: 0
            percent_change_7d: 0
            market_cap: 17024600
            last_updated: "2018-08-09T22:53:32.000Z"
      - id: 1027
        name: "Ethereum"
        symbol: "ETH"
        slug: "ethereum"
        num_market_pairs: 6360
        circulating_supply: 16950100
        total_supply: 16950100
        max_supply: 21000000
        last_updated: "2018-06-02T22:51:28.209Z"
        date_added: "2013-04-28T00:00:00.000Z"
        tags:
        - "mineable"
        quote:
          USD:
            price: 1283.92
            volume_24h: 7155680000
            percent_change_1h: -0.152774
            percent_change_24h: 0.518894
            percent_change_7d: 0.986573
            market_cap: 158055024432
            last_updated: "2018-08-09T22:53:32.000Z"
          ETH:
            price: 1
            volume_24h: 772012
            percent_change_1h: 0
            percent_change_24h: 0
            percent_change_7d: 0
            market_cap: 17024600
            last_updated: "2018-08-09T22:53:32.000Z"
      status:
        timestamp: "2018-06-02T22:51:28.209Z"
        error_code: 0
        error_message: ""
        elapsed: 10
        credit_count: 1
  Exchange Listings Latest - Quote object:
    type: "object"
    required:
    - "last_updated"
    - "percent_change_volume_24h"
    - "percent_change_volume_30d"
    - "percent_change_volume_7d"
    - "volume_24h"
    - "volume_24h_adjusted"
    - "volume_30d"
    - "volume_7d"
    properties:
      last_updated:
        type: "string"
        format: "date"
        example: "2018-06-02T23:59:59.999Z"
        description: "Timestamp (ISO 8601) of when the conversion currency's current\
          \ value was referenced for this conversion."
      volume_24h:
        type: "number"
        example: 7.68478308529847E8
        description: "Reported 24 hour volume in the specified currency."
      volume_24h_adjusted:
        type: "number"
        example: 7.68478308529847E8
        description: "Adjusted 24 hour volume in the specified currency for spot markets\
          \ excluding markets with no fees and transaction mining."
      volume_7d:
        type: "number"
        example: 3.666423776E9
        description: "7 day volume in the specified currency."
      volume_30d:
        type: "number"
        example: 2.1338299776E10
        description: "30 day volume in the specified currency."
      percent_change_volume_24h:
        type: "number"
        example: 0.03
        description: "24 hour volume change percentage in the specified currency."
      percent_change_volume_7d:
        type: "number"
        example: 5.75
        description: "7 day volume change percentage in the specified currency."
      percent_change_volume_30d:
        type: "number"
        example: -19.64
        description: "30 day volume change percentage in the specified currency."
      effective_liquidity_24h:
        type: "number"
        example: -19.64
        description: "24 hour liquidity in the specified currency."
      derivative_volume:
        type: "number"
        example: 7.68478308529847E8
        description: "Reported 24 hour derivative volume in the specified currency."
      open_interest:
        type: "number"
        example: 7.68478308529847E8
        description: "Reported 24 hour derivative open interest in the specified currency."
      spot_volume_usd:
        type: "number"
        example: 7.68478308529847E8
        description: "Reported all time spot volume in the specified currency."
    description: "A market quote in the currency conversion option."
  Exchange Listings Latest - Quote map:
    type: "object"
    required:
    - "$key"
    properties:
      $key:
        description: "A market quote in the currency conversion option."
        $ref: "#/definitions/Exchange Listings Latest - Quote object"
    description: "A map of market quotes in different currency conversions. The default\
      \ map included is USD."
    example:
      USD:
        volume_24h: 1418940000
  Exchange Listings Latest - Exchange object:
    type: "object"
    required:
    - "id"
    - "last_updated"
    - "name"
    - "quote"
    - "slug"
    properties:
      id:
        type: "integer"
        example: 1
        description: "The unique CoinMarketCap ID for this exchange."
      name:
        type: "string"
        example: "Binance"
        description: "The name of this exchange."
      slug:
        type: "string"
        example: "Binance"
        description: "The web URL friendly shorthand version of this exchange name."
      num_market_pairs:
        type: "string"
        example: "500"
        description: "The number of trading pairs actively tracked on this exchange."
      date_launched:
        type: "string"
        format: "date"
        example: "2018-06-02T00:00:00.000Z"
        description: "Timestamp (ISO 8601) of the date this exchange launched. *This\
          \ field is only returned if requested through the `aux` request parameter.*"
      exchange_score:
        type: "number"
        example: 9.8
        description: "The exchange score."
      liquidity_score:
        type: "number"
        example: 9.8
        description: "The liquidity score."
      rank:
        type: "integer"
        example: 5
        description: "The exchange rank."
      traffic_score:
        type: "number"
        example: 1000.0
        description: "The traffic score."
      last_updated:
        type: "string"
        format: "date"
        example: "2018-06-02T00:00:00.000Z"
        description: "Timestamp (ISO 8601) of the last time this record was upated."
      quote:
        description: "A map of market quotes in different currency conversions. The\
          \ default map included is USD."
        $ref: "#/definitions/Exchange Listings Latest - Quote map"
    description: "An exchange object for every exchange that matched list options."
  Exchange Listings Latest - Results array:
    type: "array"
    description: "Array of exchange objects matching the list options."
    items:
      description: "An exchange object for every exchange that matched list options."
      $ref: "#/definitions/Exchange Listings Latest - Exchange object"
    example:
    - id: 270
      name: "Binance"
      slug: "binance"
      num_market_pairs: 1214
      fiats:
      - "AED"
      - "USD"
      traffic_score: 1000
      rank: 1
      exchange_score: 9.8028
      liquidity_score: 9.8028
      last_updated: "2018-11-08T22:18:00.000Z"
      quote:
        USD:
          volume_24h: 7.69291636239632E8
          volume_24h_adjusted: 7.69291636239632E8
          volume_7d: 3666423776
          volume_30d: 21338299776
          percent_change_volume_24h: -11.6153
          percent_change_volume_7d: 67.2055
          percent_change_volume_30d: 0.00169339
          effective_liquidity_24h: 629.9774
          derivative_volume_usd: 6.282861862885901E10
          spot_volume_usd: 3.96825806148572E10
    - id: 294
      name: "OKEx"
      slug: "okex"
      num_market_pairs: 385
      fiats:
      - "AED"
      - "USD"
      traffic_score: 845.1565
      rank: 1
      exchange_score: 7.0815
      liquidity_score: 9.8028
      last_updated: "2018-11-08T22:18:00.000Z"
      quote:
        USD:
          volume_24h: 6.77439315721563E8
          volume_24h_adjusted: 6.77439315721563E8
          volume_7d: 3506137120
          volume_30d: 14418225072
          percent_change_volume_24h: -13.9256
          percent_change_volume_7d: 60.0461
          percent_change_volume_30d: 67.2225
          effective_liquidity_24h: 629.9774
          derivative_volume_usd: 6.282861862885901E10
          spot_volume_usd: 3.96825806148572E10
  Exchange Listings Latest - Response Model:
    type: "object"
    required:
    - "data"
    properties:
      data:
        description: "Array of exchange objects matching the list options."
        $ref: "#/definitions/Exchange Listings Latest - Results array"
      status:
        description: "Standardized status object for API calls."
        $ref: "#/definitions/API Status Object"
    example:
      data: ""
      status:
        error_message: ""
        elapsed: 10
        credit_count: 1
        error_code: 0
        timestamp: "2022-09-16T12:55:54.015Z"
  Exchange Market Pairs Latest - Pair Base Currency Info object:
    type: "object"
    required:
    - "currency_id"
    - "currency_symbol"
    - "currency_type"
    - "exchange_symbol"
    properties:
      currency_id:
        type: "integer"
        example: 1
        description: "The CoinMarketCap ID for the base currency in this market pair."
      currency_name:
        type: "string"
        example: "Bitcoin"
        description: "The name of this cryptocurrency. *This field is only returned\
          \ if requested through the `aux` request parameter.*"
      currency_symbol:
        type: "string"
        example: "BTC"
        description: "The symbol for the base currency in this market pair."
      exchange_symbol:
        type: "string"
        example: "BTC"
        description: "The exchange reported symbol for the base currency in this market\
          \ pair. In most cases this is identical to CoinMarketCap's symbol but it\
          \ may differ if the exchange uses an outdated or contentious symbol that\
          \ contrasts with the majority of other markets."
      currency_slug:
        type: "string"
        example: "bitcoin"
        description: "The web URL friendly shorthand version of this cryptocurrency\
          \ name. *This field is only returned if requested through the `aux` request\
          \ parameter.*"
      currency_type:
        type: "string"
        example: "cryptocurrency"
        description: "The currency type for the base currency in this market pair."
        enum:
        - "cryptocurrency"
        - "fiat"
    description: "Base currency details object for this market pair."
  Exchange Market Pairs Latest - Pair Base Currency Info object 1:
    type: "object"
    required:
    - "currency_id"
    - "currency_symbol"
    - "currency_type"
    - "exchange_symbol"
    properties:
      currency_id:
        type: "integer"
        example: 2781
        description: "The CoinMarketCap ID for the quote (secondary) currency in this\
          \ market pair."
      currency_name:
        type: "string"
        example: "Bitcoin"
        description: "The name of this cryptocurrency. *This field is only returned\
          \ if requested through the `aux` request parameter.*"
      currency_symbol:
        type: "string"
        example: "USD"
        description: "The symbol for the quote (secondary) currency in this market\
          \ pair."
      exchange_symbol:
        type: "string"
        example: "USD"
        description: "The exchange reported symbol for the quote (secondary) currency\
          \ in this market pair. In most cases this is identical to CoinMarketCap's\
          \ symbol but it may differ if the exchange uses an outdated or contentious\
          \ symbol that contrasts with the majority of other markets."
      currency_slug:
        type: "string"
        example: "bitcoin"
        description: "The web URL friendly shorthand version of this cryptocurrency\
          \ name. *This field is only returned if requested through the `aux` request\
          \ parameter.*"
      currency_type:
        type: "string"
        example: "fiat"
        description: "The currency type for the quote (secondary) currency in this\
          \ market pair."
        enum:
        - "cryptocurrency"
        - "fiat"
    description: "Quote (secondary) currency details object for this market pair"
  Exchange Market Pairs Latest - Market Pair Exchange Reported Quote:
    type: "object"
    required:
    - "last_updated"
    - "price"
    - "volume_24h_base"
    - "volume_24h_quote"
    - "volume_percentage"
    properties:
      price:
        type: "number"
        example: 8000.23
        description: "The last exchange reported price for this market pair in quote\
          \ currency units."
      volume_24h_base:
        type: "number"
        example: 30768.0
        description: "The last exchange reported 24 hour volume for this market pair\
          \ in base cryptocurrency units."
      volume_24h_quote:
        type: "number"
        example: 2.504484432E8
        description: "The last exchange reported 24 hour volume for this market pair\
          \ in quote cryptocurrency units."
      volume_percentage:
        type: "number"
        example: 0.03
        description: "Percentage of total exchange volume_24h"
      last_updated:
        type: "string"
        format: "date"
        example: "2018-06-02T23:59:59.999Z"
        description: "Timestamp (ISO 8601) of the last time this market data was updated."
    description: "A default exchange reported quote containing raw exchange reported\
      \ values."
  Exchange Market Pairs Latest - Market Pair Quote:
    type: "object"
    required:
    - "last_updated"
    - "price"
    - "volume_24h"
    properties:
      price:
        type: "number"
        example: 8000.23
        description: "The last reported exchange price for this market pair converted\
          \ into the requested convert currency."
      price_quote:
        type: "number"
        example: 8000.23
        description: "The latest exchange reported price in base units converted into\
          \ the requested convert currency. *This field is only returned if requested\
          \ through the `aux` request parameter.*"
      volume_24h:
        type: "number"
        example: 1600000.0
        description: "The last reported exchange volume for this market pair converted\
          \ into the requested convert currency."
      depth_negative_two:
        type: "number"
        example: 1600000.0
        description: "-2% Depth in the specified currency."
      depth_positive_two:
        type: "number"
        example: 1600000.0
        description: "+2% Depth in the specified currency."
      last_updated:
        type: "string"
        format: "date"
        example: "2018-06-02T23:59:59.999Z"
        description: "Timestamp (ISO 8601) of when the conversion currency's current\
          \ value was referenced for this conversion."
    description: "One or more market quotes where $key is the conversion currency\
      \ requested, ex. USD"
  Exchange Market Pairs Latest - Market Pair Quote object:
    type: "object"
    required:
    - "$key"
    - "exchange_reported"
    properties:
      exchange_reported:
        description: "A default exchange reported quote containing raw exchange reported\
          \ values."
        $ref: "#/definitions/Exchange Market Pairs Latest - Market Pair Exchange Reported\
          \ Quote"
      $key:
        description: "One or more market quotes where $key is the conversion currency\
          \ requested, ex. USD"
        $ref: "#/definitions/Exchange Market Pairs Latest - Market Pair Quote"
    description: "Market Pair quotes object containing key->quote objects for each\
      \ convert option requested. USD and \"exchange_reported\" are defaults."
  Exchange Market Pairs Latest - Market Pair Info object:
    type: "object"
    required:
    - "category"
    - "mark_pair_base"
    - "mark_pair_quote"
    - "market_id"
    - "market_pair"
    - "quote"
    properties:
      market_id:
        type: "integer"
        example: 9933
        description: "The CoinMarketCap ID for this market pair. This ID can reliably\
          \ be used to identify this unique market as the ID never changes."
      market_pair:
        type: "string"
        example: "BTC/USD"
        description: "The name of this market pair. Example: \"BTC/USD\""
      category:
        type: "string"
        example: "spot"
        description: "The category of trading this market falls under. Spot markets\
          \ are the most common but options include derivatives and OTC."
        enum:
        - "spot"
        - "derivatives"
        - "otc"
      fee_type:
        type: "string"
        example: "percentage"
        description: "The fee type the exchange enforces for this market."
        enum:
        - "percentage"
        - "no-fees"
        - "transactional-mining"
        - "unknown"
      market_url:
        type: "string"
        example: "https://www.binance.com/en/trade/BTC_USDT"
        description: "The URL to this market's trading page on the exchange if available.\
          \ If not available the exchange's homepage URL is returned. *This field\
          \ is only returned if requested through the `aux` request parameter.*"
      mark_pair_base:
        description: "Base currency details object for this market pair."
        $ref: "#/definitions/Exchange Market Pairs Latest - Pair Base Currency Info\
          \ object"
      mark_pair_quote:
        description: "Quote (secondary) currency details object for this market pair"
        $ref: "#/definitions/Exchange Market Pairs Latest - Pair Base Currency Info\
          \ object 1"
      quote:
        description: "Market Pair quotes object containing key->quote objects for\
          \ each convert option requested. USD and \"exchange_reported\" are defaults."
        $ref: "#/definitions/Exchange Market Pairs Latest - Market Pair Quote object"
    description: "Market Pair info object."
  Exchange Market Pairs Latest - Market Pairs array:
    type: "array"
    description: "Array of all active market pairs for this exchange."
    items:
      description: "Market Pair info object."
      $ref: "#/definitions/Exchange Market Pairs Latest - Market Pair Info object"
  Exchange Market Pairs Latest - Results object:
    type: "object"
    required:
    - "id"
    - "market_pairs"
    - "name"
    - "num_market_pairs"
    - "slug"
    - "volume_24h"
    properties:
      id:
        type: "integer"
        example: 1
        description: "The CoinMarketCap ID for this exchange."
      name:
        type: "string"
        example: "Binance"
        description: "The name of this exchange."
      slug:
        type: "string"
        example: "binance"
        description: "The slug for this exchange."
      num_market_pairs:
        type: "integer"
        example: 303
        description: "The number of market pairs that are open for trading on this\
          \ exchange."
      volume_24h:
        type: "number"
        example: 7.68478308529847E8
        description: "Reported 24 hour volume in USD."
      market_pairs:
        description: "Array of all active market pairs for this exchange."
        $ref: "#/definitions/Exchange Market Pairs Latest - Market Pairs array"
    description: "Results of your query returned as an object."
    example:
      id: 270
      name: "Binance"
      slug: "binance"
      num_market_pairs: 473
      volume_24h: 7.69291636239632E8
      market_pairs:
      - market_id: 9933
        market_pair: "BTC/USDT"
        category: "spot"
        fee_type: "percentage"
        outlier_detected: 0
        market_pair_base:
          currency_id: 1
          currency_symbol: "BTC"
          exchange_symbol: "BTC"
          currency_type: "cryptocurrency"
        market_pair_quote:
          currency_id: 825
          currency_symbol: "USDT"
          exchange_symbol: "USDT"
          currency_type: "cryptocurrency"
        quote:
          exchange_reported:
            price: 7901.83
            volume_24h_base: 47251.3345550653
            volume_24h_quote: 3.73372012927251E8
            volume_percentage: 19.4346563602467
            last_updated: "2019-05-24T01:40:10.000Z"
          USD:
            price: 7933.66233493434
            volume_24h: 3.74876133234903E8
            depth_negative_two: 40654.68019906
            depth_positive_two: 17352.9964811
            last_updated: "2019-05-24T01:40:10.000Z"
      - market_id: 36329
        market_pair: "MATIC/BTC"
        category: "spot"
        fee_type: "percentage"
        outlier_detected: 0
        market_pair_base:
          currency_id: 3890
          currency_symbol: "MATIC"
          exchange_symbol: "MATIC"
          currency_type: "cryptocurrency"
        market_pair_quote:
          currency_id: 1
          currency_symbol: "BTC"
          exchange_symbol: "BTC"
          currency_type: "cryptocurrency"
        quote:
          exchange_reported:
            price: 3.4E-6
            volume_24h_base: 8.77396838105E9
            volume_24h_quote: 29831.49249557
            volume_percentage: 19.4346563602467
            last_updated: "2019-05-24T01:41:16.000Z"
          USD:
            price: 0.0269295015799739
            volume_24h: 2.36278595380127E8
            depth_negative_two: 40654.68019906
            depth_positive_two: 17352.9964811
            last_updated: "2019-05-24T01:41:16.000Z"
  Exchange Market Pairs Latest - Response Model:
    type: "object"
    required:
    - "data"
    properties:
      data:
        description: "Results of your query returned as an object."
        $ref: "#/definitions/Exchange Market Pairs Latest - Results object"
      status:
        description: "Standardized status object for API calls."
        $ref: "#/definitions/API Status Object"
    example:
      data:
        id: 270
        name: "Binance"
        slug: "binance"
        num_market_pairs: 473
        volume_24h: 7.69291636239632E8
        market_pairs:
        - market_id: 9933
          market_pair: "BTC/USDT"
          category: "spot"
          fee_type: "percentage"
          outlier_detected: 0
          market_pair_base:
            currency_id: 1
            currency_symbol: "BTC"
            exchange_symbol: "BTC"
            currency_type: "cryptocurrency"
          market_pair_quote:
            currency_id: 825
            currency_symbol: "USDT"
            exchange_symbol: "USDT"
            currency_type: "cryptocurrency"
          quote:
            exchange_reported:
              price: 7901.83
              volume_24h_base: 47251.3345550653
              volume_24h_quote: 3.73372012927251E8
              volume_percentage: 19.4346563602467
              last_updated: "2019-05-24T01:40:10.000Z"
            USD:
              price: 7933.66233493434
              volume_24h: 3.74876133234903E8
              depth_negative_two: 40654.68019906
              depth_positive_two: 17352.9964811
              last_updated: "2019-05-24T01:40:10.000Z"
        - market_id: 36329
          market_pair: "MATIC/BTC"
          category: "spot"
          fee_type: "percentage"
          outlier_detected: 0
          market_pair_base:
            currency_id: 3890
            currency_symbol: "MATIC"
            exchange_symbol: "MATIC"
            currency_type: "cryptocurrency"
          market_pair_quote:
            currency_id: 1
            currency_symbol: "BTC"
            exchange_symbol: "BTC"
            currency_type: "cryptocurrency"
          quote:
            exchange_reported:
              price: 3.4E-6
              volume_24h_base: 8.77396838105E9
              volume_24h_quote: 29831.49249557
              volume_percentage: 19.4346563602467
              last_updated: "2019-05-24T01:41:16.000Z"
            USD:
              price: 0.0269295015799739
              volume_24h: 2.36278595380127E8
              depth_negative_two: 40654.68019906
              depth_positive_two: 17352.9964811
              last_updated: "2019-05-24T01:41:16.000Z"
      status:
        error_message: ""
        elapsed: 10
        credit_count: 1
        error_code: 0
        timestamp: "2022-09-16T12:55:54.015Z"
  Exchange Historical Quotes - Currency Quote object:
    type: "object"
    required:
    - "timestamp"
    - "volume_24hr"
    properties:
      volume_24hr:
        type: "number"
        example: 1235000.0
        description: "Combined 24 hour volume for all market pairs on this exchange\
          \ at the current historical interval."
      timestamp:
        type: "string"
        format: "date"
        example: "2018-06-02T22:51:28.209Z"
        description: "Timestamp (ISO 8601) of when the conversion currency's current\
          \ value was referenced for this conversion."
    description: "The market details for the current interval and currency conversion\
      \ option. The map key being the curency symbol."
  Exchange Historical Quotes - Quote currency map:
    type: "object"
    required:
    - "$key"
    properties:
      $key:
        description: "The market details for the current interval and currency conversion\
          \ option. The map key being the curency symbol."
        $ref: "#/definitions/Exchange Historical Quotes - Currency Quote object"
    description: "A map of market details for this quote in different currency conversions.\
      \ The default map included is USD."
  Exchange Historical Quotes - nterval Quote object:
    type: "object"
    required:
    - "num_market_pairs"
    - "quote"
    - "timestamp"
    properties:
      timestamp:
        type: "string"
        format: "date"
        example: "2018-06-02T00:00:00.000Z"
        description: "Timestamp (ISO 8601) of when this historical quote was recorded."
      num_market_pairs:
        type: "number"
        example: 1.23456789E8
        description: "Number of market pairs available at the current historical interval."
      quote:
        description: "A map of market details for this quote in different currency\
          \ conversions. The default map included is USD."
        $ref: "#/definitions/Exchange Historical Quotes - Quote currency map"
    description: "An object containing details for the current interval quote."
  Exchange Historical Quotes - Interval Quotes array:
    type: "array"
    description: "An array of quotes for each interval for this exchange."
    items:
      description: "An object containing details for the current interval quote."
      $ref: "#/definitions/Exchange Historical Quotes - nterval Quote object"
  Exchange Historical Quotes - exchange object:
    type: "object"
    required:
    - "id"
    - "name"
    - "quotes"
    - "slug"
    properties:
      id:
        type: "integer"
        example: 1
        description: "The CoinMarketCap exchange ID."
      name:
        type: "string"
        example: "Binance"
        description: "The exchange name."
      slug:
        type: "string"
        example: "binance"
        description: "The exchange slug."
      quotes:
        description: "An array of quotes for each interval for this exchange."
        $ref: "#/definitions/Exchange Historical Quotes - Interval Quotes array"
    description: "An exchange object for each exchange requested. The map key being\
      \ the id/slug used in the request."
  Exchange Historical Quotes - Results map:
    type: "object"
    required:
    - "$key"
    properties:
      $key:
        description: "An exchange object for each exchange requested. The map key\
          \ being the id/slug used in the request."
        $ref: "#/definitions/Exchange Historical Quotes - exchange object"
    description: "Results of your query returned as an object map."
    example:
      id: 270
      name: "Binance"
      slug: "binance"
      quotes:
      - timestamp: "2018-06-03T00:00:00.000Z"
        quote:
          USD:
            volume_24h: 1632390000
            timestamp: "2018-06-03T00:00:00.000Z"
        num_market_pairs: 338
      - timestamp: "2018-06-10T00:00:00.000Z"
        quote:
          USD:
            volume_24h: 1034720000
            timestamp: "2018-06-10T00:00:00.000Z"
        num_market_pairs: 349
      - timestamp: "2018-06-17T00:00:00.000Z"
        quote:
          USD:
            volume_24h: 883885000
            timestamp: "2018-06-17T00:00:00.000Z"
        num_market_pairs: 357
  Exchange Historical Quotes - Response Model:
    type: "object"
    required:
    - "data"
    properties:
      data:
        description: "Results of your query returned as an object map."
        $ref: "#/definitions/Exchange Historical Quotes - Results map"
      status:
        description: "Standardized status object for API calls."
        $ref: "#/definitions/API Status Object"
    example:
      data:
        id: 270
        name: "Binance"
        slug: "binance"
        quotes:
        - timestamp: "2018-06-03T00:00:00.000Z"
          quote:
            USD:
              volume_24h: 1632390000
              timestamp: "2018-06-03T00:00:00.000Z"
          num_market_pairs: 338
        - timestamp: "2018-06-10T00:00:00.000Z"
          quote:
            USD:
              volume_24h: 1034720000
              timestamp: "2018-06-10T00:00:00.000Z"
          num_market_pairs: 349
        - timestamp: "2018-06-17T00:00:00.000Z"
          quote:
            USD:
              volume_24h: 883885000
              timestamp: "2018-06-17T00:00:00.000Z"
          num_market_pairs: 357
      status:
        error_message: ""
        elapsed: 10
        credit_count: 1
        error_code: 0
        timestamp: "2022-09-16T12:55:54.015Z"
  Exchange Quotes Latest - Quote object:
    type: "object"
    required:
    - "last_updated"
    - "percent_change_volume_24h"
    - "percent_change_volume_30d"
    - "percent_change_volume_7d"
    - "volume_24h"
    - "volume_24h_adjusted"
    - "volume_30d"
    - "volume_7d"
    properties:
      last_updated:
        type: "string"
        format: "date"
        example: "2018-06-02T22:51:28.209Z"
        description: "Timestamp (ISO 8601) of when the conversion currency's current\
          \ value was referenced for this conversion."
      volume_24h:
        type: "number"
        example: 7.68478308529847E8
        description: "Reported 24 hour volume in the specified currency."
      volume_24h_adjusted:
        type: "number"
        example: 7.68478308529847E8
        description: "Adjusted 24 hour volume in the specified currency for spot markets\
          \ excluding markets with no fees and transaction mining."
      volume_7d:
        type: "number"
        example: 3.666423776E9
        description: "7 day volume in the specified currency."
      volume_30d:
        type: "number"
        example: 2.1338299776E10
        description: "30 day volume in the specified currency."
      percent_change_volume_24h:
        type: "number"
        example: 0.03
        description: "24 hour percent change in the specified currency."
      percent_change_volume_7d:
        type: "number"
        example: 5.75
        description: "7 day percent change in the specified currency."
      percent_change_volume_30d:
        type: "number"
        example: -19.64
        description: "30 day percent change in the specified currency."
      effective_liquidity_24h:
        type: "number"
        example: -19.64
        description: "24 hour liquidity in the specified currency."
      derivative_volume:
        type: "number"
        example: 7.68478308529847E8
        description: "Reported 24 hour derivative volume in the specified currency."
      spot_volume:
        type: "number"
        example: 7.68478308529847E8
        description: "Reported 24 hour spot volume in the specified currency."
    description: "A market quote in the currency conversion option."
  Exchange Quotes Latest - Quote map:
    type: "object"
    required:
    - "$key"
    properties:
      $key:
        description: "A market quote in the currency conversion option."
        $ref: "#/definitions/Exchange Quotes Latest - Quote object"
    description: "A map of market quotes in different currency conversions. The default\
      \ map included is USD."
  Exchange Quotes Latest - Exchange object:
    type: "object"
    required:
    - "id"
    - "last_updated"
    - "name"
    - "num_market_pairs"
    - "quote"
    - "slug"
    properties:
      id:
        type: "integer"
        example: 1
        description: "The CoinMarketCap exchange ID."
      name:
        type: "string"
        example: "Binance"
        description: "The exchange name."
      slug:
        type: "string"
        example: "binance"
        description: "The exchange slug."
      num_market_pairs:
        type: "integer"
        example: 500
        description: "The number of active trading pairs available for this exchange."
      exchange_score:
        type: "number"
        example: 9.8
        description: "The exchange score."
      liquidity_score:
        type: "number"
        example: 9.8
        description: "The liquidity score."
      rank:
        type: "integer"
        example: 5
        description: "The exchange rank."
      traffic_score:
        type: "number"
        example: 1000.0
        description: "The traffic score."
      last_updated:
        type: "string"
        format: "date"
        example: "2018-06-02T00:00:00.000Z"
        description: "Timestamp (ISO 8601) of the last time this exchange's market\
          \ data was updated."
      quote:
        description: "A map of market quotes in different currency conversions. The\
          \ default map included is USD."
        $ref: "#/definitions/Exchange Quotes Latest - Quote map"
    description: "An exchange object for each requested."
  Exchange Quotes Latest - Exchange Results map:
    type: "object"
    required:
    - "$key"
    properties:
      $key:
        description: "An exchange object for each requested."
        $ref: "#/definitions/Exchange Quotes Latest - Exchange object"
    description: "A map of exchange objects by ID or slugs (as used in query parameters)."
    example:
      "270":
        id: 270
        name: "Binance"
        slug: "binance"
        num_coins: 132
        num_market_pairs: 385
        last_updated: "2018-11-08T22:11:00.000Z"
        traffic_score: 1000
        rank: 1
        exchange_score: 9.8028
        liquidity_score: 9.8028
        quote:
          USD:
            volume_24h: 7.68478308529847E8
            volume_24h_adjusted: 7.68478308529847E8
            volume_7d: 3666423776
            volume_30d: 21338299776
            percent_change_volume_24h: -11.8232
            percent_change_volume_7d: 67.0306
            percent_change_volume_30d: -0.0821558
            effective_liquidity_24h: 629.9774
  Exchange Quotes Latest - Response Model:
    type: "object"
    required:
    - "data"
    properties:
      data:
        description: "A map of exchange objects by ID or slugs (as used in query parameters)."
        $ref: "#/definitions/Exchange Quotes Latest - Exchange Results map"
      status:
        description: "Standardized status object for API calls."
        $ref: "#/definitions/API Status Object"
    example:
      data:
        "270":
          id: 270
          name: "Binance"
          slug: "binance"
          num_coins: 132
          num_market_pairs: 385
          last_updated: "2018-11-08T22:11:00.000Z"
          traffic_score: 1000
          rank: 1
          exchange_score: 9.8028
          liquidity_score: 9.8028
          quote:
            USD:
              volume_24h: 7.68478308529847E8
              volume_24h_adjusted: 7.68478308529847E8
              volume_7d: 3666423776
              volume_30d: 21338299776
              percent_change_volume_24h: -11.8232
              percent_change_volume_7d: 67.0306
              percent_change_volume_30d: -0.0821558
              effective_liquidity_24h: 629.9774
      status:
        error_message: ""
        elapsed: 10
        credit_count: 1
        error_code: 0
        timestamp: "2022-09-16T12:55:54.015Z"
  Global Metrics Quotes Historic - Currency Quote object:
    type: "object"
    required:
    - "altcoin_market_cap"
    - "altcoin_volume_24h"
    - "altcoin_volume_24h_reported"
    - "timestamp"
    - "total_market_cap"
    - "total_volume_24h"
    - "total_volume_24h_reported"
    properties:
      total_market_cap:
        type: "number"
        example: 3.75179E11
        description: "The sum of all individual cryptocurrency market capitalizations\
          \ at the given point in time, historically converted into units of the requested\
          \ currency."
      total_volume_24h:
        type: "number"
        example: 1.99184E10
        description: "The sum of rolling 24 hour adjusted volume (as outlined in our\
          \ methodology) for all cryptocurrencies at the given point in time, historically\
          \ converted into units of the requested currency."
      total_volume_24h_reported:
        type: "number"
        example: 1.99184E10
        description: "The sum of rolling 24 hour reported volume for all cryptocurrencies\
          \ at the given point in time, historically converted into units of the requested\
          \ currency. *Note: This field is only available after 2019-05-10 and will\
          \ return `null` prior to that time.*"
      altcoin_market_cap:
        type: "number"
        example: 1.875895E11
        description: "The sum of rolling 24 hour adjusted volume (as outlined in our\
          \ methodology) for all cryptocurrencies excluding Bitcoin at the given point\
          \ in time, historically converted into units of the requested currency."
      altcoin_volume_24h:
        type: "number"
        example: 1.99184E10
        description: "The sum of all individual cryptocurrency market capitalizations\
          \ excluding Bitcoin at the given point in time, historically converted into\
          \ units of the requested currency."
      altcoin_volume_24h_reported:
        type: "number"
        example: 1.99184E10
        description: "The sum of rolling 24 hour reported volume for all cryptocurrencies\
          \ excluding Bitcoin at the given point in time, historically converted into\
          \ units of the requested currency. *Note: This field is only available after\
          \ 2019-05-10 and will return `null` prior to that time.*"
      timestamp:
        type: "string"
        format: "date"
        example: "2018-06-02T22:51:28.209Z"
        description: "Timestamp (ISO 8601) of when the conversion currency's current\
          \ value was referenced for this conversion."
    description: "The market details for the current interval and currency conversion\
      \ option. The map key being the curency symbol."
  Global Metrics Quotes Historic - Quote currency map:
    type: "object"
    required:
    - "$key"
    properties:
      $key:
        description: "The market details for the current interval and currency conversion\
          \ option. The map key being the curency symbol."
        $ref: "#/definitions/Global Metrics Quotes Historic - Currency Quote object"
    description: "An object containing market data for this interval by currency option.\
      \ The default currency mapped is USD."
  Global Metrics Quotes Historic - Interval Quote object:
    type: "object"
    required:
    - "active_cryptocurrencies"
    - "active_exchanges"
    - "active_market_pairs"
    - "btc_dominance"
    - "quote"
    - "timestamp"
    properties:
      timestamp:
        type: "string"
        format: "date"
        example: "2018-06-02T00:00:00.000Z"
        description: "Timestamp (ISO 8601) of when this historical quote was recorded."
      search_interval:
        type: "string"
        format: "date"
        example: "2018-06-02T00:00:00.000Z"
        description: "The interval timestamp for the search period that this historical\
          \ quote was located against. *This field is only returned if requested through\
          \ the `aux` request parameter.*"
      btc_dominance:
        type: "number"
        description: "Percent of BTC market dominance by marketcap at this interval."
      active_cryptocurrencies:
        type: "number"
        example: 500.0
        description: "Number of active cryptocurrencies tracked by CoinMarketCap at\
          \ the given point in time. This includes all cryptocurrencies with a `listing_status`\
          \ of \"active\" or \"untracked\" as returned from our /cryptocurrency/map\
          \ call. *Note: This field is only available after 2019-05-10 and will return\
          \ `null` prior to that time.*"
      active_exchanges:
        type: "number"
        example: 200.0
        description: "Number of active exchanges tracked by CoinMarketCap at the given\
          \ point in time. This includes all exchanges with a `listing_status` of\
          \ \"active\" or \"untracked\" as returned by our /exchange/map call. *Note:\
          \ This field is only available after 2019-06-18 and will return `null` prior\
          \ to that time.*"
      active_market_pairs:
        type: "number"
        example: 1000.0
        description: "Number of active market pairs tracked by CoinMarketCap across\
          \ all exchanges at the given point in time. *Note: This field is only available\
          \ after 2019-05-10 and will return `null` prior to that time.*"
      quote:
        description: "An object containing market data for this interval by currency\
          \ option. The default currency mapped is USD."
        $ref: "#/definitions/Global Metrics Quotes Historic - Quote currency map"
    description: "An object containing details for the current interval quote."
  Global Metrics Quotes Historic - Interval Quotes array:
    type: "array"
    description: "An array of aggregate market quotes for each interval."
    items:
      description: "An object containing details for the current interval quote."
      $ref: "#/definitions/Global Metrics Quotes Historic - Interval Quote object"
  Global Metrics Quotes Historic - Results object:
    type: "object"
    required:
    - "quotes"
    properties:
      quotes:
        description: "An array of aggregate market quotes for each interval."
        $ref: "#/definitions/Global Metrics Quotes Historic - Interval Quotes array"
    description: "Results of your query returned as an object."
    example:
      quotes:
      - timestamp: "2018-07-31T00:02:00.000Z"
        btc_dominance: 47.9949
        active_cryptocurrencies: 2500
        active_exchanges: 600
        active_market_pairs: 1000
        quote:
          USD:
            total_market_cap: 2.92863223827394E11
            total_volume_24h: 1.76921526297864E10
            total_volume_24h_reported: 375179000000
            altcoin_market_cap: 187589500000
            altcoin_volume_24h: 375179000000
            altcoin_volume_24h_reported: 375179000000
            timestamp: "2018-07-31T00:02:00.000Z"
      - timestamp: "2018-08-01T00:02:00.000Z"
        btc_dominance: 48.0585
        active_cryptocurrencies: 2500
        active_exchanges: 600
        active_market_pairs: 1000
        quote:
          USD:
            total_market_cap: 2.77770824530303E11
            total_volume_24h: 1.53980855490344E10
            total_volume_24h_reported: 375179000000
            altcoin_market_cap: 187589500000
            altcoin_volume_24h: 375179000000
            altcoin_volume_24h_reported: 375179000000
            timestamp: "2018-07-31T00:02:00.000Z"
      - timestamp: "2018-08-02T00:02:00.000Z"
        btc_dominance: 48.041
        active_cryptocurrencies: 2500
        active_exchanges: 600
        active_market_pairs: 1000
        quote:
          USD:
            total_market_cap: 2.73078776005223E11
            total_volume_24h: 1.43000716950547E10
            total_volume_24h_reported: 375179000000
            altcoin_market_cap: 187589500000
            altcoin_volume_24h: 375179000000
            altcoin_volume_24h_reported: 375179000000
            timestamp: "2018-07-31T00:02:00.000Z"
  Global Metrics Quotes Historic - Response Model:
    type: "object"
    required:
    - "data"
    properties:
      data:
        description: "Results of your query returned as an object."
        $ref: "#/definitions/Global Metrics Quotes Historic - Results object"
      status:
        description: "Standardized status object for API calls."
        $ref: "#/definitions/API Status Object"
    example:
      data:
        quotes:
        - timestamp: "2018-07-31T00:02:00.000Z"
          btc_dominance: 47.9949
          active_cryptocurrencies: 2500
          active_exchanges: 600
          active_market_pairs: 1000
          quote:
            USD:
              total_market_cap: 2.92863223827394E11
              total_volume_24h: 1.76921526297864E10
              total_volume_24h_reported: 375179000000
              altcoin_market_cap: 187589500000
              altcoin_volume_24h: 375179000000
              altcoin_volume_24h_reported: 375179000000
              timestamp: "2018-07-31T00:02:00.000Z"
        - timestamp: "2018-08-01T00:02:00.000Z"
          btc_dominance: 48.0585
          active_cryptocurrencies: 2500
          active_exchanges: 600
          active_market_pairs: 1000
          quote:
            USD:
              total_market_cap: 2.77770824530303E11
              total_volume_24h: 1.53980855490344E10
              total_volume_24h_reported: 375179000000
              altcoin_market_cap: 187589500000
              altcoin_volume_24h: 375179000000
              altcoin_volume_24h_reported: 375179000000
              timestamp: "2018-07-31T00:02:00.000Z"
        - timestamp: "2018-08-02T00:02:00.000Z"
          btc_dominance: 48.041
          active_cryptocurrencies: 2500
          active_exchanges: 600
          active_market_pairs: 1000
          quote:
            USD:
              total_market_cap: 2.73078776005223E11
              total_volume_24h: 1.43000716950547E10
              total_volume_24h_reported: 375179000000
              altcoin_market_cap: 187589500000
              altcoin_volume_24h: 375179000000
              altcoin_volume_24h_reported: 375179000000
              timestamp: "2018-07-31T00:02:00.000Z"
      status:
        error_message: ""
        elapsed: 10
        credit_count: 1
        error_code: 0
        timestamp: "2022-09-16T12:55:54.015Z"
  Global Metrics Quotes Latest - Quote object:
    type: "object"
    required:
    - "altcoin_market_cap"
    - "altcoin_volume_24h"
    - "altcoin_volume_24h_reported"
    - "last_updated"
    - "total_market_cap"
    - "total_volume_24h"
    - "total_volume_24h_reported"
    properties:
      total_market_cap:
        type: "number"
        example: 2.50385096532124E11
        description: "The sum of all individual cryptocurrency market capitalizations\
          \ in the requested currency."
      total_volume_24h:
        type: "number"
        example: 1.19270642406968E11
        description: "The sum of rolling 24 hour adjusted volume (as outlined in our\
          \ methodology) for all cryptocurrencies in the requested currency."
      total_volume_24h_reported:
        type: "number"
        example: 1.51490541839087E9
        description: "The sum of rolling 24 hour reported volume for all cryptocurrencies\
          \ in the requested currency."
      altcoin_volume_24h:
        type: "number"
        example: 1.19270642406968E11
        description: "The sum of rolling 24 hour adjusted volume (as outlined in our\
          \ methodology) for all cryptocurrencies excluding Bitcoin in the requested\
          \ currency."
      altcoin_volume_24h_reported:
        type: "number"
        example: 1.51490541839087E9
        description: "The sum of rolling 24 hour reported volume for all cryptocurrencies\
          \ excluding Bitcoin in the requested currency."
      altcoin_market_cap:
        type: "number"
        example: 2.50385096532124E11
        description: "The sum of all individual cryptocurrency market capitalizations\
          \ excluding Bitcoin in the requested currency."
      last_updated:
        type: "string"
        format: "date"
        example: "2019-05-16T18:47:00.000Z"
        description: "Timestamp (ISO 8601) of when the conversion currency's current\
          \ value was referenced."
    description: "A market quote in the currency conversion option."
  Global Metrics Quotes Latest - Quote map:
    type: "object"
    required:
    - "$key"
    properties:
      $key:
        description: "A market quote in the currency conversion option."
        $ref: "#/definitions/Global Metrics Quotes Latest - Quote object"
    description: "A map of market quotes in different currency conversions. The default\
      \ map included is USD."
    example:
      active_cryptocurrencies: 4986
      total_cryptocurrencies: 9607
      active_market_pairs: 39670
      active_exchanges: 372
      total_exchanges: 1347
      eth_dominance: 16.989007016505
      btc_dominance: 45.002265776962
      eth_dominance_yesterday: 17.25405255
      btc_dominance_yesterday: 45.41455043
      eth_dominance_24h_percentage_change: -0.265045533495
      btc_dominance_24h_percentage_change: -0.412284653038
      defi_volume_24h: 2.0443320643718483E10
      defi_volume_24h_reported: 2.0443320643718483E10
      defi_market_cap: 1.312901227691664E11
      defi_24h_percentage_change: -17.648761478379
      stablecoin_volume_24h: 2.0925842049251562E11
      stablecoin_volume_24h_reported: 2.0925842049251562E11
      stablecoin_market_cap: 9.560604343270901E10
      stablecoin_24h_percentage_change: 2.518312658305
      derivatives_volume_24h: 2.8242034106398895E11
      derivatives_volume_24h_reported: 2.8242034106398895E11
      derivatives_24h_percentage_change: -13.893947771549
      quote:
        USD:
          total_market_cap: 2.3744320839056846E12
          total_volume_24h: 2.6290606128124E11
          total_volume_24h_reported: 2.6290606128124E11
          altcoin_volume_24h: 1.951750958160813E11
          altcoin_volume_24h_reported: 1.951750958160813E11
          altcoin_market_cap: 1.3058838468129905E12
          defi_volume_24h: 2.0443320643718483E10
          defi_volume_24h_reported: 2.0443320643718483E10
          defi_24h_percentage_change: -17.648761478379
          defi_market_cap: 1.312901227691664E11
          stablecoin_volume_24h: 2.0925842049251562E11
          stablecoin_volume_24h_reported: 2.0925842049251562E11
          stablecoin_24h_percentage_change: 2.518312658305
          stablecoin_market_cap: 9.560604343270901E10
          derivatives_volume_24h: 2.8242034106398895E11
          derivatives_volume_24h_reported: 2.8242034106398895E11
          derivatives_24h_percentage_change: -13.893947771549
          last_updated: "2021-05-06T01:45:17.999Z"
          total_market_cap_yesterday: 2.2551758795673643E12
          total_volume_24h_yesterday: 2.549118417235E11
          total_market_cap_yesterday_percentage_change: 5.288111025788297
          total_volume_24h_yesterday_percentage_change: 3.1360722607823135
      last_updated: "2021-05-06T01:45:17.999Z"
  Global Metrics Quotes Latest - Results Object:
    type: "object"
    required:
    - "active_cryptocurrencies"
    - "active_exchanges"
    - "active_market_pairs"
    - "last_updated"
    - "quote"
    - "total_cryptocurrencies"
    - "total_exchanges"
    properties:
      btc_dominance:
        type: "number"
        example: 67.0057
        description: "Bitcoin's market dominance percentage by market cap."
      eth_dominance:
        type: "number"
        example: 9.02205
        description: "Ethereum's market dominance percentage by market cap."
      active_cryptocurrencies:
        type: "number"
        example: 2941.0
        description: "Count of active cryptocurrencies tracked by CoinMarketCap. This\
          \ includes all cryptocurrencies with a `listing_status` of \"active\" or\
          \ \"listed\" as returned from our /cryptocurrency/map call."
      total_cryptocurrencies:
        type: "number"
        example: 4637.0
        description: "Count of all cryptocurrencies tracked by CoinMarketCap. This\
          \ includes \"inactive\" `listing_status` cryptocurrencies."
      active_market_pairs:
        type: "number"
        example: 21209.0
        description: "Count of active market pairs tracked by CoinMarketCap across\
          \ all exchanges."
      active_exchanges:
        type: "number"
        example: 445.0
        description: "Count of active exchanges tracked by CoinMarketCap. This includes\
          \ all exchanges with a `listing_status` of \"active\" or \"listed\" as returned\
          \ by our /exchange/map call."
      total_exchanges:
        type: "number"
        example: 677.0
        description: "Count of all exchanges tracked by CoinMarketCap. This includes\
          \ \"inactive\" `listing_status` exchanges."
      last_updated:
        type: "string"
        format: "date"
        example: "2019-05-16T18:47:00.000Z"
        description: "Timestamp of when this record was last updated."
      quote:
        description: "A map of market quotes in different currency conversions. The\
          \ default map included is USD."
        $ref: "#/definitions/Global Metrics Quotes Latest - Quote map"
    description: "Results object for your API call."
    example:
      last_updated: "2019-05-16T18:47:00.000Z"
      quote:
        active_cryptocurrencies: 4986
        total_cryptocurrencies: 9607
        active_market_pairs: 39670
        active_exchanges: 372
        total_exchanges: 1347
        eth_dominance: 16.989007016505
        btc_dominance: 45.002265776962
        eth_dominance_yesterday: 17.25405255
        btc_dominance_yesterday: 45.41455043
        eth_dominance_24h_percentage_change: -0.265045533495
        btc_dominance_24h_percentage_change: -0.412284653038
        defi_volume_24h: 2.0443320643718483E10
        defi_volume_24h_reported: 2.0443320643718483E10
        defi_market_cap: 1.312901227691664E11
        defi_24h_percentage_change: -17.648761478379
        stablecoin_volume_24h: 2.0925842049251562E11
        stablecoin_volume_24h_reported: 2.0925842049251562E11
        stablecoin_market_cap: 9.560604343270901E10
        stablecoin_24h_percentage_change: 2.518312658305
        derivatives_volume_24h: 2.8242034106398895E11
        derivatives_volume_24h_reported: 2.8242034106398895E11
        derivatives_24h_percentage_change: -13.893947771549
        quote:
          USD:
            total_market_cap: 2.3744320839056846E12
            total_volume_24h: 2.6290606128124E11
            total_volume_24h_reported: 2.6290606128124E11
            altcoin_volume_24h: 1.951750958160813E11
            altcoin_volume_24h_reported: 1.951750958160813E11
            altcoin_market_cap: 1.3058838468129905E12
            defi_volume_24h: 2.0443320643718483E10
            defi_volume_24h_reported: 2.0443320643718483E10
            defi_24h_percentage_change: -17.648761478379
            defi_market_cap: 1.312901227691664E11
            stablecoin_volume_24h: 2.0925842049251562E11
            stablecoin_volume_24h_reported: 2.0925842049251562E11
            stablecoin_24h_percentage_change: 2.518312658305
            stablecoin_market_cap: 9.560604343270901E10
            derivatives_volume_24h: 2.8242034106398895E11
            derivatives_volume_24h_reported: 2.8242034106398895E11
            derivatives_24h_percentage_change: -13.893947771549
            last_updated: "2021-05-06T01:45:17.999Z"
            total_market_cap_yesterday: 2.2551758795673643E12
            total_volume_24h_yesterday: 2.549118417235E11
            total_market_cap_yesterday_percentage_change: 5.288111025788297
            total_volume_24h_yesterday_percentage_change: 3.1360722607823135
        last_updated: "2021-05-06T01:45:17.999Z"
      active_exchanges: 445.0
      eth_dominance: 9.02205
      active_cryptocurrencies: 2941.0
      total_cryptocurrencies: 4637.0
      total_exchanges: 677.0
      btc_dominance: 67.0057
      active_market_pairs: 21209.0
  Global Metrics Quotes Latest - Response Model:
    type: "object"
    required:
    - "data"
    properties:
      data:
        description: "Results object for your API call."
        $ref: "#/definitions/Global Metrics Quotes Latest - Results Object"
      status:
        description: "Standardized status object for API calls."
        $ref: "#/definitions/API Status Object"
    example:
      data:
        last_updated: "2019-05-16T18:47:00.000Z"
        quote:
          active_cryptocurrencies: 4986
          total_cryptocurrencies: 9607
          active_market_pairs: 39670
          active_exchanges: 372
          total_exchanges: 1347
          eth_dominance: 16.989007016505
          btc_dominance: 45.002265776962
          eth_dominance_yesterday: 17.25405255
          btc_dominance_yesterday: 45.41455043
          eth_dominance_24h_percentage_change: -0.265045533495
          btc_dominance_24h_percentage_change: -0.412284653038
          defi_volume_24h: 2.0443320643718483E10
          defi_volume_24h_reported: 2.0443320643718483E10
          defi_market_cap: 1.312901227691664E11
          defi_24h_percentage_change: -17.648761478379
          stablecoin_volume_24h: 2.0925842049251562E11
          stablecoin_volume_24h_reported: 2.0925842049251562E11
          stablecoin_market_cap: 9.560604343270901E10
          stablecoin_24h_percentage_change: 2.518312658305
          derivatives_volume_24h: 2.8242034106398895E11
          derivatives_volume_24h_reported: 2.8242034106398895E11
          derivatives_24h_percentage_change: -13.893947771549
          quote:
            USD:
              total_market_cap: 2.3744320839056846E12
              total_volume_24h: 2.6290606128124E11
              total_volume_24h_reported: 2.6290606128124E11
              altcoin_volume_24h: 1.951750958160813E11
              altcoin_volume_24h_reported: 1.951750958160813E11
              altcoin_market_cap: 1.3058838468129905E12
              defi_volume_24h: 2.0443320643718483E10
              defi_volume_24h_reported: 2.0443320643718483E10
              defi_24h_percentage_change: -17.648761478379
              defi_market_cap: 1.312901227691664E11
              stablecoin_volume_24h: 2.0925842049251562E11
              stablecoin_volume_24h_reported: 2.0925842049251562E11
              stablecoin_24h_percentage_change: 2.518312658305
              stablecoin_market_cap: 9.560604343270901E10
              derivatives_volume_24h: 2.8242034106398895E11
              derivatives_volume_24h_reported: 2.8242034106398895E11
              derivatives_24h_percentage_change: -13.893947771549
              last_updated: "2021-05-06T01:45:17.999Z"
              total_market_cap_yesterday: 2.2551758795673643E12
              total_volume_24h_yesterday: 2.549118417235E11
              total_market_cap_yesterday_percentage_change: 5.288111025788297
              total_volume_24h_yesterday_percentage_change: 3.1360722607823135
          last_updated: "2021-05-06T01:45:17.999Z"
        active_exchanges: 445.0
        eth_dominance: 9.02205
        active_cryptocurrencies: 2941.0
        total_cryptocurrencies: 4637.0
        total_exchanges: 677.0
        btc_dominance: 67.0057
        active_market_pairs: 21209.0
      status:
        error_message: ""
        elapsed: 10
        credit_count: 1
        error_code: 0
        timestamp: "2022-09-16T12:55:54.015Z"
  FCAS Listings Latest - Cryptocurrency object:
    type: "object"
    required:
    - "id"
    - "name"
    - "slug"
    - "symbol"
    properties:
      id:
        type: "integer"
        example: 1
        description: "The unique CoinMarketCap ID for this cryptocurrency."
      name:
        type: "string"
        example: "Bitcoin"
        description: "The name of this cryptocurrency."
      symbol:
        type: "string"
        example: "BTC"
        description: "The ticker symbol for this cryptocurrency."
      slug:
        type: "string"
        example: "bitcoin"
        description: "The web URL friendly shorthand version of this cryptocurrency\
          \ name."
      score:
        type: "integer"
        example: 1000
        description: "The cryptocurrency's current FCAS score out of 1000"
        minimum: 0
        maximum: 1000
      grade:
        type: "string"
        example: "A"
        description: "The cryptocurrency's current FCAS letter grade"
      percent_change_24h:
        type: "number"
        example: 0.03
        description: "24 hour % FCAS score change"
      point_change_24h:
        type: "number"
        example: 5.0
        description: "24 hour FCAS point change"
        minimum: -1000
        maximum: 1000
      last_updated:
        type: "string"
        format: "date"
        example: "2018-06-02T23:59:59.999Z"
        description: "Timestamp (ISO 8601) of the last time this cryptocurrency's\
          \ FCAS value was updated."
    description: "A cryptocurrency object for every cryptocurrency that matched list\
      \ options."
  FCAS Listings Latest - Results array:
    type: "array"
    description: "Array of cryptocurrency objects matching the list options."
    items:
      description: "A cryptocurrency object for every cryptocurrency that matched\
        \ list options."
      $ref: "#/definitions/FCAS Listings Latest - Cryptocurrency object"
  FCAS Listings Latest - Response Model:
    type: "object"
    required:
    - "data"
    properties:
      data:
        description: "Array of cryptocurrency objects matching the list options."
        $ref: "#/definitions/FCAS Listings Latest - Results array"
      status:
        description: "Standardized status object for API calls."
        $ref: "#/definitions/API Status Object"
    example:
      data:
      - id: 1027
        name: "Ethereum"
        symbol: "ETH"
        slug: "ethereum"
        score: 971
        grade: "S"
        last_updated: "2021-05-05T00:00:00Z"
      - id: 2010
        name: "Cardano"
        symbol: "ADA"
        slug: "cardano"
        score: 961
        grade: "S"
        last_updated: "2021-05-05T00:00:00Z"
      status:
        timestamp: "2018-06-02T22:51:28.209Z"
        error_code: 0
        error_message: ""
        elapsed: 10
        credit_count: 1
  FCAS Quote Latest - Cryptocurrency object:
    type: "object"
    required:
    - "id"
    - "name"
    - "slug"
    - "symbol"
    properties:
      id:
        type: "integer"
        example: 1
        description: "The unique CoinMarketCap ID for this cryptocurrency."
      name:
        type: "string"
        example: "Bitcoin"
        description: "The name of this cryptocurrency."
      symbol:
        type: "string"
        example: "BTC"
        description: "The ticker symbol for this cryptocurrency."
      slug:
        type: "string"
        example: "bitcoin"
        description: "The web URL friendly shorthand version of this cryptocurrency\
          \ name."
      score:
        type: "integer"
        example: 1000
        description: "The cryptocurrency's current FCAS score out of 1000"
        minimum: 0
        maximum: 1000
      grade:
        type: "string"
        example: "A"
        description: "The cryptocurrency's current FCAS letter grade"
      percent_change_24h:
        type: "number"
        example: 0.03
        description: "24 hour % FCAS score change"
      point_change_24h:
        type: "number"
        example: 5.0
        description: "24 hour FCAS point change"
        minimum: -1000
        maximum: 1000
      last_updated:
        type: "string"
        format: "date"
        example: "2018-06-02T23:59:59.999Z"
        description: "Timestamp (ISO 8601) of the last time this cryptocurrency's\
          \ FCAS value was updated."
    description: "A cryptocurrency object for each requested."
  FCAS Quote Latest - Cryptocurrency Results map:
    type: "object"
    required:
    - "$key"
    properties:
      $key:
        description: "A cryptocurrency object for each requested."
        $ref: "#/definitions/FCAS Quote Latest - Cryptocurrency object"
    description: "A map of cryptocurrency objects by ID or symbol (as used in query\
      \ parameters)."
    example:
      "1":
        id: 1
        name: "Bitcoin"
        symbol: "BTC"
        slug: "bitcoin"
        score: 894
        grade: "A"
        percent_change_24h: 0.56
        point_change_24h: 5
        last_updated: "2019-08-08T00:00:00Z"
  FCAS Quote Latest - Response Model:
    type: "object"
    required:
    - "data"
    properties:
      data:
        description: "A map of cryptocurrency objects by ID or symbol (as used in\
          \ query parameters)."
        $ref: "#/definitions/FCAS Quote Latest - Cryptocurrency Results map"
      status:
        description: "Standardized status object for API calls."
        $ref: "#/definitions/API Status Object"
    example:
      data:
        "1":
          id: 1
          name: "Bitcoin"
          symbol: "BTC"
          slug: "bitcoin"
          score: 894
          grade: "A"
          percent_change_24h: 0.56
          point_change_24h: 5
          last_updated: "2019-08-08T00:00:00Z"
      status:
        error_message: ""
        elapsed: 10
        credit_count: 1
        error_code: 0
        timestamp: "2022-09-16T12:55:54.015Z"
